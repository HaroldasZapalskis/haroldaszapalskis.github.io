{"version":3,"sources":["Images/QLogo.png","Images/background.jpg","API/DownloadAPI.js","Components/ProjectsTable/ProjectsTable.jsx","Constants/ActionType.js","API/API.js","Actions/ProjectsTableActions.js","Components/LoadingScreen/LoadingScreen.jsx","Containers/ProjectsDisplay/ProjectsDisplay.jsx","Components/ProjectReport/CriticalListItem.jsx","Components/ProjectReport/TopicListItem.jsx","Components/Core-Components/DefaultMultiSelect/DefaultMultiSelect.jsx","Components/ProjectReport/ProjectUserList.jsx","Components/CriteriaDialog/CriteriaDialog.jsx","Components/ProjectReport/ProjectReport.jsx","Components/UserReport/TemplateReport.jsx","Components/UserReport/UserReport.jsx","Components/TeamReport/UserReport.jsx","Components/TeamReport/TeamReport.jsx","Containers/ReportsDisplay/ReportsDisplay.jsx","Components/TeamsListTable/TeamsListTable.jsx","Containers/TeamsDisplay/TeamsDisplay.jsx","Actions/TeamsListActions.js","Components/TemplateTable/TemplateTable.jsx","Containers/TemplatesDisplay/TemplatesDisplay.jsx","Actions/TemplateDisplayActions.js","Components/ArchivedUserListTable/ArchivedUserListTable.jsx","Containers/ArchiveDisplay/ArchiveDisplay.jsx","Actions/ArchivedUserListActions.js","Components/UserListTable/UserListTable.jsx","Containers/UserListDisplay/UserListDisplay.jsx","Actions/UserListActions.js","Components/LoginLayout/LoginLayout.jsx","Containers/LoginDisplay/LoginDisplay.jsx","Components/Core-Components/UnifiedModal/UnifiedModal.jsx","Components/Core-Components/DefaultTextArea/DefaultTextArea.jsx","Components/Core-Components/DefaultButton/DefaultButton.jsx","Components/Core-Components/UnifiedModal/ButtonBlock/ButtonBlock.jsx","Components/TemplateCreator/TemplateCreator.jsx","Containers/TemplateCreatorDisplay/TemplateCreatorDisplay.jsx","Components/TemplateEditor/TemplateEditor.jsx","Containers/TemplateEditorDisplay/TemplateEditorDisplay.jsx","Components/ProjectDetails/ProjectDetails.jsx","Containers/ProjectDetailsDisplay/ProjectDetailsDisplay.jsx","Components/UsersProjects/UsersProjects.jsx","Containers/UsersProjectsDisplay/UsersProjectsDisplay.jsx","Components/TemplateProjects/TemplateProjects.jsx","Containers/TemplateProjectsDisplay/TemplateProjectsDisplay.jsx","Components/TeamMembers/TeamMembers.jsx","Containers/TeamMembersDisplay/TeamMembersDisplay.jsx","Components/ProjectsTemplates/ProjectsTemplates.jsx","Containers/ProjectsTemplatesDisplay/ProjectsTemplatesDisplay.jsx","Components/UsersEvaluationsList/UsersEvaluationsList.jsx","Containers/UserReviewDisplay/UserReviewDisplay.jsx","Actions/UserEvaluationListActions.js","Components/CaseCreator/CaseCreator.jsx","Containers/CaseCreatorDisplay/CaseCreatorDisplay.jsx","Components/CaseEditor/CaseEditor.jsx","Containers/CaseEditorDisplay/CaseEditorDisplay.jsx","Components/TeamReviewList/TeamReviewList.jsx","Containers/TeamReviewDisplay/TeamReviewDisplay.jsx","Components/ProjectsReview/ProjectsReview.jsx","Containers/ProjectsReviewDisplay/ProjectsReviewDisplay.jsx","Components/User/UserEvaluationsList/UserEvaluationsList.jsx","Containers/User/EvaluationsDisplay/EvaluationsDisplay.jsx","Components/NavigationBreadcrumbsAdmin/NavigationBreadcrumbsAdmin.jsx","Components/User/Credentials/Credentials.jsx","Containers/User/CredentialsDisplay/CredentialsDisplay.jsx","Components/User/NavigationBreadcrumbsUser/NavigationBreadcrumbsUser.jsx","Components/User/CaseView/CaseView.jsx","Containers/User/CaseViewDisplay/CaseViewDisplay.jsx","Components/User/UserProjectsList/UserProjectsList.jsx","Containers/User/UserProjectsListDisplay/UserProjectsListDisplay.jsx","Components/Client/NavigationBreadcrumbsClient/NavigationBreadcrumbsClient.jsx","Components/Client/ClientProjectsList/ClientProjectsList.jsx","Containers/Client/ClientProjectsDisplay/ClientProjectsDisplay.jsx","Components/Client/ClientProjectReview/ClientProjectReview.jsx","Containers/Client/ClientProjectReviewDisplay/ClientProjectReviewDisplay.jsx","Components/Client/ClientUserReview/ClientUserReview.jsx","Containers/Client/ClientUserReviewDisplay/ClientUserReviewDisplay.jsx","Components/Client/ClientTemplatesList/ClientTemplatesList.jsx","Containers/Client/ClientTemplatesDisplay/ClientTemplatesDisplay.jsx","Components/Client/TemplateViewer/TemplateViewer.jsx","Containers/Client/TemplateViewerDisplay/TemplateViewerDisplay.jsx","Containers/User/UserReportsDisplay/ClientReportsDisplay.jsx","Routing.jsx","Store/reducer.jsx","Store/store.js","App.js","index.js"],"names":["module","exports","Api","axios","create","baseURL","responseType","DownloadProjectReport","id","start","end","a","get","params","then","response","downloadUrl","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","catch","error","Error","DownloadUserReport","DownloadClientUserReport","clientId","DownloadAllUsers","DownloadAllProjects","ProjectsTable","state","columns","title","field","customFilterAndSearch","term","rowData","name","toLowerCase","startsWith","validate","undefined","isValid","helperText","editable","render","templates","map","template","Chip","style","marginRight","marginTop","backgroundColor","key","label","onClick","location","some","isNaN","Math","round","score","points","parseInt","caseCount","this","setState","open","prevProps","minDate","props","maxDate","forceUpdate","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","padding","options","addRowPosition","filtering","actionsColumnIndex","pageSize","icons","projects","actions","icon","tooltip","event","Promise","resolve","setTimeout","onRowAdd","newData","addProject","onRowUpdate","oldData","updateProject","onRowDelete","deleteProject","components","Toolbar","utils","DateFnsUtils","IconButton","fontSize","marginLeft","disableToolbar","variant","format","margin","value","onChange","e","setMinDate","KeyboardButtonProps","Date","setMaxDate","onRowClick","togglePanel","target","tagName","Component","ActionType","headers","Login","console","log","post","FetchUserList","FetchArchivedUserList","FetchUserListSimple","FetchUserProjectsTemplates","FetchUsersForTeamSimple","FetchUserCredentials","UpdateUserCredentials","put","FetchUserToReview","AddToProjectUser","RemoveFromProjectUser","AddToProjectTemplate","RemoveFromProjectTemplate","ArchiveUser","UnarchiveUser","CreateUser","UpdateUser","AddProjectToUser","RemoveProjectFromUser","FetchUserForProjects","MarkUserDeleted","FetchTeamsList","FetchTeamsSimple","FetchTeamToReview","CreateTeam","UpdateTeam","FetchTeamsUsers","AddToTeam","RemoveFromTeam","FetchTemplatesList","FetchClientTemplatesList","FetchTemplateProjects","AddToTemplateProject","RemoveFromTemplateProject","FetchTemplateToEdit","FetchTemplateForCase","CreateTemplate","EditTemplate","CopyTemplate","DeleteTemplate","FetchProjectsList","FetchClientProjectsList","FetchProjectUserToReview","userId","projectId","FetchProjectsListForReview","FetchProjectsSimple","CreateProject","UpadateProjectName","DeleteProject","DeleteTeam","FetchProjectTemplates","FetchProjectToReview","min","max","FetchProjectUsers","FetchCaseToEdit","CreateCase","MarkEvaluationDeleted","UpdateCase","FetchProjectReport","FetchUserReport","FetchTeamReport","FetchClientUserReport","FetchClientProjectsSimple","FetchClientProjectsUsersSimple","FetchTemplateNames","require","dispatch","createdProject","updatedData","teams","type","payload","changeProjectName","updatedProject","LoadingScreen","textAlign","Backdrop","size","color","date","ProjectsDisplay","getFullYear","getMonth","fetchProjects","prevState","connect","Projects","templateNames","Templates","CustomTooltip","withStyles","Tooltip","CriticalListItem","critical","ListItem","description","ListItemIcon","arrow","TransitionComponent","Fade","interactive","DescriptionOutlined","ListItemText","ListItemSecondaryAction","breachedCount","borderTop","TopicListItem","useState","setOpen","Fragment","topic","button","KeyboardArrowDown","KeyboardArrowUp","List","paddingLeft","ListSubheader","disableSticky","result","group","criterias","reduce","r","Object","keys","forEach","comments","member","comment","push","getCriterias","criteria","FormControl","length","openDialog","CommentOutlined","DefaultMultiSelect","Autocomplete","defaultValue","multiple","limitTags","className","selectionsCount","getOptionLabel","option","renderInput","TextField","ProjectUserList","display","justifyContent","float","Collapse","in","paddingTop","paddingBottom","background","headerStyle","users","changeToUserReport","CriteriaDialog","Dialog","onClose","closeDialog","DialogTitle","height","getUsers","report","categories","categoryReports","category","user","filter","temp","includes","firstname","lastname","ProjectReport","openId","dialogOpen","dialogData","reports","OverallScore","download","GetAppRounded","borderRadius","calculateScore","count","calculateCases","criticals","breachCount","getCriticals","topics","getTopics","find","UserReport","CalculateUserScore","TemplateReport","TeamReport","ReportsDisplay","reportBy","reportObjects","reportItemId","Report","loading","sessionStorage","getItem","newType","Select","width","reportByChanged","MenuItem","autoComplete","includeInputInList","item","Button","clear","TeamsListTable","teamsList","project","createTeam","updateTeam","deleteTeam","TeamsDisplay","fetchTeamsList","Teams","teamList","createdTeam","average","userCount","TemplateTable","copyTemplate","deleteTemplate","TemplatesDisplay","fetchTemplates","marginBottom","ids","ArchivedUserListTable","lookup","archivedUserData","isArchived","unarchiveUser","deleteUser","role","ArchiveDisplay","fetchArchivedUserData","Users","userList","Archive","UserListTable","username","password","i","passwordLength","concat","editComponent","teamName","teamId","paddingRight","userData","archiveUser","localStorage","reload","newUser","pass","addUser","updateUser","UserListDisplay","fetchUserData","Copyright","Typography","align","Link","useStyles","makeStyles","theme","paper","flexDirection","alignItems","avatar","spacing","palette","secondary","main","form","submit","SignIn","classes","setUsername","setPassword","setLoading","errorIsShowing","setErrorIsShowing","attemtSignIn","setItem","Id","projectsCount","onKeyPress","src","RTCLogo","alt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","severity","Container","component","maxWidth","CssBaseline","Avatar","noValidate","required","fullWidth","autoFocus","disabled","Box","mt","LoginDisplay","UnifiedModal","Modal","children","DefaultTextArea","isRequiredErrorShown","isRequired","multiline","rows","onBlur","handleBur","inputProps","maxLength","DefaultButton","purpose","ButtonBlock","saveType","onSave","calculateSum","sum","index","TemplateCreator","modalOpen","criteriaModalOpen","commentTopicId","criteriaId","editing","templateName","currentCategory","TempTopics","TempCriteria","tempTopics","tempCategories","onDelete","entry","edge","aria-label","splice","indexOf","tempCriteria","parentId","newCriteria","oldCriteria","focused","outputData","TemplateName","Topics","Criteria","Categories","createTemplate","TemplateCreatorDisplay","TemplateNames","isEditable","otherTemplateName","editTemplate","split","TemplateEditor","ProjectDetails","dataSource","targetKeys","selectedKeys","onSelectChange","sourceSelectedKeys","targetSelectedKeys","filterOption","inputValue","nextTargetKeys","_direction","_moveKeys","addProjectMembers","removeProjectMembers","titles","rowHeight","listStyle","operations","showSearch","notFoundContent","searchPlaceholder","React","ProjectDetailsDisplay","UsersProjects","addProjectToUser","isClient","removeProjectFromUser","UsersProjectsDisplay","TemplateProjects","addProjectToTemplate","removeProjectFromTemplate","TemplateProjectsDisplay","TeamMembers","handleChange","addTeamMembers","team","removeTeamMembers","handleSelectChange","TeamMembersDisplay","ProjectsTemplates","addTemplate","removeTemplate","ProjectsTemplatesDisplay","UsersEvaluationsList","createdDate","updatedDate","projectName","evaluations","deleteEvaluation","UserReviewDisplay","User","calculateOverallScore","Evaluations","evaluation","fetchUsersEvaluations","projectCount","teamUsersCount","rating","CaseCreator","caseName","CategoryName","overallComment","breached","commentCriteriaId","previousProps","MountingProps","TopicTemplates","tempTopic","isCritical","failed","CriteriaTemplates","categoryName","getDate","TotalScore","TotalPoints","isChecked","Checkbox","checked","overflow","TopicScore","TopicPoints","crit","EvaluationTemplateName","UserId","ProjectId","EvaluatorId","createCase","CaseCreatorDisplay","templateId","EvaluationTemplates","native","CaseEditor","case","updateCase","CaseEditorDisplay","Case","TeamReviewList","evaluationsCount","TeamReviewDisplay","Team","ProjectsReview","ProjectsReviewDisplay","Project","UserEvaluationsList","EvaluationsDisplay","match","NavigationBreadcrumbsAdmin","currentPage","pathname","QLogo","Breadcrumbs","separator","WorkRounded","GroupWorkOutlined","DashboardRounded","AssignmentTurnedInOutlined","PeopleRounded","RestoreOutlined","Credentials","updateCredentials","CredentialsDisplay","updateUserCredentials","NavigationBreadcrumbsUser","FilterFramesRounded","ContactsRounded","CaseView","aria-describedby","CaseViewDisplay","UserProjectsList","overallScore","overallPoints","UserProjectsListDisplay","fetchProjectsReview","NavigationBreadcrumbsClient","ClientProjectsList","parseFloat","ClientProjectsDisplay","fetchClientProjects","ClientProjectReview","ClientProjectReviewDisplay","ClientUserReview","ClientUserReviewDisplay","fetchProjectUsersEvaluations","ClientTemplatesList","ClientTemplatesDisplay","fetchClientTemplates","TemplateViewer","TemplateViewerDisplay","UserReportsDisplay","Routing","path","exact","TemplateEditorDisplay","to","initialState","middlewares","thunk","store","createStore","action","updatedUser","tempUsers","oldUserId","TemplateToEdit","templateToEdit","tempTemplates","newTemplate","TempProjects","tempTeams","updatedTeam","tempEvaluations","applyMiddleware","App","divStyle","position","top","backgroundImage","backgroundSize","overflowY","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7477d330.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/QLogo.1c85c342.png\";","module.exports = __webpack_public_path__ + \"static/media/background.c8e42477.jpg\";","import axios from \"axios\";\r\n\r\nlet baseUri = \"http://46.252.205.197/plesk-site-preview/zapalskis.tech/api\"\r\nlet Api = axios.create({\r\n    baseURL: baseUri,\r\n    responseType: \"blob\", \r\n});\r\n\r\nexport const DownloadProjectReport = async (id, start, end) => {\r\n    return await Api.get(\"/Projects/report/download/\" + id, {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n\r\n            link.href = downloadUrl;\r\n\r\n            link.setAttribute('download', \"report.xls\"); //any other extension\r\n\r\n            document.body.appendChild(link);\r\n\r\n            link.click();\r\n\r\n            link.remove();\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DownloadUserReport = async (id, start, end) => {\r\n    return await Api.get(\"/Users/report/download/\" + id, {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n\r\n            link.href = downloadUrl;\r\n\r\n            link.setAttribute('download', \"report.xls\"); //any other extension\r\n\r\n            document.body.appendChild(link);\r\n\r\n            link.click();\r\n\r\n            link.remove();\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DownloadClientUserReport = async (id, clientId, start, end) => {\r\n    return await Api.get(\"/Users/Client/report/download/\" + id, {\r\n        params: {\r\n            clientId: clientId,\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n\r\n            link.href = downloadUrl;\r\n\r\n            link.setAttribute('download', \"report.xls\"); //any other extension\r\n\r\n            document.body.appendChild(link);\r\n\r\n            link.click();\r\n\r\n            link.remove();\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DownloadAllUsers = async (start, end) => {\r\n    return await Api.get(\"/Users/All/download/\", {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n\r\n            link.href = downloadUrl;\r\n\r\n            link.setAttribute('download', \"report.xls\"); //any other extension\r\n\r\n            document.body.appendChild(link);\r\n\r\n            link.click();\r\n\r\n            link.remove();\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DownloadAllProjects = async (start, end) => {\r\n    return await Api.get(\"/Projects/all/download/\", {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n\r\n            link.href = downloadUrl;\r\n\r\n            link.setAttribute('download', \"report.xls\"); //any other extension\r\n\r\n            document.body.appendChild(link);\r\n\r\n            link.click();\r\n\r\n            link.remove();\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { Chip, IconButton } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { DownloadAllProjects } from '../../API/DownloadAPI';\r\n\r\nclass ProjectsTable extends Component {\r\n    state = {}\r\n\r\n    componentDidMount() {\r\n        let columns = [\r\n            {\r\n                title: \"Project name\",\r\n                field: \"name\",\r\n                customFilterAndSearch: (term, rowData) => rowData.name.toLowerCase().startsWith(term.toLowerCase()),\r\n                validate: rowData => {\r\n                    if (rowData.name === \"\" || rowData.name === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Name must not be empty\"\r\n                        };\r\n                    }\r\n                    // else if (this.props.projects.some(project => project.name === rowData.name)) {\r\n                    //     return {\r\n                    //         isValid: false,\r\n                    //         helperText: \"Names must be unique\"\r\n                    //     };\r\n                    // }\r\n                    else return true;\r\n                }\r\n            },\r\n            {\r\n                editable: \"never\",\r\n                title: \"Templates\",\r\n                field: \"templates\",\r\n                render: rowData => <div>{rowData.templates.map(template => <Chip style={{ marginRight: 2, marginTop: 2, backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} key={template.id}\r\n                    label={template.name}\r\n                    onClick={() => window.location.href = \"/EditTemplate/\" + template.id} />)}</div>,\r\n                customFilterAndSearch: (term, rowData) => rowData.templates.some(template => template.name.toLowerCase().startsWith(term.toLowerCase()))\r\n            },\r\n            // {\r\n            //     editable: \"never\",\r\n            //     title: \"Teams\",\r\n            //     field: \"teams\",\r\n            //     render: rowData => <div>{rowData.teams.map(team => <Chip style={{ marginRight: 2, marginTop: 2 }} key={team.id}\r\n            //         label={team.name}\r\n            //         onClick={() => window.location.href = \"/TeamDetails/\" + team.id} />)}</div>,\r\n            //     customFilterAndSearch: (term, rowData) => rowData.teams.some(team => team.name.toLowerCase().startsWith(term.toLowerCase()))\r\n            // },\r\n            {\r\n                editable: \"never\", title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"caseCount\", customFilterAndSearch: (term, rowData) => rowData.caseCount === parseInt(term), editable: \"never\"\r\n            }\r\n        ];\r\n        this.setState({ columns: columns, open: false })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    options={{\r\n                        addRowPosition: \"first\",\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    icons={tableIcons}\r\n                    title=\"Projects\"\r\n                    columns={this.state.columns}\r\n                    data={this.props.projects}\r\n                    actions={[\r\n                        {\r\n                            icon: () => <DashboardIcon />,\r\n                            tooltip: \"Manage templates\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        window.location.href = \"/ProjectTemplates/\" + rowData.id\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        },\r\n                        // {\r\n                        //     icon: () => <GroupWorkIcon />,\r\n                        //     tooltip: \"Manage teams\",\r\n                        //     onClick: (event, rowData) => {\r\n                        //         new Promise((resolve) => {\r\n                        //             setTimeout(() => {\r\n                        //                 resolve();\r\n                        //                 window.location.href = \"/ProjectTeams/\" + rowData.id\r\n                        //             }, 600);\r\n                        //         })\r\n                        //     }\r\n                        // },\r\n\r\n                        {\r\n                            icon: () => <GroupAddIcon />,\r\n                            tooltip: \"Manage users\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        window.location.href = \"/ProjectDetails/\" + rowData.id\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }\r\n                    ]}\r\n                    editable={{\r\n                        onRowAdd: (newData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    this.props.addProject(newData);\r\n                                }, 600);\r\n                            }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        this.props.updateProject(newData);\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    this.props.deleteProject(oldData);\r\n                                }, 600);\r\n                            })\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <IconButton onClick={() => DownloadAllProjects(this.props.minDate, this.props.maxDate)}>\r\n                                        <GetAppIcon fontSize=\"large\" />\r\n                                    </IconButton>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/projectReview/\" + rowData.id}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectsTable;","export const ActionType = {\r\n  LOAD_USERS: \"LOAD_USERS\",\r\n  CREATE_USER: \"CREATE_USER\",\r\n  UPDATE_USER: \"UPDATE_USER\",\r\n  ARCHIVE_USER: \"ARCHIVE_USER\",\r\n\r\n  LOAD_ARCHIVED_USERS: \"LOAD_ARCHIVED_USERS\",\r\n  UNARCHIVE_USER: \"UNARCHIVE_USER\",\r\n  DELETE_USER: \"DELETE_USER\",\r\n\r\n  LOAD_TEMPLATE_LIST: \"LOAD_TEMPLATE_LIST\",\r\n  LOAD_TEMPLATE: \"LOAD_TEMPLATE\",\r\n  CREATE_TEMPLATE: \"CREATE_TEMPLATE\",\r\n  COPY_TEMPLATE: \"COPY_TEMPLATE\",\r\n  UPDATE_TEMPLATE: \"EDIT_TEMPLATE\",\r\n  DELETE_TEMPLATE: \"DELETE_TEMPLATE\",\r\n\r\n  LOAD_PROJECTS: \"LOAD_PROJECTS\",\r\n  LOAD_PROJECT: \"LOAD_PROJECT\",\r\n  CREATE_PROJECT: \"CREATE_PROJECT\",\r\n  UPDATE_PROJECT: \"EDIT_PROJECT\",\r\n  DELETE_PROJECT: \"DELETE_PROJECT\",\r\n\r\n  LOAD_TEAM_LIST: \"LOAD_TEAM_LIST\",\r\n  CREATE_TEAM: \"CREATE_TEAM\",\r\n  UPDATE_TEAM: \"UPDATE_TEAM\",\r\n  DELETE_TEAM: \"DELETE_TEAM\",\r\n\r\n  LOAD_USERS_EVALUATIONS: \"LOAD_USERS_EVALUATIONS\",\r\n  DELETE_EVALUATION: \"DELETE_EVALUATION\",\r\n};\r\n","import axios from \"axios\";\r\n\r\nlet baseUri = \"http://46.252.205.197/plesk-site-preview/zapalskis.tech/api\"\r\nlet Api = axios.create({\r\n    baseURL: baseUri,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n});\r\n\r\n\r\n//does not work YET\r\nexport const Login = async (data) => {\r\n    console.log(data);\r\n    return await Api.post(\"/Users/login\", data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            return \"notFound\";\r\n        });\r\n};\r\n\r\nexport const FetchUserList = async (start, end) => {\r\n    return await Api.get(\"/Users\", {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchArchivedUserList = async () => {\r\n    return await Api.get(\"/Users/Archived\")\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUserListSimple = async () => {\r\n    return await Api.get(\"/Users/simple\")\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUserProjectsTemplates = async (id) => {\r\n    return await Api.get(\"/Users/Projects/Templates/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUsersForTeamSimple = async (id) => {\r\n    return await Api.get(\"/Users/Teams/simple/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUserToEdit = async (id) => {\r\n    return await Api.get(\"/Users/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUserCredentials = async (id) => {\r\n    return await Api.get(\"/Users/credentials/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const UpdateUserCredentials = async (id, data) => {\r\n    return await Api.put(\"/Users/credentials/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUserToReview = async (id, start, end) => {\r\n    return await Api.get(\"/Users/review/\" + id, {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\n\r\nexport const AddToProjectUser = async (id, data) => {\r\n    return await Api.put(\"/Projects/adduser/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveFromProjectUser = async (id, data) => {\r\n    return await Api.put(\"/Projects/removeuser/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const AddToProjectTeam = async (id, data) => {\r\n    return await Api.put(\"/Projects/addTeam/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveFromProjectTeam = async (id, data) => {\r\n    return await Api.put(\"/Projects/removeTeam/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const AddToProjectTemplate = async (id, data) => {\r\n    return await Api.put(\"/Projects/addTemplate/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveFromProjectTemplate = async (id, data) => {\r\n    return await Api.put(\"/Projects/removeTemplate/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const ArchiveUser = async (id) => {\r\n    return await Api.post(\"/Users/archive/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const UnarchiveUser = async (id) => {\r\n    return await Api.post(\"/Users/unarchive/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const CreateUser = async (data) => {\r\n    return await Api.post(\"/Users/\", data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const UpdateUser = async (data) => {\r\n    return await Api.put(\"/Users/\" + data.id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const AddProjectToUser = async (id, data) => {\r\n    return await Api.put(\"/Users/addProject/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveProjectFromUser = async (id, data) => {\r\n    return await Api.put(\"/Users/removeProject/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const FetchUserForProjects = async (id) => {\r\n    return await Api.get(\"/Users/projects/\" + id,)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const MarkUserDeleted = async (id) => {\r\n    return await Api.post(\"/Users/markdeleted/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n        });\r\n};\r\n\r\nexport const FetchTeamsList = async (start, end) => {\r\n    return await Api.get(\"/Teams/list\", {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\n\r\nexport const FetchTeamsSimple = async () => {\r\n    return await Api.get(\"/Teams/simple\")\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTeamToReview = async (id, start, end) => {\r\n    return await Api.get(\"/Teams/review/\" + id, {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTeam = async (id) => {\r\n    return await Api.get(\"/Teams/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const CreateTeam = async (data) => {\r\n    return await Api.post(\"/Teams/\", data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const UpdateTeam = async (data) => {\r\n    return await Api.put(\"/Teams/\" + data.id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\n\r\nexport const GetTeam = async (id) => {\r\n    return await Api.get(\"/Teams/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTeamsProjects = async (id) => {\r\n    return await Api.get(\"/Teams/Projects/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTeamsUsers = async (id) => {\r\n    return await Api.get(\"/Teams/users/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\n\r\nexport const AddToTeam = async (id, data) => {\r\n    return await Api.put(\"/Teams/add/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveFromTeam = async (id, data) => {\r\n    return await Api.put(\"/Teams/remove/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const AddToTeamProjects = async (id, data) => {\r\n    return await Api.put(\"/Teams/addProject/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveFromTeamProjects = async (id, data) => {\r\n    return await Api.put(\"/Teams/removeProject/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const FetchTemplatesList = async () => {\r\n    return await Api.get(\"/EvaluationTemplates/list\")\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchClientTemplatesList = async (id) => {\r\n    return await Api.get(\"/EvaluationTemplates/Client/list/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTemplateProjects = async (id) => {\r\n    return await Api.get(\"/EvaluationTemplates/projects/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const AddToTemplateProject = async (id, data) => {\r\n    return await Api.put(\"/EvaluationTemplates/addProject/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const RemoveFromTemplateProject = async (id, data) => {\r\n    return await Api.put(\"/EvaluationTemplates/removeProject/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const FetchTemplateToEdit = async (id) => {\r\n    return await Api.get(\"/EvaluationTemplates/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTemplateForCase = async (id) => {\r\n    return await Api.get(\"/EvaluationTemplates/case/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const CreateTemplate = async (data) => {\r\n    return await Api.post(\"/EvaluationTemplates/full\", data).then(response => {\r\n        return response.data;\r\n    })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occured calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const EditTemplate = async (id, data) => {\r\n    return await Api.put(\"/EvaluationTemplates/full/\" + id, data).then(response => {\r\n        return response.data;\r\n    })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occured calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const CopyTemplate = async (id) => {\r\n    return await Api.post(\"/EvaluationTemplates/copy/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DeleteTemplate = async (id) => {\r\n    return await Api.put(\"/EvaluationTemplates/markdeleted/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectsList = async (start, end) => {\r\n    return await Api.get(\"/Projects/list\", {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchClientProjectsList = async (id, start, end) => {\r\n    return await Api.get(\"/Users/Client/Projects/list/\" + id, {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectUserToReview = async (userId, projectId, start, end) => {\r\n    return await Api.get(\"/Users/Project/review/\", {\r\n        params: {\r\n            start: start,\r\n            end: end,\r\n            userId: userId,\r\n            projectId: projectId\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectsListForReview = async (id, start, end) => {\r\n    return await Api.get(\"Users/Projects/review/\" + id, {\r\n        params: {\r\n            start: start,\r\n            end: end\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectsSimple = async () => {\r\n    return await Api.get(\"/Projects/simple\")\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const CreateProject = async (data) => {\r\n    return await Api.post(\"/Projects/\", data).then(response => {\r\n        return response.data;\r\n    })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occured calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const UpadateProjectName = async (id, data) => {\r\n    return await Api.post(\"/Projects/name/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DeleteProject = async (id) => {\r\n    return await Api.post(\"/Projects/markdeleted/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const DeleteTeam = async (id) => {\r\n    return await Api.post(\"/Teams/markdeleted/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectTemplates = async (id) => {\r\n    return await Api.get(\"/Projects/Templates/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectToEdit = async (id) => {\r\n    return await Api.get(\"/Projects/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectToReview = async (id, min, max) => {\r\n    return await Api.get(\"/Projects/review/\" + id, {\r\n        params: {\r\n            start: min,\r\n            end: max\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectUsers = async (id) => {\r\n    return await Api.get(\"/Projects/Users/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectTeams = async (id) => {\r\n    return await Api.get(\"/Projects/Teams/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchCaseToEdit = async (id) => {\r\n    return await Api.get(\"/Evaluations/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const CreateCase = async (data) => {\r\n    return await Api.post(\"/Evaluations/\", data).then(response => {\r\n        return response.data;\r\n    })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occured calling the api: \" + error);\r\n        });\r\n}\r\n\r\nexport const MarkEvaluationDeleted = async (id) => {\r\n    return await Api.post(\"/Evaluations/markdeleted/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n        });\r\n};\r\n\r\nexport const UpdateCase = async (id, data) => {\r\n    return await Api.put(\"/Evaluations/\" + id, data)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchProjectReport = async (id, min, max) => {\r\n    return await Api.get(\"/Projects/report/\" + id, {\r\n        params: {\r\n            start: min,\r\n            end: max\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchUserReport = async (id, min, max) => {\r\n    return await Api.get(\"/Users/report/\" + id, {\r\n        params: {\r\n            start: min,\r\n            end: max\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTeamReport = async (id, min, max) => {\r\n    return await Api.get(\"/Teams/report/\" + id, {\r\n        params: {\r\n            start: min,\r\n            end: max\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchClientUserReport = async (id, clientId, min, max) => {\r\n    return await Api.get(\"/Users/Client/report/\" + id, {\r\n        params: {\r\n            clientId: clientId,\r\n            start: min,\r\n            end: max\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchClientProjectsSimple = async (id) => {\r\n    return await Api.get(\"/Users/Client/Projects/simple/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchClientProjectsUsersSimple = async (id) => {\r\n    return await Api.get(\"/Users/Client/Users/simple/\" + id)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n\r\nexport const FetchTemplateNames = async () => {\r\n    return await Api.get(\"/EvaluationTemplates/names\")\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw Error(\"An error has occurred calling the api: \" + error);\r\n        });\r\n};\r\n","import { ActionType } from \"../Constants/ActionType\";\r\nimport templates from \"../Constants/Templates\";\r\nimport { FetchProjectsList, CreateProject, DeleteProject, UpadateProjectName, FetchProjectsListForReview, FetchClientProjectsList } from \"../API/API\";\r\nrequire('react-virtualized-transfer/lib/css')\r\n\r\nexport const fetchProjects = (start, end) => async (dispatch) => {\r\n    dispatch({\r\n        type: ActionType.LOAD_PROJECTS,\r\n        payload: await FetchProjectsList(start, end)\r\n    });\r\n};\r\n\r\nexport const fetchClientProjects = (id, start, end) => async (dispatch) => {\r\n    dispatch({\r\n        type: ActionType.LOAD_PROJECTS,\r\n        payload: await FetchClientProjectsList(id, start, end)\r\n    });\r\n};\r\n\r\nexport const fetchProjectsReview = (id, start, end) => async (dispatch) => {\r\n    dispatch({\r\n        type: ActionType.LOAD_PROJECTS,\r\n        payload: await FetchProjectsListForReview(id, start, end)\r\n    });\r\n};\r\n\r\nexport const fetchTemplateNames = () => (dispatch) => {\r\n    dispatch({\r\n        type: ActionType.LOAD_TEMPLATE_LIST,\r\n        payload: templates\r\n    })\r\n};\r\n\r\nexport const addProject = (data) => async (dispatch) => {\r\n    let createdProject = {\r\n        name: data.name,\r\n    }\r\n    let id = await CreateProject(createdProject);\r\n    let updatedData = data;\r\n    updatedData.teams = [];\r\n    updatedData.templates = [];\r\n    updatedData.id = id;\r\n    updatedData.caseCount = 0;\r\n    dispatch({\r\n        type: ActionType.CREATE_PROJECT,\r\n        payload: updatedData\r\n    })\r\n}\r\n\r\n\r\nexport const changeProjectName = (data) => async (dispatch) => {\r\n    let updatedProject = {\r\n        id: data.id,\r\n        name: data.name,\r\n    }\r\n    await UpadateProjectName(updatedProject.id, updatedProject);\r\n    dispatch({\r\n        type: ActionType.UPDATE_PROJECT,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const deleteProject = (data) => async (dispatch) => {\r\n    await DeleteProject(data.id);\r\n    dispatch({\r\n        type: ActionType.DELETE_PROJECT,\r\n        payload: data\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { Backdrop } from '@material-ui/core';\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nclass LoadingScreen extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Backdrop open={true}>\r\n                    <RingLoader size={225} color={\"#DAA1A0\"} />\r\n                </Backdrop>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadingScreen;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport ProjectsTable from \"../../Components/ProjectsTable/ProjectsTable\";\r\nimport { fetchProjects, changeProjectName, deleteProject, addProject } from '../../Actions/ProjectsTableActions';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass ProjectsDisplay extends Component {\r\n    state = {\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchProjects(this.state.minDate, this.state.maxDate);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            this.props.fetchProjects(this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {this.props.projects === null ? <LoadingScreen /> :\r\n                    <ProjectsTable\r\n                        projects={this.props.projects}\r\n                        addProject={this.props.addProject}\r\n                        updateProject={this.props.updateProject}\r\n                        deleteProject={this.props.deleteProject}\r\n                        minDate={this.state.minDate}\r\n                        maxDate={this.state.maxDate}\r\n                        setMinDate={(date) => this.setState({ minDate: date })}\r\n                        setMaxDate={(date) => this.setState({ maxDate: date })}\r\n                    />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.Projects,\r\n    templateNames: state.Templates\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProjects: (start, end) => dispatch(fetchProjects(start, end)),\r\n    addProject: (data) => dispatch(addProject(data)),\r\n    updateProject: (data) => dispatch(changeProjectName(data)),\r\n    deleteProject: (data) => dispatch(deleteProject(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsDisplay);","import React from 'react';\r\nimport { ListItem, ListItemText, ListItemSecondaryAction, ListItemIcon, Fade, Tooltip } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { DescriptionOutlined } from '@material-ui/icons';\r\n\r\nconst CustomTooltip = withStyles({\r\n    tooltip: {\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 15\r\n    }\r\n})(Tooltip);\r\n\r\nconst CriticalListItem = (props) => {\r\n    return (\r\n        <div key={props.critical.name}>\r\n            <ListItem>\r\n                {props.critical.description === \"\" || props.critical.description === undefined ? null :\r\n                    <ListItemIcon>\r\n                        <CustomTooltip arrow TransitionComponent={Fade} title={props.critical.description} interactive>\r\n                            <DescriptionOutlined />\r\n                        </CustomTooltip>  </ListItemIcon>}\r\n                <ListItemText>{props.critical.name}</ListItemText>\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText>Breached: {props.critical.breachedCount}</ListItemText>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <hr style={{ borderTop: \"1px solid red\" }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CriticalListItem;","import React, { useState } from 'react';\r\nimport { ListItem, ListItemText, ListItemIcon, ListItemSecondaryAction, List, ListSubheader, Tooltip, IconButton, FormControl } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp, DescriptionOutlined, CommentOutlined } from '@material-ui/icons';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst CustomTooltip = withStyles({\r\n    tooltip: {\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 15\r\n    }\r\n})(Tooltip);\r\n\r\nconst getCriterias = (topic) => {\r\n    let result = [];\r\n    let group = topic.criterias.reduce((r, a) => {\r\n        r[a.name] = [...r[a.name] || [], a];\r\n        return r;\r\n    }, {});\r\n    Object.keys(group).forEach(key => {\r\n        let score = 0;\r\n        let points = 0;\r\n        let comments = [];\r\n        group[key].forEach(member => {\r\n            score += member.score;\r\n            points += member.points;\r\n            member.comments.forEach(comment => comments.push(comment));\r\n        });\r\n        result.push({\r\n            name: key,\r\n            score: score,\r\n            description: group[key][0].description === null ? \"\" : group[key][0].description,\r\n            points: points,\r\n            comments: comments\r\n        })\r\n    });\r\n    return result;\r\n\r\n}\r\nconst TopicListItem = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <React.Fragment key={props.topic.name}>\r\n            <ListItem onClick={() => setOpen(!open)} button >\r\n                <ListItemIcon>\r\n                    {open ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                </ListItemIcon>\r\n\r\n                {props.topic.description === \"\" || props.topic.description === undefined ? null :\r\n                    <ListItemIcon>\r\n                        <CustomTooltip arrow TransitionComponent={Fade} title={props.topic.description} interactive>\r\n                            <DescriptionOutlined />\r\n                        </CustomTooltip>  </ListItemIcon>}\r\n\r\n                <ListItemText>{props.topic.name}</ListItemText>\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText>Score: {isNaN(Math.round(props.topic.score / props.topic.points * 10000) / 100) ? \"0%\" : Math.round(props.topic.score / props.topic.points * 10000) / 100 + \"%\"}</ListItemText>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            {open ?\r\n                <List style={{ color: \"green\", paddingLeft: 50 }}>\r\n                    <ListSubheader disableSticky style={{ color: \"green\" }}>Criteria</ListSubheader>\r\n                    {getCriterias(props.topic).map(criteria => {\r\n                        return (\r\n                            <React.Fragment key={criteria.name}>\r\n                                <ListItem>\r\n                                    {criteria.description === \"\" || criteria.description === undefined ? null :\r\n                                        <ListItemIcon>\r\n                                            <CustomTooltip arrow TransitionComponent={Fade} title={criteria.description} interactive>\r\n                                                <DescriptionOutlined />\r\n                                            </CustomTooltip>  </ListItemIcon>}\r\n                                    <ListItemText style={{ marginRight: 50 }}>{criteria.name}</ListItemText>\r\n                                    <ListItemSecondaryAction>\r\n                                        <FormControl style={{ marginTop: 5 }}>\r\n                                            <ListItemText>{isNaN(Math.round(criteria.score / criteria.points * 10000) / 100) ? \"0%\" : Math.round(criteria.score / criteria.points * 10000) / 100 + \"%\"}</ListItemText>\r\n                                        </FormControl>\r\n                                        <FormControl>\r\n                                            <ListItemIcon>\r\n                                                {criteria.comments.length === 0 ? null :\r\n                                                    <IconButton onClick={() => props.openDialog(criteria.comments)}>\r\n                                                        <CommentOutlined />\r\n                                                    </IconButton>\r\n                                                }\r\n                                            </ListItemIcon>\r\n                                        </FormControl>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                <hr style={{ borderTop: \"1px solid green\" }} />\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </List>\r\n                : null}\r\n            <hr style={{ borderTop: \"1px solid blue\" }} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TopicListItem;","import React, { Component } from \"react\";\r\nimport \"./DefaultMultiSelect.scss\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nclass DefaultMultiSelect extends Component {\r\n  state = {\r\n    tagName: [],\r\n  };\r\n  render() {\r\n    const handleChange = (event, value, type) => {\r\n      if (type === \"clear\") {\r\n        this.setState({ tagName: [] });\r\n      }\r\n\r\n      if (value.length > this.props.selectionsCount) return;\r\n      this.setState({ tagName: value });\r\n\r\n      if (this.props.onChange !== undefined) {\r\n        this.props.onChange(value, type);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Autocomplete\r\n          id={this.props.id}\r\n          defaultValue={this.props.defaultValue}\r\n          multiple\r\n          limitTags={3}\r\n          className=\"MultiSelect\"\r\n          options={this.props.options}\r\n          onChange={handleChange}\r\n          getOptionLabel={this.props.getOptionLabel === undefined ? (option) => option : this.props.getOptionLabel}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label={this.props.label}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultMultiSelect;\r\n","import { IconButton, Collapse } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\nimport React, { Component, forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nclass ProjectUserList extends Component {\r\n    state = {\r\n        open: false,\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\",\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"caseCount\", customFilterAndSearch: (term, rowData) => rowData.caseCount === parseInt(term)\r\n            }\r\n        ]\r\n    }\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <IconButton style={{ float: \"left\" }} onClick={() => this.setState({ open: !this.state.open })}>\r\n                        {this.state.open ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                    </IconButton>\r\n                    <h1 style={{ float: \"left\" }}>Users</h1>\r\n                </div>\r\n                <Collapse in={this.state.open}>\r\n                    <div style={{ paddingTop: 20, paddingBottom: 30, marginLeft: \"15%\", marginRight: \"15%\" }}>\r\n                        <MaterialTable\r\n                            style={{ background: \"rgba(242, 245, 249, 0.6)\" }}\r\n                            options={{\r\n                                headerStyle: {\r\n                                    background: \"rgba(242, 245, 249, 0.6)\"\r\n                                }\r\n                            }}\r\n                            title=\"\"\r\n                            columns={this.state.columns}\r\n                            icons={tableIcons}\r\n                            data={this.props.users}\r\n                            onRowClick={(event, rowData, togglePanel) => this.props.changeToUserReport(rowData.id)} />\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectUserList;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogTitle, ListItemText, List, ListItem } from \"@material-ui/core\";\r\n\r\nexport default function CriteriaDialog(props) {\r\n    return (\r\n        <div>\r\n            {props.open ? <Dialog open={props.open} onClose={props.closeDialog}>\r\n                <DialogTitle>Comments</DialogTitle>\r\n                <List style={{ height: 600 }}>\r\n                    {props.data.map(comment => {\r\n                        return (\r\n                            <React.Fragment key={comment.comment}>\r\n                                <ListItem>\r\n                                    <ListItemText style={{ marginRight: 100 }}>\r\n                                        {comment.name + \":\"}\r\n                                    </ListItemText>\r\n                                    <ListItemText>\r\n                                        {comment.comment}\r\n                                    </ListItemText>\r\n\r\n                                </ListItem>\r\n                                <hr />\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </Dialog> : null}\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { ListSubheader, List, ListItemText, ListItem, ListItemSecondaryAction, ListItemIcon, IconButton } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp, GetAppRounded } from '@material-ui/icons';\r\nimport CriticalListItem from './CriticalListItem';\r\nimport TopicListItem from './TopicListItem';\r\nimport DefaultMultiSelect from '../Core-Components/DefaultMultiSelect/DefaultMultiSelect';\r\nimport ProjectUserList from './ProjectUserList';\r\nimport CriteriaDialog from '../CriteriaDialog/CriteriaDialog';\r\n\r\nconst calculateScore = (report, categories) => {\r\n\r\n    if (categories.length === 0) {\r\n        return isNaN(Math.round(report.score / report.points * 10000) / 100) ? \"0\" : Math.round(report.score / report.points * 10000) / 100\r\n    }\r\n    else {\r\n        let score = 0;\r\n        let points = 0;\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(temp => {\r\n            score += temp.score;\r\n            points += temp.points;\r\n        });\r\n        return isNaN(Math.round(score / points * 10000) / 100) ? \"0\" : Math.round(score / points * 10000) / 100\r\n    }\r\n}\r\n\r\nconst calculateCases = (report, categories) => {\r\n    if (categories.length === 0) {\r\n        return report.caseCount;\r\n    }\r\n    else {\r\n        let count = 0;\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(temp => {\r\n            count += temp.caseCount;\r\n        });\r\n        return count;\r\n    }\r\n}\r\n\r\nconst getCriticals = (report, categories) => {\r\n    let criticals = [];\r\n    let result = [];\r\n    if (categories.length === 0) {\r\n        report.categoryReports.forEach(category => category.criticals.forEach(critical => criticals.push(critical)));\r\n    }\r\n    else {\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(category => category.criticals.forEach(critical => criticals.push(critical)));\r\n    }\r\n\r\n    let group = criticals.reduce((r, a) => {\r\n        r[a.name] = [...r[a.name] || [], a];\r\n        return r;\r\n    }, {});\r\n    Object.keys(group).forEach(key => {\r\n        let breachCount = 0;\r\n        group[key].forEach(member => breachCount += member.breachedCount);\r\n        result.push({\r\n            name: key,\r\n            description: group[key][0].description === null ? \"\" : group[key][0].description,\r\n            breachedCount: breachCount\r\n        })\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst getTopics = (report, categories) => {\r\n    let topics = [];\r\n    let result = [];\r\n    if (categories.length === 0) {\r\n        report.categoryReports.forEach(category => category.topics.forEach(topic => topics.push(topic)));\r\n    }\r\n    else {\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(category => category.topics.forEach(topic => topics.push(topic)));\r\n    }\r\n    let group = topics.reduce((r, a) => {\r\n        r[a.name] = [...r[a.name] || [], a];\r\n        return r;\r\n    }, {});\r\n    Object.keys(group).forEach(key => {\r\n        let score = 0;\r\n        let points = 0;\r\n        let criterias = [];\r\n        group[key].forEach(member => {\r\n            score += member.score;\r\n            points += member.points;\r\n            member.criterias.forEach(criteria => criterias.push(criteria))\r\n        });\r\n        result.push({\r\n            name: key,\r\n            description: group[key][0].description === null ? \"\" : group[key][0].description,\r\n            score: score,\r\n            points: points,\r\n            criterias: criterias\r\n        })\r\n    })\r\n    return result;\r\n}\r\n\r\nconst getUsers = (report, categories) => {\r\n    let users = [];\r\n    let result = [];\r\n    if (categories.length === 0) {\r\n        report.categoryReports.forEach(category => category.users.forEach(user => users.push(user)));\r\n    }\r\n    else {\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(category => category.users.forEach(user => users.push(user)));\r\n    }\r\n    let group = users.reduce((r, a) => {\r\n        r[a.id] = [...r[a.id] || [], a];\r\n        return r;\r\n    }, {});\r\n    Object.keys(group).forEach(key => {\r\n        let caseCount = 0;\r\n        let score = 0;\r\n        let points = 0;\r\n        group[key].forEach(member => {\r\n            caseCount += member.caseCount;\r\n            score += member.score;\r\n            points += member.points;\r\n        });\r\n        result.push({\r\n            id: key,\r\n            name: group[key][0].firstname + \" \" + group[key][0].lastname,\r\n            caseCount: caseCount,\r\n            score: score,\r\n            points: points\r\n        })\r\n    });\r\n    return result;\r\n}\r\n\r\nconst OverallScore = (reports) => {\r\n    let score = 0;\r\n    let points = 0;\r\n    reports.forEach(report => {\r\n        score += report.score;\r\n        points += report.points;\r\n    });\r\n    return isNaN(Math.round(score / points * 10000) / 100) ? \"0\" : Math.round(score / points * 10000) / 100\r\n\r\n}\r\n\r\nclass ProjectReport extends Component {\r\n    state = {\r\n        openId: null,\r\n        categories: [],\r\n        dialogOpen: false,\r\n        dialogData: []\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CriteriaDialog open={this.state.dialogOpen} data={this.state.dialogData} closeDialog={(data) => this.setState({ dialogOpen: false, dialogData: [] })} />\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h2 style={{ paddingTop: 10, color: \"#F2F5F9\" }}>Project score: {OverallScore(this.props.report)}%</h2>\r\n                    <IconButton style={{ marginLeft: 5, paddingTop: 10 }} onClick={() => this.props.download()}>\r\n                        <GetAppRounded fontSize=\"large\" />\r\n                    </IconButton>\r\n                </div>\r\n                <div style={{ paddingTop: 50, paddingBottom: 50 }}>\r\n                    <div style={{ marginLeft: \"15%\", marginRight: \"15%\", borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\" }}>\r\n                        <List>\r\n                            <ListSubheader style={{ color: \"#F2F5F9\" }} disableSticky>Templates</ListSubheader>\r\n                            {this.props.report.map(report => {\r\n                                return (\r\n                                    <React.Fragment key={report.id}>\r\n                                        <ListItem button  >\r\n                                            <ListItemIcon onClick={() => {\r\n                                                if (this.state.openId === report.id) {\r\n                                                    this.setState({ openId: null })\r\n                                                }\r\n                                                else {\r\n                                                    this.setState({ openId: report.id })\r\n                                                }\r\n                                            }}>\r\n                                                {this.state.openId === report.id ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{report.name}</ListItemText>\r\n                                            {this.state.openId === report.id ? <ListItemText style={{ marginRight: 15 }}><DefaultMultiSelect options={report.categories}\r\n                                                onChange={(value, type) => {\r\n                                                    if (type === \"clear\") {\r\n                                                        this.setState({ categories: [] })\r\n                                                    }\r\n                                                    else {\r\n                                                        this.setState({ categories: value })\r\n                                                    }\r\n                                                }} /></ListItemText> : null}\r\n                                            <ListItemSecondaryAction>\r\n                                                <ListItemText>Score: {calculateScore(report, this.state.categories) + \"%\"} {\"   \"}\r\n                                    Evaluated cases: {calculateCases(report, this.state.categories)}\r\n                                                </ListItemText>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        {\r\n                                            this.state.openId === report.id ?\r\n                                                <React.Fragment>\r\n                                                    <List style={{ color: \"red\" }}>\r\n                                                        <ListSubheader disableSticky style={{ color: \"red\" }}>\r\n                                                            Criticals\r\n                                    </ListSubheader>\r\n                                                        {getCriticals(report, this.state.categories).map(critical => <CriticalListItem critical={critical} />)}\r\n                                                    </List>\r\n                                                    <List style={{ color: \"blue\" }}>\r\n                                                        <ListSubheader disableSticky style={{ color: \"blue\" }}>\r\n                                                            Topics\r\n                                    </ListSubheader>\r\n                                                        {getTopics(report, this.state.categories).map(topic => <TopicListItem topic={topic}\r\n                                                            openDialog={(data) => this.setState({ dialogOpen: true, dialogData: data })}\r\n                                                            closeDialog={(data) => this.setState({ dialogOpen: false, dialogData: [] })}\r\n                                                        />)}\r\n                                                    </List>\r\n                                                </React.Fragment> : null\r\n                                        }\r\n                                        <hr />\r\n                                    </React.Fragment>\r\n                                );\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n                {this.state.openId === null ? null :\r\n                    <div>\r\n                        <ProjectUserList changeToUserReport={this.props.changeToUserReport} users={getUsers(this.props.report.find(e => e.id === this.state.openId), this.state.categories)} />\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectReport;","import React, { Component } from 'react';\r\nimport { ListSubheader, List, ListItemText, ListItem, ListItemSecondaryAction, ListItemIcon } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\nimport CriticalListItem from '../ProjectReport/CriticalListItem';\r\nimport TopicListItem from '../ProjectReport/TopicListItem';\r\nimport DefaultMultiSelect from '../Core-Components/DefaultMultiSelect/DefaultMultiSelect';\r\nimport CriteriaDialog from '../CriteriaDialog/CriteriaDialog';\r\n\r\nconst calculateScore = (report, categories) => {\r\n\r\n    if (categories.length === 0) {\r\n        return isNaN(Math.round(report.score / report.points * 10000) / 100) ? \"0\" : Math.round(report.score / report.points * 10000) / 100\r\n    }\r\n    else {\r\n        let score = 0;\r\n        let points = 0;\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(temp => {\r\n            score += temp.score;\r\n            points += temp.points;\r\n        });\r\n        return isNaN(Math.round(score / points * 10000) / 100) ? \"0\" : Math.round(score / points * 10000) / 100\r\n    }\r\n}\r\n\r\nconst calculateCases = (report, categories) => {\r\n    if (categories.length === 0) {\r\n        return report.caseCount;\r\n    }\r\n    else {\r\n        let count = 0;\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(temp => {\r\n            count += temp.caseCount;\r\n        });\r\n        return count;\r\n    }\r\n}\r\n\r\nconst getCriticals = (report, categories) => {\r\n    let criticals = [];\r\n    let result = [];\r\n    if (categories.length === 0) {\r\n        report.categoryReports.forEach(category => category.criticals.forEach(critical => criticals.push(critical)));\r\n    }\r\n    else {\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(category => category.criticals.forEach(critical => criticals.push(critical)));\r\n    }\r\n\r\n    let group = criticals.reduce((r, a) => {\r\n        r[a.name] = [...r[a.name] || [], a];\r\n        return r;\r\n    }, {});\r\n    Object.keys(group).forEach(key => {\r\n        let breachCount = 0;\r\n        group[key].forEach(member => breachCount += member.breachedCount);\r\n        result.push({\r\n            name: key,\r\n            description: group[key][0].description === null ? \"\" : group[key][0].description,\r\n            breachedCount: breachCount\r\n        })\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst getTopics = (report, categories) => {\r\n    let topics = [];\r\n    let result = [];\r\n    if (categories.length === 0) {\r\n        report.categoryReports.forEach(category => category.topics.forEach(topic => topics.push(topic)));\r\n    }\r\n    else {\r\n        let filtered = report.categoryReports.filter(temp => categories.includes(temp.name));\r\n        filtered.forEach(category => category.topics.forEach(topic => topics.push(topic)));\r\n    }\r\n    let group = topics.reduce((r, a) => {\r\n        r[a.name] = [...r[a.name] || [], a];\r\n        return r;\r\n    }, {});\r\n    Object.keys(group).forEach(key => {\r\n        let score = 0;\r\n        let points = 0;\r\n        let criterias = [];\r\n        group[key].forEach(member => {\r\n            score += member.score;\r\n            points += member.points;\r\n            member.criterias.forEach(criteria => criterias.push(criteria))\r\n        });\r\n        result.push({\r\n            name: key,\r\n            score: score,\r\n            description: group[key][0].description === null ? \"\" : group[key][0].description,\r\n            points: points,\r\n            criterias: criterias\r\n        })\r\n    })\r\n    return result;\r\n}\r\n\r\n\r\nclass ProjectReport extends Component {\r\n    state = {\r\n        openId: null,\r\n        categories: [],\r\n        dialogOpen: false,\r\n        dialogData: []\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CriteriaDialog open={this.state.dialogOpen} data={this.state.dialogData} closeDialog={(data) => this.setState({ dialogOpen: false, dialogData: [] })} />\r\n                <div>\r\n                    <div style={{ paddingLeft: 50 }}>\r\n                        <List>\r\n                            <ListSubheader style={{ color: \"#F2F5F9\" }} disableSticky>Templates</ListSubheader>\r\n                            {this.props.report.map(report => {\r\n                                return (\r\n                                    <React.Fragment key={report.id}>\r\n                                        <ListItem button  >\r\n                                            <ListItemIcon onClick={() => {\r\n                                                if (this.state.openId === report.id) {\r\n                                                    this.setState({ openId: null })\r\n                                                }\r\n                                                else {\r\n                                                    this.setState({ openId: report.id })\r\n                                                }\r\n                                            }}>\r\n                                                {this.state.openId === report.id ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{report.name}</ListItemText>\r\n                                            {this.state.openId === report.id ? <ListItemText><DefaultMultiSelect options={report.categories}\r\n                                                onChange={(value, type) => {\r\n                                                    if (type === \"clear\") {\r\n                                                        this.setState({ categories: [] })\r\n                                                    }\r\n                                                    else {\r\n                                                        this.setState({ categories: value })\r\n                                                    }\r\n                                                }} /></ListItemText> : null}\r\n                                            <ListItemSecondaryAction>\r\n                                                <ListItemText>Score: {calculateScore(report, this.state.categories) + \"%\"} {\"   \"}\r\n                                    Evaluated cases: {calculateCases(report, this.state.categories)}\r\n                                                </ListItemText>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        {\r\n                                            this.state.openId === report.id ?\r\n                                                <React.Fragment>\r\n                                                    <List style={{ color: \"red\", paddingLeft: 50 }}>\r\n                                                        <ListSubheader disableSticky style={{ color: \"red\" }}>\r\n                                                            Criticals\r\n                                    </ListSubheader>\r\n                                                        {getCriticals(report, this.state.categories).map(critical => <CriticalListItem critical={critical} />)}\r\n                                                    </List>\r\n                                                    <List style={{ color: \"blue\", paddingLeft: 30 }}>\r\n                                                        <ListSubheader disableSticky style={{ color: \"blue\" }}>\r\n                                                            Topics\r\n                                    </ListSubheader>\r\n                                                        {getTopics(report, this.state.categories).map(topic => <TopicListItem topic={topic}\r\n                                                            openDialog={(data) => this.setState({ dialogOpen: true, dialogData: data })}\r\n                                                            closeDialog={(data) => this.setState({ dialogOpen: false, dialogData: [] })} />)}\r\n                                                    </List>\r\n                                                </React.Fragment> : null\r\n                                        }\r\n                                        <hr />\r\n                                    </React.Fragment>\r\n                                );\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectReport;","import React, { Component } from 'react';\r\nimport { ListSubheader, List, ListItemText, ListItem, ListItemSecondaryAction, ListItemIcon, IconButton } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp, GetAppRounded } from '@material-ui/icons';\r\nimport TemplateReport from \"./TemplateReport\";\r\n\r\nclass UserReport extends Component {\r\n    state = {\r\n        openId: null,\r\n        categories: [],\r\n    }\r\n    render() {\r\n        const CalculateUserScore = (reports) => {\r\n            let score = 0;\r\n            let points = 0;\r\n            reports.forEach(report => {\r\n                score += report.score;\r\n                points += report.points;\r\n            });\r\n            return isNaN(Math.round(score / points * 10000) / 100) ? \"0\" : Math.round(score / points * 10000) / 100\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h2 style={{ paddingTop: 10, color: \"#F2F5F9\" }}>User score: {CalculateUserScore(this.props.report)}%</h2>\r\n                    <IconButton style={{ marginLeft: 5, paddingTop: 10 }} onClick={() => this.props.download()}>\r\n                        <GetAppRounded fontSize=\"large\" />\r\n                    </IconButton>\r\n                </div>\r\n                <div style={{ paddingTop: 50, paddingBottom: 50 }}>\r\n                    <div style={{ marginLeft: \"15%\", marginRight: \"15%\", borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\" }}>\r\n                        <List>\r\n                            <ListSubheader style={{ color: \"#F2F5F9\" }} disableSticky>Projects</ListSubheader>\r\n                            {this.props.report.map(report => {\r\n                                return (\r\n                                    <React.Fragment key={report.id}>\r\n                                        <ListItem button  >\r\n                                            <ListItemIcon onClick={() => {\r\n                                                if (this.state.openId === report.id) {\r\n                                                    this.setState({ openId: null })\r\n                                                }\r\n                                                else {\r\n                                                    this.setState({ openId: report.id })\r\n                                                }\r\n                                            }}>\r\n                                                {this.state.openId === report.id ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{report.name}</ListItemText>\r\n                                            <ListItemSecondaryAction>\r\n                                                <ListItemText>Score: {isNaN(Math.round(report.score / report.points * 10000) / 100) ? \"0\" : Math.round(report.score / report.points * 10000) / 100 + \"%\"} {\"   \"}\r\n                                    Evaluated cases: {report.caseCount}\r\n                                                </ListItemText>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        {this.state.openId === report.id ? <TemplateReport report={report.templates} categories={this.state.categories} /> : null}\r\n                                        <hr />\r\n                                    </React.Fragment>\r\n                                );\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserReport;","import React, { Component } from 'react';\r\nimport { ListSubheader, List, ListItemText, ListItem, ListItemSecondaryAction, ListItemIcon } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\nimport TemplateReport from \"../UserReport/TemplateReport\";\r\n\r\nclass UserReport extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div style={{ paddingLeft: 30 }}>\r\n                <List>\r\n                    <ListSubheader style={{ color: \"#F2F5F9\" }} disableSticky>Projects</ListSubheader>\r\n                    {this.props.report.map(report => {\r\n                        return (\r\n                            <React.Fragment key={report.id}>\r\n                                <ListItem button  >\r\n                                    <ListItemIcon onClick={() => {\r\n                                        if (this.state.openId === report.id) {\r\n                                            this.setState({ openId: null })\r\n                                        }\r\n                                        else {\r\n                                            this.setState({ openId: report.id })\r\n                                        }\r\n                                    }}>\r\n                                        {this.state.openId === report.id ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText>{report.name}</ListItemText>\r\n                                    <ListItemSecondaryAction>\r\n                                        <ListItemText>Score: {isNaN(Math.round(report.score / report.points * 10000) / 100) ? \"0\" : Math.round(report.score / report.points * 10000) / 100 + \"%\"} {\"   \"}\r\n                                    Evaluated cases: {report.caseCount}\r\n                                        </ListItemText>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                {this.state.openId === report.id ? <TemplateReport report={report.templates} categories={this.state.categories} /> : null}\r\n                                <hr />\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserReport;","import React, { Component } from 'react';\r\nimport { ListSubheader, List, ListItemText, ListItem, ListItemSecondaryAction, ListItemIcon } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\nimport UserReport from './UserReport';\r\n\r\nclass TeamReport extends Component {\r\n    state = {\r\n        openId: null,\r\n        categories: [],\r\n    }\r\n    render() {\r\n        const CalculateUserScore = (reports) => {\r\n            let score = 0;\r\n            let points = 0;\r\n            reports.forEach(report => {\r\n                score += report.score;\r\n                points += report.points;\r\n            });\r\n            return isNaN(Math.round(score / points * 10000) / 100) ? \"0\" : Math.round(score / points * 10000) / 100\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2 style={{ textAlign: \"center\", paddingTop: 10, color: \"#F2F5F9\" }}>Team score: {CalculateUserScore(this.props.report)}%</h2>\r\n                    <div style={{ paddingTop: 50, paddingBottom: 50 }}>\r\n                        <div style={{ marginLeft: \"15%\", marginRight: \"15%\", borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\" }}>\r\n                            <List>\r\n                                <ListSubheader style={{ color: \"#F2F5F9\" }}>Projects</ListSubheader>\r\n                                {this.props.report.map(report => {\r\n                                    return (\r\n                                        <React.Fragment key={report.id}>\r\n                                            <ListItem button  >\r\n                                                <ListItemIcon onClick={() => {\r\n                                                    if (this.state.openId === report.id) {\r\n                                                        this.setState({ openId: null })\r\n                                                    }\r\n                                                    else {\r\n                                                        this.setState({ openId: report.id })\r\n                                                    }\r\n                                                }}>\r\n                                                    {this.state.openId === report.id ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText>{report.name}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <ListItemText>Score: {isNaN(Math.round(report.score / report.points * 10000) / 100) ? \"0\" : Math.round(report.score / report.points * 10000) / 100 + \"%\"} {\"   \"}\r\n                                    Evaluated cases: {report.caseCount}\r\n                                                    </ListItemText>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            {this.state.openId === report.id ? <UserReport report={report.projects} categories={this.state.categories} /> : null}\r\n                                            <hr />\r\n                                        </React.Fragment>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamReport;","import React, { Component } from 'react';\r\nimport { Select, MenuItem, Button, TextField, FormControl } from '@material-ui/core';\r\nimport { FetchProjectsSimple, FetchUserListSimple, FetchTeamsSimple, FetchClientProjectsSimple, FetchClientProjectsUsersSimple, FetchClientUserReport, FetchTeamReport } from '../../API/API';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { FetchProjectReport, FetchUserReport } from \"../../API/API\";\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\nimport ProjectReport from '../../Components/ProjectReport/ProjectReport';\r\nimport UserReport from '../../Components/UserReport/UserReport';\r\nimport TeamReport from '../../Components/TeamReport/TeamReport';\r\nimport { DownloadProjectReport, DownloadUserReport, DownloadClientUserReport } from '../../API/DownloadAPI';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nlet date = new Date();\r\nclass ReportsDisplay extends Component {\r\n    state = {\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n        reportBy: \"Project\",\r\n        reportObjects: [],\r\n        reportItemId: null,\r\n        Report: [],\r\n        loading: false\r\n    }\r\n    componentDidMount() {\r\n        if (window.sessionStorage.getItem(\"role\") === \"client\") {\r\n            FetchClientProjectsSimple(window.sessionStorage.getItem(\"id\")).then(response => this.setState({ reportObjects: response }));\r\n        }\r\n        else {\r\n            FetchProjectsSimple().then(response => this.setState({ reportObjects: response }));\r\n        }\r\n\r\n    }\r\n    reportByChanged(newType) {\r\n        if (newType === \"Project\") {\r\n            if (window.sessionStorage.getItem(\"role\") === \"client\") {\r\n                FetchClientProjectsSimple(window.sessionStorage.getItem(\"id\")).then(response => this.setState({ reportObjects: response }));\r\n            }\r\n            else {\r\n                FetchProjectsSimple().then(response => this.setState({ reportObjects: response }));\r\n            }\r\n        }\r\n        else if (newType === \"User\") {\r\n            if (window.sessionStorage.getItem(\"role\") === \"client\") {\r\n                FetchClientProjectsUsersSimple(window.sessionStorage.getItem(\"id\")).then(response => this.setState({ reportObjects: response }));\r\n            }\r\n            else {\r\n                FetchUserListSimple().then(response => this.setState({ reportObjects: response }));\r\n            }\r\n\r\n        }\r\n        else {\r\n            FetchTeamsSimple().then(response => this.setState({ reportObjects: response }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const changeToUserReport = (id) => {\r\n            this.setState({ Report: [], loading: true });\r\n            this.setState({ reportBy: \"User\" });\r\n            this.reportByChanged(\"User\");\r\n            this.setState({ reportItemId: id });\r\n            if (window.sessionStorage.getItem(\"role\") === \"client\") {\r\n                FetchClientUserReport(this.state.reportItemId, window.sessionStorage.getItem(\"id\"), this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }))\r\n            }\r\n            else {\r\n                FetchUserReport(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }))\r\n            }\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{ marginLeft: 10, marginTop: 15 }}>\r\n                    <div style={{ float: \"left\", paddingTop: 30, marginRight: 15 }}>\r\n                        <FormControl style={{ marginTop: 16 }}>\r\n                            <Select\r\n                                label=\"Report by\"\r\n                                style={{ width: 200 }}\r\n                                value={this.state.reportBy}\r\n                                onChange={e => {\r\n                                    this.setState({ reportBy: e.target.value, reportObjects: [] });\r\n                                    this.reportByChanged(e.target.value);\r\n                                }}\r\n                            >\r\n                                <MenuItem value=\"Project\">Project</MenuItem>\r\n                                {window.sessionStorage.getItem(\"role\") === \"client\" ? null : <MenuItem value=\"Team\">Team</MenuItem>}\r\n                                <MenuItem value=\"User\">User</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        {this.state.reportObjects.length === 0 ? null :\r\n                            <FormControl style={{ paddingLeft: 10, width: 200 }}>\r\n                                <Autocomplete\r\n                                    autoComplete\r\n                                    includeInputInList\r\n                                    onChange={(event, value) => value === null ? this.setState({ reportItemId: value }) : this.setState({ reportItemId: value.id })}\r\n                                    options={this.state.reportObjects}\r\n                                    getOptionLabel={item => this.state.reportBy === \"User\" ? item.firstname + \" \" + item.lastname : item.name}\r\n                                    renderInput={(params) => <TextField  {...params} margin=\"normal\" />} /></FormControl>}\r\n                    </div>\r\n                    {this.state.reportItemId === null ? null :\r\n                        <div style={{ float: \"left\", marginTop: 15 }}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    margin=\"normal\"\r\n                                    label=\"Start date\"\r\n                                    value={this.state.minDate}\r\n                                    maxDate={this.state.maxDate}\r\n                                    onChange={e => this.setState({ minDate: e })}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <KeyboardDatePicker\r\n                                    style={{ marginLeft: 10 }}\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    margin=\"normal\"\r\n                                    label=\"End date\"\r\n                                    value={this.state.maxDate}\r\n                                    minDate={this.state.minDate}\r\n                                    maxDate={new Date()}\r\n                                    onChange={e => this.setState({ maxDate: e })}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <Button style={{ marginTop: 30, marginLeft: 15, backgroundColor: \"#DAA1A0\", color: \"#F2F5F9\" }} variant=\"contained\"\r\n                                onClick={() => {\r\n                                    if (this.state.Report.length !== 0) {\r\n                                        this.setState({ Report: [] });\r\n                                    }\r\n                                    if (this.state.reportBy === \"Project\") {\r\n                                        this.setState({ loading: true });\r\n                                        FetchProjectReport(this.state.reportItemId, this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }));\r\n                                    }\r\n                                    else if (this.state.reportBy === \"User\") {\r\n                                        this.setState({ loading: true });\r\n                                        if (window.sessionStorage.getItem(\"role\") === \"client\") {\r\n                                            FetchClientUserReport(this.state.reportItemId, window.sessionStorage.getItem(\"id\"), this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }))\r\n                                        }\r\n                                        else {\r\n                                            FetchUserReport(this.state.reportItemId, this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }))\r\n                                        }\r\n                                    }\r\n                                    else if (this.state.reportBy === \"Team\") {\r\n                                        this.setState({ loading: true });\r\n                                        FetchTeamReport(this.state.reportItemId, this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }));\r\n                                    }\r\n                                }}\r\n                            >Generate report</Button>\r\n                        </div>}\r\n                </div>\r\n                <div style={{ clear: \"both\" }}>\r\n                    {this.state.Report.length === 0 ? this.state.loading ? <LoadingScreen /> : null :\r\n                        this.state.reportBy === \"Project\" ? <ProjectReport report={this.state.Report} changeToUserReport={changeToUserReport} download={() => DownloadProjectReport(this.state.reportItemId, this.state.minDate, this.state.maxDate)} /> :\r\n                            this.state.reportBy === \"User\" ? <UserReport report={this.state.Report} download={window.sessionStorage.getItem(\"role\") === \"client\" ? () => DownloadClientUserReport(this.state.reportItemId, window.sessionStorage.getItem(\"id\"), this.state.minDate, this.state.maxDate) : () => DownloadUserReport(this.state.reportItemId, this.state.minDate, this.state.maxDate)} /> :\r\n                                this.state.reportBy === \"Team\" ? <TeamReport report={this.state.Report} /> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReportsDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass TeamsListTable extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\", validate: rowData => {\r\n                    if (rowData.name === \"\" || rowData.name === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Name must not be empty\"\r\n                        };\r\n                    }\r\n                    else if (this.props.teamsList.some(project => project.name === rowData.name)) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Names must be unique\"\r\n                        };\r\n                    }\r\n                    else return true;\r\n                }\r\n            },\r\n            // {\r\n            //     title: \"Projects\", field: \"projects\", editable: \"never\",\r\n            //     render: rowData => <div>{rowData.projects.map(project => <Chip style={{ marginRight: 2, marginTop: 2 }} key={project.id}\r\n            //         label={project.name}\r\n            //         onClick={() => window.location.href = \"/projectReview/\" + project.id} />)}</div>,\r\n            //     customFilterAndSearch: (term, rowData) => rowData.projects.some(project => project.name.toLowerCase().startsWith(term.toLowerCase()))\r\n            // },\r\n            {\r\n                title: \"Number of users\", field: \"userCount\", editable: \"never\"\r\n            },\r\n            {\r\n                editable: \"never\", title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n        ]\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    columns={this.state.columns}\r\n                    data={this.props.teamsList}\r\n                    icons={tableIcons}\r\n                    title=\"Teams\"\r\n                    options={{\r\n\r\n                        addRowPosition: \"first\",\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    actions={[\r\n                        // {\r\n                        //     icon: () => <WorkIcon />,\r\n                        //     tooltip: \"Team projects\",\r\n                        //     onClick: (event, rowData) => {\r\n                        //         new Promise((resolve) => {\r\n                        //             setTimeout(() => {\r\n                        //                 resolve();\r\n                        //                 window.location.href = \"/teamProjects/\" + rowData.id\r\n                        //             }, 600);\r\n                        //         })\r\n                        //     }\r\n                        // },\r\n                        {\r\n                            icon: () => <GroupAddIcon />,\r\n                            tooltip: \"Team members\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        window.location.href = \"/teamMembers/\" + rowData.id\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }\r\n                    ]}\r\n                    editable={{\r\n                        onRowAdd: (newData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (newData.firstname === \"\") {\r\n                                        return;\r\n                                    }\r\n                                    this.props.createTeam(newData);\r\n                                }, 600);\r\n                            }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (newData.firstname === \"\") {\r\n                                        return;\r\n                                    }\r\n                                    if (oldData) {\r\n                                        this.props.updateTeam(newData);\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    this.props.deleteTeam(oldData.id);\r\n                                }, 600);\r\n                            })\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/teamDetails/\" + rowData.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamsListTable;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TeamListTable from \"../../Components/TeamsListTable/TeamsListTable\";\r\nimport { fetchTeamsList, createTeam, updateTeam, deleteTeam } from '../../Actions/TeamsListActions';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass TeamsDisplay extends Component {\r\n    state = {\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchTeamsList(this.state.minDate, this.state.maxDate);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            this.props.fetchTeamsList(this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.teamsList === null ? <LoadingScreen /> :\r\n                    <TeamListTable\r\n                        teamsList={this.props.teamsList}\r\n                        createTeam={this.props.createTeam}\r\n                        updateTeam={this.props.updateTeam}\r\n                        deleteTeam={this.props.deleteTeam}\r\n                        minDate={this.state.minDate}\r\n                        maxDate={this.state.maxDate}\r\n                        setMinDate={(date) => this.setState({ minDate: date })}\r\n                        setMaxDate={(date) => this.setState({ maxDate: date })}\r\n                    />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamsList: state.Teams\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchTeamsList: (start, end) => dispatch(fetchTeamsList(start, end)),\r\n    createTeam: (data) => dispatch(createTeam(data)),\r\n    updateTeam: (data) => dispatch(updateTeam(data)),\r\n    deleteTeam: (id) => dispatch(deleteTeam(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamsDisplay);","import { ActionType } from \"../Constants/ActionType\";\r\nimport { FetchTeamsList, CreateTeam, UpdateTeam, DeleteTeam } from \"../API/API\";\r\n\r\nexport const fetchTeamsList = (start, end) => async (dispatch) => {\r\n    let teamList = await FetchTeamsList(start, end);\r\n    dispatch({\r\n        type: ActionType.LOAD_TEAM_LIST,\r\n        payload: teamList\r\n    })\r\n};\r\n\r\n\r\nexport const createTeam = (data) => async (dispatch) => {\r\n    let id = await CreateTeam(data);\r\n    let createdTeam = data;\r\n    createdTeam.projects = [];\r\n    createdTeam.average = 0;\r\n    createdTeam.id = id;\r\n    createdTeam.userCount = 0;\r\n    dispatch({\r\n        type: ActionType.CREATE_TEAM,\r\n        payload: createdTeam\r\n    })\r\n};\r\n\r\nexport const updateTeam = (data) => async (dispatch) => {\r\n    await UpdateTeam(data);\r\n    dispatch({\r\n        type: ActionType.UPDATE_TEAM,\r\n        payload: data\r\n    })\r\n};\r\n\r\nexport const deleteTeam = (id) => async (dispatch) => {\r\n    await DeleteTeam(id);\r\n    dispatch({\r\n        type: ActionType.DELETE_TEAM,\r\n        payload: id\r\n    })\r\n};","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nclass TemplateTable extends Component {\r\n    state = {\r\n        columns: [\r\n            { title: 'Template name', field: 'name', customFilterAndSearch: (term, rowData) => rowData.name.toLowerCase().startsWith(term.toLowerCase()) },\r\n            {\r\n                title: \"Projects\",\r\n                editable: \"never\",\r\n                field: \"projects\",\r\n                render: rowData => <div>{rowData.Projects.map(project => <Chip style={{ marginRight: 2, marginTop: 2, backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} key={project.id}\r\n                    label={project.name}\r\n                    onClick={() => window.location.href = \"/ProjectDetails/\" + project.id} />)}</div>,\r\n                customFilterAndSearch: (term, rowData) => rowData.Projects.some(project => project.name.toLowerCase().startsWith(term.toLowerCase()))\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"evaluationCount\"\r\n            }\r\n        ]\r\n    }\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    title=\"Templates\"\r\n                    icons={tableIcons}\r\n                    data={this.props.templates}\r\n                    columns={this.state.columns}\r\n                    options={{\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10,\r\n                        filtering: true\r\n                    }}\r\n                    actions={[\r\n                        {\r\n                            icon: () => <FileCopyIcon />,\r\n                            tooltip: \"Copy template\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        this.props.copyTemplate(rowData.id, rowData.name);\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: () => <WorkIcon />,\r\n                            tooltip: \"Template projects\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        window.location.href = \"/TemplateProjects/\" + rowData.id\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: () => <Edit />,\r\n                            tooltip: \"Edit template\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        window.location.href = \"/EditTemplate/\" + rowData.id\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        },\r\n                    ]}\r\n                    editable={{\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    this.props.deleteTemplate(oldData.id);\r\n                                }, 600);\r\n                            })\r\n                    }}\r\n\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemplateTable;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TemplateTable from '../../Components/TemplateTable/TemplateTable';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTemplates, deleteTemplate, copyTemplate } from '../../Actions/TemplateDisplayActions';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass TemplatesDisplay extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        this.props.fetchTemplates();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.templates === null ? <LoadingScreen /> :\r\n                    <div><Button variant=\"contained\" href=\"/newTemplate\" style={{ marginBottom: 10, marginLeft: 10, backgroundColor: \"#DAA1A0\", color: \"#F2F5F9\" }}>Create new template</Button>\r\n                        <TemplateTable\r\n                            templates={this.props.templates}\r\n                            copyTemplate={this.props.copyTemplate}\r\n                            deleteTemplate={this.props.deleteTemplate} /></div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    templates: state.Templates\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchTemplates: () => dispatch(fetchTemplates()),\r\n    copyTemplate: (id, name) => dispatch(copyTemplate(id, name)),\r\n    deleteTemplate: (id) => dispatch(deleteTemplate(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatesDisplay);","import { ActionType } from \"../Constants/ActionType\";\r\nimport { FetchTemplatesList, DeleteTemplate, FetchClientTemplatesList, CopyTemplate } from \"../API/API\";\r\n\r\nexport const fetchTemplates = () => async (dispatch) => {\r\n    let templates = await FetchTemplatesList();\r\n    dispatch({\r\n        type: ActionType.LOAD_TEMPLATE_LIST,\r\n        payload: templates\r\n    });\r\n};\r\n\r\nexport const fetchClientTemplates = (id) => async (dispatch) => {\r\n    let templates = await FetchClientTemplatesList(id);\r\n    dispatch({\r\n        type: ActionType.LOAD_TEMPLATE_LIST,\r\n        payload: templates\r\n    });\r\n};\r\n\r\nexport const copyTemplate = (ids, name) => async (dispatch) => {\r\n    let newData = await CopyTemplate(ids);\r\n    let data = {\r\n        id: newData.id,\r\n        name: newData.name,\r\n        Projects: [],\r\n    }\r\n    dispatch({\r\n        type: ActionType.COPY_TEMPLATE,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const deleteTemplate = (id) => async (dispatch) => {\r\n    await DeleteTemplate(id);\r\n    dispatch({\r\n        type: ActionType.DELETE_TEMPLATE,\r\n        payload: id\r\n    })\r\n}","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\r\n\r\nclass ArchivedUserListTable extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Role\", field: \"role\", lookup: {\r\n                    \"admin\": \"Admin\",\r\n                    \"user\": \"User\",\r\n                    \"client\": \"Client\"\r\n                }\r\n            },\r\n            { title: 'Name', field: 'firstname' },\r\n            {\r\n                title: 'Surname', field: 'lastname',\r\n            },\r\n        ]\r\n    }\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div>\r\n                <div style={{ padding: 10 }}>\r\n                    <MaterialTable\r\n                        options={{\r\n                            filtering: true,\r\n                            actionsColumnIndex: -1,\r\n                            pageSize: 10\r\n                        }}\r\n                        icons={tableIcons}\r\n                        title=\"Archived Accounts\"\r\n                        columns={this.state.columns}\r\n                        data={this.props.archivedUserData.filter(user => user.isArchived === true)}\r\n                        actions={[{\r\n                            icon: () => <UnarchiveIcon />,\r\n                            tooltip: \"Unarchive\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        this.props.unarchiveUser(rowData);\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }]}\r\n                        editable={{\r\n                            onRowDelete: (oldData) =>\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        this.setState((prevState) => {\r\n                                            this.props.deleteUser(oldData);\r\n                                        });\r\n                                    }, 600);\r\n                                })\r\n                        }}\r\n                        onRowClick={(event, rowData, togglePanel) => rowData.role === \"user\" ? window.location.href = \"/ArchivedUser/\" + rowData.id : null}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArchivedUserListTable;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport ArchivedUserListTable from '../../Components/ArchivedUserListTable/ArchivedUserListTable';\r\nimport { fetchArchivedUserData, unarchiveUser, deleteUser } from '../../Actions/ArchivedUserListActions';\r\nimport LoadingScrren from \"../../Components/LoadingScreen/LoadingScreen\";\r\n\r\nclass ArchiveDisplay extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        this.props.fetchArchivedUserData();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.archivedUserData === null ? <LoadingScrren /> :\r\n                    <ArchivedUserListTable\r\n                        archivedUserData={this.props.archivedUserData}\r\n                        unarchiveUser={this.props.unarchiveUser}\r\n                        deleteUser={this.props.deleteUser} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    archivedUserData: state.Users\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchArchivedUserData: () => dispatch(fetchArchivedUserData()),\r\n    unarchiveUser: (oldData) => dispatch(unarchiveUser(oldData)),\r\n    deleteUser: (oldData) => dispatch(deleteUser(oldData))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArchiveDisplay);","import { ActionType } from \"../Constants/ActionType\";\r\nimport { UnarchiveUser, MarkUserDeleted, FetchArchivedUserList } from \"../API/API\";\r\n\r\nexport const fetchArchivedUserData = () => async (dispatch) => {\r\n    let userList = await FetchArchivedUserList()\r\n    dispatch({\r\n        type: ActionType.LOAD_ARCHIVED_USERS,\r\n        payload: userList\r\n    });\r\n};\r\n\r\nexport const unarchiveUser = (oldData) => async (dispatch) => {\r\n    await UnarchiveUser(oldData.id);\r\n    dispatch({\r\n        type: ActionType.UNARCHIVE_USER,\r\n        payload: oldData\r\n    });\r\n};\r\n\r\nexport const deleteUser = (oldData) => async (dispatch) => {\r\n    await MarkUserDeleted(oldData.id);\r\n    dispatch({\r\n        type: ActionType.DELETE_USER,\r\n        payload: oldData\r\n    });\r\n};","import React, { Component, forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport { TextField, IconButton } from '@material-ui/core';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { DownloadAllUsers } from '../../API/DownloadAPI';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    Archive: forwardRef((props, ref) => <ArchiveIcon {...props} ref={ref} />)\r\n};\r\n\r\nclass UserListTable extends Component {\r\n    state = {}\r\n\r\n    componentDidMount() {\r\n        let columns = [\r\n            {\r\n                title: \"Role\", field: \"role\", lookup: {\r\n                    \"admin\": \"Admin\",\r\n                    \"user\": \"User\",\r\n                    \"client\": \"Client\"\r\n                },\r\n                validate: rowData => {\r\n                    if (rowData.role === \"\" || rowData.role === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Role must be selected\"\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            {\r\n                title: \"Username\", field: \"username\", validate: rowData => {\r\n                    if (rowData.username === \"\" || rowData.username === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Username must not be empty\"\r\n                        }\r\n                    }\r\n                    // else if (this.props.userData.some(user => user.username === rowData.username)) {\r\n                    //     return {\r\n                    //         isValid: false,\r\n                    //         helperText: \"Username must be unique\"\r\n                    //     }\r\n                    // }\r\n                    return true;\r\n                }\r\n            },\r\n            {\r\n                title: \"Password\", field: \"password\", filtering: false, render: rowData => {\r\n                    let password = \"\";\r\n                    for (var i = 0; i < rowData.passwordLength; i++) {\r\n                        password = password.concat(\"•\");\r\n                    }\r\n                    return password;\r\n                },\r\n                editComponent: props => (\r\n                    <TextField type=\"password\" value={props.value} onChange={e => props.onChange(e.target.value)} />\r\n                ),\r\n                validate: rowData => {\r\n                    if (rowData.password === \"\" || rowData.password === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Password must not be empty\"\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            {\r\n                title: 'Name', field: 'firstname', validate: rowData => {\r\n                    if (rowData.firstname === \"\" || rowData.firstname === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Firstname must not be empty\"\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            {\r\n                title: 'Surname', field: 'lastname', validate: rowData => {\r\n                    if (rowData.lastname === \"\" || rowData.lastname === undefined) {\r\n                        return {\r\n                            isValid: false,\r\n                            helperText: \"Lastname must not be empty\"\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            {\r\n                title: \"Team\", field: \"team\", editable: \"never\",\r\n                render: rowData => rowData.teamName === null ? \"\" : <a href={\"/teamDetails/\" + rowData.teamId}>{rowData.teamName} </a>,\r\n                customFilterAndSearch: (term, rowData) => rowData.teamName === null ? false : rowData.teamName.toLowerCase().startsWith(term.toLowerCase()),\r\n            },\r\n            {\r\n                editable: \"never\", title: \"Score\", field: \"score\", render: rowData => rowData.role === \"user\" ? isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\" : null,\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"caseCount\", customFilterAndSearch: (term, rowData) => rowData.caseCount === parseInt(term), editable: \"never\",\r\n                render: rowData => rowData.role === \"user\" ? rowData.caseCount : null\r\n            }\r\n        ];\r\n\r\n        this.setState({\r\n            columns\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10, paddingLeft: 10, paddingRight: 10 }}>\r\n                <MaterialTable\r\n                    options={{\r\n                        addRowPosition: \"first\",\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    icons={tableIcons}\r\n                    title=\"Accounts\"\r\n                    columns={this.state.columns}\r\n                    data={this.props.userData.filter(user => user.isArchived === false)}\r\n                    actions={[\r\n                        {\r\n                            icon: () => <WorkIcon />,\r\n                            tooltip: \"Projects\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        if (rowData.role !== \"admin\") {\r\n                                            window.location.href = \"/UsersProjects/\" + rowData.id\r\n                                        }\r\n                                    }, 600);\r\n                                })\r\n                            },\r\n                        },\r\n                        {\r\n                            icon: () => <ArchiveIcon />,\r\n                            tooltip: \"Archive\",\r\n                            onClick: (event, rowData) => {\r\n                                new Promise((resolve) => {\r\n                                    setTimeout(() => {\r\n                                        resolve();\r\n                                        this.props.archiveUser(rowData);\r\n                                        if (rowData.id === parseInt(window.sessionStorage.getItem(\"id\"))) {\r\n                                            localStorage.clear();\r\n                                            window.location.reload();\r\n                                        }\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }]}\r\n                    editable={{\r\n                        onRowAdd: (newData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (newData.firstname === \"\" || newData.lastname === \"\" ||\r\n                                        newData.role === \"\" || newData.username === \"\" ||\r\n                                        newData.password === \"\") {\r\n                                        return;\r\n                                    }\r\n                                    if (this.props.userData.some(user => user.username === newData.username)) {\r\n                                        return;\r\n                                    }\r\n                                    let newUser = {\r\n                                        id: this.props.userData.length,\r\n                                        role: newData.role,\r\n                                        firstname: newData.firstname,\r\n                                        lastname: newData.lastname,\r\n                                        username: newData.username,\r\n                                        password: newData.password,\r\n                                        passwordLength: newData.password.length,\r\n                                        isArchived: false,\r\n                                        user: newData.firstname,\r\n                                        pass: newData.lastname,\r\n                                        teamId: parseInt(newData.teamId)\r\n                                    }\r\n                                    this.props.addUser(newUser);\r\n                                    this.forceUpdate();\r\n                                }, 600);\r\n                            }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (newData.firstname === \"\" || newData.lastname === \"\" ||\r\n                                        newData.role === \"\" || newData.username === \"\" ||\r\n                                        newData.password === \"\") {\r\n                                        return;\r\n                                    }\r\n                                    if (oldData) {\r\n                                        newData.teamId = parseInt(newData.teamId);\r\n                                        this.props.updateUser(newData);\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <IconButton onClick={() => DownloadAllUsers(this.props.minDate, this.props.maxDate)}>\r\n                                        <GetAppIcon fontSize=\"large\" />\r\n                                    </IconButton>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => rowData.role === \"user\" && rowData.id !== undefined ? window.location.href = \"/userDetails/\" + rowData.id : null}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserListTable;","import React, { Component } from 'react';\r\nimport UserListTable from '../../Components/UserListTable/UserListTable';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUserData, addUser, updateUser, archiveUser } from '../../Actions/UserListActions';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass UserListDisplay extends Component {\r\n    state = {\r\n        type: \"user\",\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchUserData(this.state.minDate, this.state.maxDate);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            this.props.fetchUserData(this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.userData !== null ?\r\n                <UserListTable\r\n                    userData={this.props.userData}\r\n                    teams={this.props.teams}\r\n                    addUser={this.props.addUser}\r\n                    updateUser={this.props.updateUser}\r\n                    archiveUser={this.props.archiveUser}\r\n                    minDate={this.state.minDate}\r\n                    maxDate={this.state.maxDate}\r\n                    setMinDate={(date) => this.setState({ minDate: date })}\r\n                    setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                :\r\n                <LoadingScreen />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userData: state.Users,\r\n    teams: state.Teams\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchUserData: (start, end) => dispatch(fetchUserData(start, end)),\r\n    addUser: (data) => dispatch(addUser(data)),\r\n    updateUser: (data) => dispatch(updateUser(data)),\r\n    archiveUser: (oldData) => dispatch(archiveUser(oldData))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserListDisplay);","import { ActionType } from \"../Constants/ActionType\";\r\nimport { FetchUserList, ArchiveUser, CreateUser, UpdateUser, FetchTeamsList } from \"../API/API\";\r\n\r\nexport const fetchUserData = (start, end) => async (dispatch) => {\r\n    let userList = await FetchUserList(start, end)\r\n    dispatch({\r\n        type: ActionType.LOAD_USERS,\r\n        payload: userList\r\n    });\r\n};\r\n\r\nexport const fetchTeamNames = () => async (dispatch) => {\r\n    let teamsList = await FetchTeamsList()\r\n    dispatch({\r\n        type: ActionType.LOAD_TEAM_LIST,\r\n        payload: teamsList\r\n    });\r\n};\r\n\r\nexport const addUser = (data) => async (dispatch) => {\r\n    let id = await CreateUser(data);\r\n    data.id = id;\r\n    dispatch({\r\n        type: ActionType.CREATE_USER,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const updateUser = (data) => async (dispatch) => {\r\n    await UpdateUser(data);\r\n    dispatch({\r\n        type: ActionType.UPDATE_USER,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const archiveUser = (oldData) => async (dispatch) => {\r\n    await ArchiveUser(oldData.id);\r\n    dispatch({\r\n        type: ActionType.ARCHIVE_USER,\r\n        payload: oldData\r\n    });\r\n};","import React, { useState } from 'react';\r\nimport RTCLogo from \"../../Images/QLogo.png\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Login } from '../../API/API';\r\nimport LoadingScreen from '../LoadingScreen/LoadingScreen';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography style={{ color: \"white\" }} variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://infomedia.lt\">\r\n                Infomedia\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorIsShowing, setErrorIsShowing] = useState(false);\r\n\r\n    const attemtSignIn = () => {\r\n        setLoading(true);\r\n        let data = {\r\n            username: username,\r\n            password: password\r\n        };\r\n        Login(data).then(response => {\r\n            if (response === \"notFound\") {\r\n                setLoading(false);\r\n                setErrorIsShowing(true);\r\n            }\r\n            else {\r\n                window.sessionStorage.setItem(\"username\", response.username);\r\n                window.sessionStorage.setItem(\"name\", response.firstname + \" \" + response.lastname);\r\n                window.sessionStorage.setItem(\"id\", response.Id);\r\n                window.sessionStorage.setItem(\"role\", response.role);\r\n                if (response.role === \"client\" && response.projectsCount === 0) {\r\n                    window.sessionStorage.clear();\r\n                    setLoading(false);\r\n                    setErrorIsShowing(true);\r\n                }\r\n                window.location.reload(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div onKeyPress={e => {\r\n            if (e.key === \"Enter\") {\r\n                attemtSignIn();\r\n            }\r\n        }}>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <img src={RTCLogo} alt=\"RTC_Logo\" style={{ width: 400, height: 400, marginTop: 30 }} />\r\n            </div>\r\n            {loading ? <LoadingScreen /> :\r\n                <div>\r\n                    <div>\r\n                        <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} autoHideDuration={4000} open={errorIsShowing} onClose={() => setErrorIsShowing(false)}>\r\n                            <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">Failed to sign in</MuiAlert>\r\n                        </Snackbar>\r\n                    </div>\r\n                    <Container component=\"main\" maxWidth=\"xs\">\r\n                        <CssBaseline />\r\n                        <div className={classes.paper}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography style={{ color: \"white\" }} component=\"h1\" variant=\"h5\">\r\n                                Sign in\r\n                            </Typography>\r\n                            <form className={classes.form} noValidate>\r\n                                <TextField\r\n\r\n                                    style={{ color: \"white\" }}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"field\"\r\n                                    label=\"Username\"\r\n                                    autoComplete=\"username\"\r\n                                    autoFocus\r\n                                    value={username}\r\n                                    onChange={e => setUsername(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"field\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={e => setPassword(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    style={{ backgroundColor: \"#DAA1A0\", color: \"#F2F5F9\" }}\r\n                                    disabled={username.length < 4 || password.length < 4}\r\n                                    className={classes.submit}\r\n                                    onClick={() => attemtSignIn()}\r\n                                >\r\n                                    Sign In\r\n          </Button>\r\n                            </form>\r\n                        </div>\r\n                        <Box mt={8}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </Container>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport LoginLayout from '../../Components/LoginLayout/LoginLayout';\r\n\r\nclass LoginDisplay extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <LoginLayout />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginDisplay;","import * as React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nimport \"./UnifiedModal.scss\";\r\n\r\nconst UnifiedModal = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={props.open}\r\n        className={`unifiedModal ${props.className}`}\r\n      >\r\n        <div className=\"paper\">\r\n          <div className=\"title\">\r\n            <h1>{props.title}</h1>\r\n          </div>\r\n          {props.children}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UnifiedModal\r\n\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./DefaultTextArea.scss\";\r\n\r\nclass DefaultTextArea extends Component {\r\n  state = {\r\n    value: undefined,\r\n  };\r\n  render() {\r\n    const isRequiredErrorShown = () => {\r\n      return this.props.isRequired && this.state.value === \"\";\r\n    };\r\n    return (\r\n      <div>\r\n        <TextField\r\n          disabled={this.props.disabled === undefined ? false : this.props.disabled}\r\n          defaultValue={this.props.defaultValue}\r\n          error={isRequiredErrorShown()}\r\n          helperText={isRequiredErrorShown() ? \"Required!\" : null}\r\n          className=\"TextArea\"\r\n          multiline\r\n          rows=\"10\"\r\n          variant=\"outlined\"\r\n          name={this.props.name}\r\n          label={\r\n            this.props.isRequired ? \"*\" + this.props.label : this.props.label\r\n          }\r\n          onChange={(e) => {\r\n            this.setState({ value: e.target.value });\r\n            if (this.props.onChange !== undefined) {\r\n              this.props.onChange(e);\r\n            }\r\n          }}\r\n          onBlur={this.props.handleBur}\r\n          value={this.state.value}\r\n          inputProps={{ maxLength: this.props.maxLength }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultTextArea;\r\n","import React, { Component } from \"react\";\r\nimport \"./DefaultButton.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass DefaultButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"ButtonBlock\">\r\n        <Button\r\n          name={this.props.name}\r\n          className={\r\n            this.props.purpose === \"cancel\" ? \"ButtonCancel\" : this.props.purpose === \"addCategory\" ? \"ButtonAddCategory\" :   \"Button\"\r\n          }\r\n          type={this.props.type}\r\n          variant=\"contained\"\r\n          disabled={\r\n            this.props.disabled === undefined ? false : this.props.disabled\r\n          }\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.label === undefined ? \"Button\" : this.props.label}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultButton;\r\n","import * as React from \"react\";\r\nimport DefaultButton from \"../../DefaultButton\";\r\nimport \"./ButtonBlock.scss\";\r\n\r\nconst ButtonBlock = (props) => {\r\n\r\n    return (\r\n        <div className=\"buttonBlock\">\r\n            <div className=\"innerButton\">\r\n                <DefaultButton\r\n                    purpose=\"save\"\r\n                    label=\"Exit\"\r\n                    type={props.saveType}\r\n                    onClick={props.onSave}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ButtonBlock","import React, { Component } from 'react';\r\nimport { Button, List, ListItem, ListItemText, TextField, ListItemSecondaryAction, IconButton, ListSubheader, ListItemIcon, Collapse, Chip } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport UnifiedModal from '../Core-Components/UnifiedModal';\r\nimport DefaultTextArea from '../Core-Components/DefaultTextArea/DefaultTextArea';\r\nimport ButtonBlock from '../Core-Components/UnifiedModal/ButtonBlock/ButtonBlock';\r\n\r\nconst calculateSum = (criteria) => {\r\n    let sum = 0;\r\n    criteria.forEach(temp => sum += parseInt(temp.points));\r\n    return sum;\r\n}\r\n\r\nlet index = 4;\r\n\r\nclass TemplateCreator extends Component {\r\n    state = {\r\n        modalOpen: false,\r\n        criteriaModalOpen: false,\r\n        commentTopicId: null,\r\n        criteriaId: null,\r\n        editing: false,\r\n        templateName: \"\",\r\n        topics: [\r\n            {\r\n                id: 0,\r\n                name: \"Confidentiality\",\r\n                critical: true,\r\n                description: \"\",\r\n                editing: false,\r\n                open: true,\r\n            },\r\n            {\r\n                id: 1,\r\n                name: \"Swearing\",\r\n                critical: true,\r\n                description: \"\",\r\n                editing: false,\r\n                open: true,\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Communication\",\r\n                critical: false,\r\n                description: \"\",\r\n                editing: false,\r\n                open: true,\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"Data Entries\",\r\n                critical: false,\r\n                description: \"\",\r\n                editing: false,\r\n                open: true,\r\n            }\r\n        ],\r\n        criteria: [],\r\n        categories: [\"inbound\", \"outbound\"],\r\n        currentCategory: \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UnifiedModal open={this.state.modalOpen} title=\"Description\">\r\n                    <DefaultTextArea defaultValue={this.state.modalOpen ? this.state.topics.find(topic => topic.id === this.state.commentTopicId).description : \"\"} label=\"Add description...\" maxLength={600} onChange={e => {\r\n                        let TempTopics = [...this.state.topics];\r\n                        TempTopics.find(topic => topic.id === this.state.commentTopicId).description = e.target.value;\r\n                        this.setState({\r\n                            topics: [...TempTopics]\r\n                        })\r\n                    }} />\r\n                    <ButtonBlock onSave={() => this.setState({ modalOpen: false, commentTopicId: null })} />\r\n                </UnifiedModal>\r\n                <UnifiedModal open={this.state.criteriaModalOpen} title=\"Description\">\r\n                    <DefaultTextArea defaultValue={this.state.criteriaModalOpen ? this.state.criteria.find(topic => topic.id === this.state.criteriaId).description : \"\"} label=\"Add description...\" maxLength={600} onChange={e => {\r\n                        let TempCriteria = [...this.state.criteria];\r\n                        TempCriteria.find(topic => topic.id === this.state.criteriaId).description = e.target.value;\r\n                        this.setState({\r\n                            criteria: [...TempCriteria]\r\n                        })\r\n                    }} />\r\n                    <ButtonBlock onSave={() => this.setState({ criteriaModalOpen: false, criteriaId: null })} />\r\n                </UnifiedModal>\r\n                <div style={{ marginLeft: \"15%\", marginRight: \"15%\", marginTop: 25, background: \"rgba(242, 245, 249, 0.6)\", borderRadius: 10, textAlign: \"center\" }}>\r\n                    <TextField error={this.props.templateNames.some(temp => temp === this.state.templateName)} inputProps={{ style: { textAlign: 'center' } }} style={{ paddingBottom: 15, width: 250 }} defaultValue=\"\" label=\"Template name\" onChange={e => this.setState({ templateName: e.target.value })} />\r\n                    {this.props.templateNames.some(temp => temp === this.state.templateName) ? <p style={{ color: \"red\" }}>Template name already exists!</p> : null}\r\n                    <div className=\"ButtonBlock\" >\r\n                        <Button color=\"secondary\" variant=\"contained\" onClick={() => {\r\n                            let tempTopics = [...this.state.topics]\r\n                            tempTopics.push({\r\n                                id: index,\r\n                                name: \"Enter name\",\r\n                                description: \"\",\r\n                                critical: true,\r\n                                editing: true,\r\n                            });\r\n                            index++;\r\n                            this.setState({ topics: tempTopics, editing: true })\r\n                        }}>\r\n                            Add critical\r\n                    </Button>\r\n                        <Button color=\"primary\" variant=\"contained\" style={{ marginLeft: 5 }} onClick={() => {\r\n                            let tempTopics = [...this.state.topics]\r\n                            tempTopics.push({\r\n                                id: index,\r\n                                name: \"Enter name\",\r\n                                description: \"\",\r\n                                critical: false,\r\n                                editing: true,\r\n                                open: true,\r\n                            });\r\n                            index++;\r\n                            this.setState({ topics: tempTopics, editing: true })\r\n                        }}>\r\n                            Add topic\r\n                    </Button>\r\n                        <div style={{ marginLeft: \"15%\", marginRight: \"15%\", marginTop: 15, marginBottom: 15 }}>\r\n                            <TextField inputProps={{ style: { textAlign: 'center' } }} onKeyPress={e => {\r\n                                if (e.key === \"Enter\") {\r\n                                    if (this.state.currentCategory !== \"\" && !this.state.categories.includes(this.state.currentCategory)) {\r\n                                        let tempCategories = [...this.state.categories];\r\n                                        tempCategories.push(this.state.currentCategory);\r\n                                        this.setState({\r\n                                            currentCategory: \"\",\r\n                                            categories: tempCategories\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }} value={this.state.currentCategory} label=\"Add category\" onChange={e => this.setState({ currentCategory: e.target.value })} />\r\n                            <IconButton style={{ marginTop: 5 }} onClick={() => {\r\n                                if (this.state.currentCategory !== \"\" && !this.state.categories.includes(this.state.currentCategory)) {\r\n                                    let tempCategories = [...this.state.categories];\r\n                                    tempCategories.push(this.state.currentCategory);\r\n                                    this.setState({\r\n                                        currentCategory: \"\",\r\n                                        categories: tempCategories\r\n                                    })\r\n                                }\r\n                            }}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                            <div>\r\n                                {this.state.categories.map(category => {\r\n                                    return (\r\n                                        <Chip style={{ margin: 2, backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} key={category} label={category} onDelete={() => {\r\n                                            let tempCategories = [...this.state.categories];\r\n                                            this.setState({\r\n                                                categories: tempCategories.filter(temp => temp !== category)\r\n                                            })\r\n                                        }} />\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p style={{ paddingTop: 10 }}><b>Overall Points: {calculateSum(this.state.criteria)}</b></p>\r\n                    <List style={{ color: \"red\" }}>\r\n                        <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                            Criticals\r\n                    </ListSubheader>\r\n                        {this.state.topics.filter(topic => topic.critical).map(entry => {\r\n                            if (entry.editing) {\r\n                                return (\r\n                                    <div key={entry.id} onKeyPress={e => {\r\n                                        if (e.key === \"Enter\") {\r\n                                            let id = entry.id;\r\n                                            let tempTopics = [...this.state.topics];\r\n                                            tempTopics.find(critical => critical.id === id).editing = false;\r\n                                            this.setState({\r\n                                                editing: false,\r\n                                                topics: tempTopics\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                        <ListItem button key={entry.id}>\r\n                                            <TextField autoFocus style={{ width: 500 }} defaultValue={entry.name} onChange={e => {\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.find(critical => critical.id === entry.id).name = e.target.value;\r\n                                                this.setState({ topics: tempTopics })\r\n                                            }} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton edge=\"end\" aria-label=\"Save\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    if (this.state.topics.filter(topic => topic.name === this.state.topics.find(critical => critical.id === id).name).length === 1) {\r\n\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(critical => critical.id === id).editing = false;\r\n                                                        this.setState({\r\n                                                            editing: false,\r\n                                                            topics: tempTopics\r\n                                                        })\r\n                                                    }\r\n                                                }}>\r\n                                                    <DoneIcon />\r\n                                                </IconButton>\r\n                                                <IconButton edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    let tempTopics = [...this.state.topics];\r\n                                                    tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                    tempTopics.filter(critical => critical.id === id);\r\n                                                    this.setState({\r\n                                                        topics: tempTopics,\r\n                                                        editing: false\r\n                                                    })\r\n                                                }}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n\r\n                                        </ListItem>\r\n\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <IconButton onClick={() => this.setState({ modalOpen: true, commentTopicId: entry.id })}>\r\n                                                <DescriptionIcon style={{ color: entry.description === \"\" ? null : \"green\" }} />\r\n                                            </IconButton>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText>{entry.name}</ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton disabled={this.state.editing} edge=\"end\" aria-label=\"Edit\" onClick={() => {\r\n                                                let id = entry.id;\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.find(critical => critical.id === id).editing = true;\r\n                                                this.setState({\r\n                                                    editing: true,\r\n                                                    topics: tempTopics\r\n                                                })\r\n                                            }}>\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                            <IconButton disabled={this.state.editing} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                let id = entry.id;\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                tempTopics.filter(critical => critical.id === id);\r\n                                                let tempCriteria = [...this.state.criteria];\r\n                                                tempCriteria.filter(criteria => criteria.parentId !== id);\r\n                                                this.setState({\r\n                                                    topics: tempTopics,\r\n                                                    criteria: tempCriteria,\r\n                                                    editing: false\r\n                                                })\r\n                                            }}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </List>\r\n                    <hr />\r\n                    <List style={{ color: \"blue\" }}>\r\n                        <ListSubheader disableSticky style={{ color: \"blue\" }} component=\"div\" >\r\n                            Topics and Criterias\r\n                    </ListSubheader>\r\n                        {this.state.topics.filter(topic => !topic.critical).map(entry => {\r\n                            if (entry.editing) {\r\n                                return (\r\n                                    <div key={entry.id} onKeyPress={e => {\r\n                                        if (e.key === \"Enter\") {\r\n                                            let id = entry.id;\r\n                                            let tempTopics = [...this.state.topics];\r\n                                            tempTopics.find(critical => critical.id === id).editing = false;\r\n                                            this.setState({\r\n                                                editing: false,\r\n                                                topics: tempTopics\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                        <ListItem button >\r\n                                            <TextField autoFocus style={{ width: 500 }} defaultValue={entry.name} onChange={e => {\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.find(critical => critical.id === entry.id).name = e.target.value;\r\n                                                this.setState({ topics: tempTopics })\r\n                                            }} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton edge=\"end\" aria-label=\"Save\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    if (this.state.topics.filter(topic => topic.name === this.state.topics.find(critical => critical.id === id).name).length === 1) {\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(critical => critical.id === id).editing = false;\r\n                                                        this.setState({\r\n                                                            editing: false,\r\n                                                            topics: tempTopics\r\n                                                        })\r\n                                                    }\r\n                                                }}>\r\n                                                    <DoneIcon />\r\n                                                </IconButton>\r\n                                                <IconButton edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    let tempTopics = [...this.state.topics];\r\n                                                    tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                    tempTopics.filter(critical => critical.id === id);\r\n                                                    let tempCriteria = [...this.state.criteria];\r\n                                                    tempCriteria = [...tempCriteria.filter(criteria => criteria.parentId !== id)];\r\n                                                    this.setState({\r\n                                                        topics: tempTopics,\r\n                                                        criteria: tempCriteria,\r\n                                                        editing: false\r\n                                                    })\r\n                                                }}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <div key={entry.id}>\r\n                                        <React.Fragment>\r\n                                            <ListItem button>\r\n                                                <ListItemIcon>\r\n                                                    <IconButton onClick={() => this.setState({ modalOpen: true, commentTopicId: entry.id })}>\r\n                                                        <DescriptionIcon style={{ color: entry.description === \"\" ? null : \"green\" }} />\r\n                                                    </IconButton>\r\n                                                </ListItemIcon>\r\n                                                <ListItemIcon>\r\n                                                    <IconButton onClick={() => {\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(temp => temp.id === entry.id).open = !entry.open;\r\n                                                        this.setState({\r\n                                                            topics: tempTopics\r\n                                                        });\r\n                                                    }}> {entry.open ? <ExpandLess /> : <ExpandMore />}</IconButton>\r\n                                                </ListItemIcon>\r\n                                                <ListItemText>{entry.name}</ListItemText>\r\n                                                <ListItemText style={{ textAlign: \"right\", marginRight: 80 }}>{<p style={{ paddingTop: 15 }}>Points: {calculateSum(this.state.criteria.filter(temp => temp.parentId === entry.id))}</p>}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton disabled={this.state.editing} edge=\"end\" aria-label=\"Add\" onClick={() => {\r\n                                                        let newCriteria = {\r\n                                                            id: index,\r\n                                                            name: \"Enter criteria name\",\r\n                                                            description: \"\",\r\n                                                            points: 1,\r\n                                                            editing: true,\r\n                                                            parentId: entry.id\r\n                                                        };\r\n                                                        index++;\r\n                                                        let oldCriteria = [...this.state.criteria];\r\n                                                        oldCriteria.push(newCriteria);\r\n                                                        this.setState({\r\n                                                            criteria: oldCriteria\r\n                                                        })\r\n                                                    }}>\r\n                                                        <AddIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton disabled={this.state.editing} edge=\"end\" aria-label=\"Edit\" onClick={() => {\r\n                                                        let id = entry.id;\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(critical => critical.id === id).editing = true;\r\n                                                        this.setState({\r\n                                                            editing: true,\r\n                                                            topics: tempTopics\r\n                                                        })\r\n                                                    }}>\r\n                                                        <EditIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton disabled={this.state.editing} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                        let id = entry.id;\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                        tempTopics.filter(critical => critical.id === id);\r\n                                                        let tempCriteria = [...this.state.criteria];\r\n                                                        tempCriteria = [...tempCriteria.filter(criteria => criteria.parentId !== id)];\r\n                                                        this.setState({\r\n                                                            topics: tempTopics,\r\n                                                            criteria: tempCriteria,\r\n                                                            editing: false\r\n                                                        })\r\n                                                    }}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        </React.Fragment>\r\n                                        <List style={{ color: \"green\" }}>\r\n                                            {this.state.criteria.filter(criteria => criteria.parentId === entry.id).map(criteria => {\r\n                                                if (criteria.editing) {\r\n                                                    return (\r\n                                                        <ListItem button key={criteria.id}>\r\n                                                            <div style={{ paddingLeft: 80 }} >\r\n                                                                <TextField onKeyPress={e => {\r\n                                                                    if (e.key === \"Enter\") {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(critical => critical.id === id).editing = false;\r\n                                                                        this.setState({\r\n                                                                            editing: false,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }\r\n                                                                }} autoFocus style={{ width: \"80%\" }} defaultValue={criteria.name} onChange={e => {\r\n                                                                    let tempCriteria = [...this.state.criteria];\r\n                                                                    tempCriteria.find(critical => critical.id === criteria.id).name = e.target.value;\r\n                                                                    this.setState({ criteria: tempCriteria })\r\n                                                                }} />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <TextField onKeyPress={e => {\r\n                                                                    if (e.key === \"Enter\") {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(critical => critical.id === id).editing = false;\r\n                                                                        this.setState({\r\n                                                                            editing: false,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }\r\n                                                                }} style={{ width: 40, marginLeft: 60 }} type=\"number\" focused={true} defaultValue={criteria.points} onChange={(e) => {\r\n                                                                    let tempCriteria = [...this.state.criteria];\r\n                                                                    let points = e.target.value;\r\n                                                                    if (points === \"\") {\r\n                                                                        points = 0;\r\n                                                                    }\r\n                                                                    tempCriteria.find(critical => critical.id === criteria.id).points = points;\r\n                                                                    this.setState({ criteria: tempCriteria })\r\n                                                                }} />\r\n                                                            </div>\r\n                                                            <ListItemSecondaryAction>\r\n                                                                <IconButton edge=\"end\" aria-label=\"Save\" onClick={() => {\r\n                                                                    let id = criteria.id;\r\n                                                                    if (this.state.criteria.filter(temp => temp.name === this.state.criteria.find(critical => critical.id === id).name).length === 1) {\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(critical => critical.id === id).editing = false;\r\n                                                                        this.setState({\r\n                                                                            editing: false,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }\r\n                                                                }}>\r\n                                                                    <DoneIcon />\r\n                                                                </IconButton>\r\n                                                                <IconButton edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                                    let id = criteria.id;\r\n                                                                    let tempCriteria = [...this.state.criteria];\r\n                                                                    tempCriteria.splice(tempCriteria.indexOf(criteria), 1);\r\n                                                                    tempCriteria.filter(critical => critical.id === id);\r\n                                                                    this.setState({\r\n                                                                        criteria: tempCriteria,\r\n                                                                        editing: false\r\n                                                                    })\r\n                                                                }}>\r\n                                                                    <DeleteIcon />\r\n                                                                </IconButton>\r\n                                                            </ListItemSecondaryAction>\r\n                                                        </ListItem>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n                                                    return (\r\n\r\n                                                        <Collapse in={entry.open} key={criteria.id}>\r\n                                                            <ListItem style={{ paddingLeft: 40 }}>\r\n                                                                <ListItemIcon>\r\n                                                                    <IconButton onClick={() => this.setState({ criteriaModalOpen: true, criteriaId: criteria.id })}>\r\n                                                                        <DescriptionIcon style={{ color: criteria.description === \"\" ? null : \"green\" }} />\r\n                                                                    </IconButton>\r\n                                                                </ListItemIcon>\r\n                                                                <ListItemText>{criteria.name}</ListItemText>\r\n                                                                <ListItemText style={{ textAlign: \"right\", marginRight: 80, marginLeft: 30 }}>{criteria.points}</ListItemText>\r\n                                                                <ListItemSecondaryAction>\r\n                                                                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(criteria => criteria.id === id).editing = true;\r\n                                                                        this.setState({\r\n                                                                            editing: true,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }}>\r\n                                                                        <EditIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={this.state.editing} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.splice(tempCriteria.indexOf(criteria), 1);\r\n                                                                        tempCriteria.filter(critical => critical.id === id);\r\n                                                                        this.setState({\r\n                                                                            criteria: tempCriteria,\r\n                                                                            editing: false\r\n                                                                        })\r\n                                                                    }}>\r\n                                                                        <DeleteIcon />\r\n                                                                    </IconButton>\r\n                                                                </ListItemSecondaryAction>\r\n                                                            </ListItem> </Collapse>)\r\n                                                }\r\n                                            })}\r\n                                        </List>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </List>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", marginTop: 20, marginBottom: 20 }}>\r\n                    <Button disabled={this.state.templateName === \"\" || this.state.editing || this.props.templateNames.some(temp => temp === this.state.templateName)} style={{ width: \"20%\", color: \"white\", backgroundColor: \"#DAA1A0\" }} onClick={() => {\r\n                        let outputData = {\r\n                            TemplateName: this.state.templateName,\r\n                            Topics: [],\r\n                            Criteria: [],\r\n                            Categories: this.state.categories\r\n                        };\r\n                        this.state.topics.forEach(topic => outputData.Topics.push({\r\n                            id: topic.id,\r\n                            name: topic.name,\r\n                            description: topic.description,\r\n                            critical: topic.critical\r\n                        }));\r\n                        this.state.criteria.forEach(criteria => outputData.Criteria.push({\r\n                            id: criteria.id,\r\n                            name: criteria.name,\r\n                            description: criteria.description,\r\n                            points: criteria.points,\r\n                            parentId: criteria.parentId\r\n                        }));\r\n                        this.props.createTemplate(outputData);\r\n                        setTimeout(() => window.location.href = \"/templates\", 3000);\r\n                    }}>Save</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemplateCreator;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TemplateCreator from '../../Components/TemplateCreator/TemplateCreator';\r\nimport { CreateTemplate, FetchTemplateNames } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass TemplateCreatorDisplay extends Component {\r\n    state = {\r\n        TemplateNames: null\r\n    }\r\n    componentDidMount() {\r\n        FetchTemplateNames().then(response => this.setState({ TemplateNames: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.TemplateNames === null ? <LoadingScreen /> :\r\n                    <TemplateCreator\r\n                        templateNames={this.state.TemplateNames}\r\n                        createTemplate={createTemplate} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nconst createTemplate = async (data) => {\r\n    await CreateTemplate(data);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateCreatorDisplay);","import React, { Component } from 'react';\r\nimport { Button, List, ListItem, ListItemText, TextField, ListItemSecondaryAction, IconButton, ListSubheader, ListItemIcon, Collapse, Chip } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport UnifiedModal from '../Core-Components/UnifiedModal';\r\nimport DefaultTextArea from '../Core-Components/DefaultTextArea/DefaultTextArea';\r\nimport ButtonBlock from '../Core-Components/UnifiedModal/ButtonBlock/ButtonBlock';\r\n\r\nconst calculateSum = (criteria) => {\r\n    let sum = 0;\r\n    criteria.forEach(temp => sum += parseInt(temp.points));\r\n    return sum;\r\n}\r\n\r\nlet index = 4;\r\n\r\nclass TemplateCreator extends Component {\r\n    UNSAFE_componentWillMount() {\r\n        this.setState({\r\n            isEditable: this.props.template.isEditable,\r\n            modalOpen: false,\r\n            criteriaModalOpen: false,\r\n            commentTopicId: null,\r\n            criteriaId: null,\r\n            id: this.props.template.id,\r\n            editing: false,\r\n            templateName: this.props.template.TemplateName,\r\n            topics: [],\r\n            criteria: [],\r\n            categories: this.props.template.Categories\r\n        });\r\n        let criteria = [];\r\n        let topics = [];\r\n        this.props.template.Topics.forEach(temp => {\r\n            topics.push({\r\n                id: temp.id,\r\n                name: temp.name,\r\n                critical: temp.critical,\r\n                description: temp.description,\r\n                editing: false,\r\n                open: true\r\n            });\r\n        });\r\n        this.props.template.Criteria.forEach(temp => {\r\n            criteria.push({\r\n                id: temp.id,\r\n                name: temp.name,\r\n                points: temp.points,\r\n                description: temp.description,\r\n                parentId: temp.parentId,\r\n                editing: false,\r\n            });\r\n        });\r\n        this.setState({\r\n            topics: [...topics],\r\n            criteria: [...criteria]\r\n        })\r\n    }\r\n    state = {}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UnifiedModal open={this.state.modalOpen} title=\"Description\">\r\n                    <DefaultTextArea inputProps={{ style: { textAlign: 'center' } }} defaultValue={this.state.modalOpen ? this.state.topics.find(topic => topic.id === this.state.commentTopicId).description : \"\"} label=\"Add description...\" maxLength={600} onChange={e => {\r\n                        let TempTopics = [...this.state.topics];\r\n                        TempTopics.find(topic => topic.id === this.state.commentTopicId).description = e.target.value;\r\n                        this.setState({\r\n                            topics: [...TempTopics]\r\n                        })\r\n                    }} />\r\n                    <ButtonBlock onSave={() => this.setState({ modalOpen: false, commentTopicId: null })} />\r\n                </UnifiedModal>\r\n                <UnifiedModal open={this.state.criteriaModalOpen} title=\"Description\">\r\n                    <DefaultTextArea defaultValue={this.state.criteriaModalOpen ? this.state.criteria.find(topic => topic.id === this.state.criteriaId).description : \"\"} label=\"Add description...\" maxLength={600} onChange={e => {\r\n                        let TempCriteria = [...this.state.criteria];\r\n                        TempCriteria.find(topic => topic.id === this.state.criteriaId).description = e.target.value;\r\n                        this.setState({\r\n                            criteria: [...TempCriteria]\r\n                        })\r\n                    }} />\r\n                    <ButtonBlock onSave={() => this.setState({ criteriaModalOpen: false, criteriaId: null })} />\r\n                </UnifiedModal>\r\n                <div style={{ marginLeft: \"15%\", marginRight: \"15%\", marginTop: 25, borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\", textAlign: \"center\" }}>\r\n                    <TextField error={this.props.template.otherTemplateName.some(temp => temp === this.state.templateName) && this.state.templateName !== this.props.template.TemplateName} value={this.state.templateName} inputProps={{ style: { textAlign: 'center' } }} focused={true} style={{ paddingBottom: 15, width: 250 }} defaultValue={this.state.templateName} label=\"Template name\" onChange={e => {\r\n                        if (!this.state.isEditable) {\r\n                            this.setState({ templateName: e.target.value })\r\n                        }\r\n                    }} />\r\n                    {this.props.template.otherTemplateName.some(temp => temp === this.state.templateName) && this.state.templateName !== this.props.template.TemplateName ? <p style={{ color: \"red\" }}>Template name already exists!</p> : null}\r\n                    <div className=\"ButtonBlock\" >\r\n                        <Button disabled={this.state.isEditable} color=\"secondary\" variant=\"contained\" onClick={() => {\r\n                            let tempTopics = [...this.state.topics]\r\n                            tempTopics.push({\r\n                                id: index,\r\n                                name: \"Enter name\",\r\n                                description: \"\",\r\n                                critical: true,\r\n                                editing: true,\r\n                            });\r\n                            index++;\r\n                            this.setState({ topics: tempTopics, editing: true })\r\n                        }}>\r\n                            Add critical\r\n                    </Button>\r\n                        <Button disabled={this.state.isEditable} color=\"primary\" variant=\"contained\" style={{ marginLeft: 5 }} onClick={() => {\r\n                            let tempTopics = [...this.state.topics]\r\n                            tempTopics.push({\r\n                                id: index,\r\n                                name: \"Enter name\",\r\n                                description: \"\",\r\n                                critical: false,\r\n                                editing: true,\r\n                                open: true,\r\n                            });\r\n                            index++;\r\n                            this.setState({ topics: tempTopics, editing: true })\r\n                        }}>\r\n                            Add topic\r\n                    </Button>\r\n                        <div style={{ marginLeft: \"15%\", marginRight: \"15%\", marginTop: 15, marginBottom: 15 }}>\r\n                            <TextField disabled={this.state.isEditable} onKeyPress={e => {\r\n                                if (e.key === \"Enter\") {\r\n                                    if (this.state.currentCategory !== \"\" && !this.state.categories.includes(this.state.currentCategory)) {\r\n                                        let tempCategories = [...this.state.categories];\r\n                                        tempCategories.push(this.state.currentCategory);\r\n                                        this.setState({\r\n                                            currentCategory: \"\",\r\n                                            categories: tempCategories\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }} value={this.state.currentCategory} label=\"Add category\" onChange={e => this.setState({ currentCategory: e.target.value })} />\r\n                            <IconButton disabled={this.state.isEditable} style={{ marginTop: 5 }} onClick={() => {\r\n                                if (this.state.currentCategory !== \"\" && !this.state.categories.includes(this.state.currentCategory)) {\r\n                                    let tempCategories = [...this.state.categories];\r\n                                    tempCategories.push(this.state.currentCategory);\r\n                                    this.setState({\r\n                                        currentCategory: \"\",\r\n                                        categories: tempCategories\r\n                                    })\r\n                                }\r\n                            }}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                            <div>\r\n                                {this.state.categories.map(category => {\r\n                                    return (\r\n                                        <Chip disabled={this.state.isEditable} style={{ backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} label={category} onDelete={() => {\r\n                                            let tempCategories = [...this.state.categories];\r\n                                            this.setState({\r\n                                                categories: tempCategories.filter(temp => temp !== category)\r\n                                            })\r\n                                        }} />\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p style={{ marginTop: 10 }}><b>Overall Points: {calculateSum(this.state.criteria)}</b></p>\r\n                    <List style={{ color: \"red\" }}>\r\n                        <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                            Criticals\r\n                    </ListSubheader>\r\n                        {this.state.topics.filter(topic => topic.critical).map(entry => {\r\n                            if (entry.editing) {\r\n                                return (\r\n                                    <div key={entry.id} onKeyPress={e => {\r\n                                        if (e.key === \"Enter\") {\r\n                                            let id = entry.id;\r\n                                            let tempTopics = [...this.state.topics];\r\n                                            tempTopics.find(critical => critical.id === id).editing = false;\r\n                                            this.setState({\r\n                                                editing: false,\r\n                                                topics: tempTopics\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                        <ListItem button key={entry.id}>\r\n                                            <TextField autoFocus focused={true} style={{ width: 500 }} defaultValue={entry.name} onChange={e => {\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.find(critical => critical.id === entry.id).name = e.target.value;\r\n                                                this.setState({ topics: tempTopics })\r\n                                            }} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"Save\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    if (this.state.topics.filter(topic => topic.name === this.state.topics.find(critical => critical.id === id).name).length === 1) {\r\n\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(critical => critical.id === id).editing = false;\r\n                                                        this.setState({\r\n                                                            editing: false,\r\n                                                            topics: tempTopics\r\n                                                        })\r\n                                                    }\r\n                                                }}>\r\n                                                    <DoneIcon />\r\n                                                </IconButton>\r\n                                                <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    let tempTopics = [...this.state.topics];\r\n                                                    tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                    tempTopics.filter(critical => critical.id === id);\r\n                                                    this.setState({\r\n                                                        topics: tempTopics,\r\n                                                        editing: false\r\n                                                    })\r\n                                                }}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n\r\n                                        </ListItem>\r\n\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <ListItem button key={entry.id}>\r\n                                        <ListItemIcon>\r\n                                            <IconButton onClick={() => this.setState({ modalOpen: true, commentTopicId: entry.id })}>\r\n                                                <DescriptionIcon style={{ color: entry.description === \"\" ? null : \"green\" }} />\r\n                                            </IconButton>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText>{entry.name}</ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton disabled={this.state.editing || this.state.isEditable} edge=\"end\" aria-label=\"Edit\" onClick={() => {\r\n                                                let id = entry.id;\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.find(critical => critical.id === id).editing = true;\r\n                                                this.setState({\r\n                                                    editing: true,\r\n                                                    topics: tempTopics\r\n                                                })\r\n                                            }}>\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                            <IconButton disabled={this.state.editing || this.state.isEditable} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                let id = entry.id;\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                tempTopics.filter(critical => critical.id === id);\r\n                                                let tempCriteria = [...this.state.criteria];\r\n                                                tempCriteria.filter(criteria => criteria.parentId !== id);\r\n                                                this.setState({\r\n                                                    topics: tempTopics,\r\n                                                    criteria: tempCriteria,\r\n                                                    editing: false\r\n                                                })\r\n                                            }}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </List>\r\n                    <hr />\r\n                    <List style={{ color: \"blue\" }}>\r\n                        <ListSubheader disableSticky component=\"div\" >\r\n                            Topics and Criterias\r\n                    </ListSubheader>\r\n                        {this.state.topics.filter(topic => !topic.critical).map(entry => {\r\n                            if (entry.editing) {\r\n                                return (\r\n                                    <div key={entry.id} onKeyPress={e => {\r\n                                        if (e.key === \"Enter\") {\r\n                                            let id = entry.id;\r\n                                            let tempTopics = [...this.state.topics];\r\n                                            tempTopics.find(critical => critical.id === id).editing = false;\r\n                                            this.setState({\r\n                                                editing: false,\r\n                                                topics: tempTopics\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                        <ListItem button >\r\n                                            <TextField disabled={this.state.isEditable} autoFocus focused={true} style={{ width: 500 }} defaultValue={entry.name} onChange={e => {\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                tempTopics.find(critical => critical.id === entry.id).name = e.target.value;\r\n                                                this.setState({ topics: tempTopics })\r\n                                            }} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"Save\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    if (this.state.topics.filter(topic => topic.name === this.state.topics.find(critical => critical.id === id).name).length === 1) {\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(critical => critical.id === id).editing = false;\r\n                                                        this.setState({\r\n                                                            editing: false,\r\n                                                            topics: tempTopics\r\n                                                        })\r\n                                                    }\r\n                                                }}>\r\n                                                    <DoneIcon />\r\n                                                </IconButton>\r\n                                                <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                    let id = entry.id;\r\n                                                    let tempTopics = [...this.state.topics];\r\n                                                    tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                    tempTopics.filter(critical => critical.id === id);\r\n                                                    let tempCriteria = [...this.state.criteria];\r\n                                                    tempCriteria = [...tempCriteria.filter(criteria => criteria.parentId !== id)];\r\n                                                    this.setState({\r\n                                                        topics: tempTopics,\r\n                                                        criteria: tempCriteria,\r\n                                                        editing: false\r\n                                                    })\r\n                                                }}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <div key={entry.id}>\r\n                                        <React.Fragment>\r\n                                            <ListItem button>\r\n                                                <ListItemIcon>\r\n                                                    <IconButton onClick={() => this.setState({ modalOpen: true, commentTopicId: entry.id })}>\r\n                                                        <DescriptionIcon style={{ color: entry.description === \"\" ? null : \"green\" }} />\r\n                                                    </IconButton>\r\n                                                </ListItemIcon>\r\n                                                <ListItemIcon>\r\n                                                    <IconButton onClick={() => {\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(temp => temp.id === entry.id).open = !entry.open;\r\n                                                        this.setState({\r\n                                                            topics: tempTopics\r\n                                                        });\r\n                                                    }}> {entry.open ? <ExpandLess /> : <ExpandMore />}</IconButton>\r\n                                                </ListItemIcon>\r\n                                                <ListItemText>{entry.name}</ListItemText>\r\n                                                <ListItemText style={{ textAlign: \"right\", marginRight: 80 }}>{<p style={{ paddingTop: 10 }}>Points: {calculateSum(this.state.criteria.filter(temp => temp.parentId === entry.id))}</p>}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton disabled={this.state.editing || this.state.isEditable} edge=\"end\" aria-label=\"Add\" onClick={() => {\r\n                                                        let newCriteria = {\r\n                                                            id: index,\r\n                                                            name: \"Enter criteria name\",\r\n                                                            points: 1,\r\n                                                            editing: true,\r\n                                                            parentId: entry.id\r\n                                                        };\r\n                                                        index++;\r\n                                                        let oldCriteria = [...this.state.criteria];\r\n                                                        oldCriteria.push(newCriteria);\r\n                                                        this.setState({\r\n                                                            criteria: oldCriteria\r\n                                                        })\r\n                                                    }}>\r\n                                                        <AddIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton disabled={this.state.editing || this.state.isEditable} edge=\"end\" aria-label=\"Edit\" onClick={() => {\r\n                                                        let id = entry.id;\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.find(critical => critical.id === id).editing = true;\r\n                                                        this.setState({\r\n                                                            editing: true,\r\n                                                            topics: tempTopics\r\n                                                        })\r\n                                                    }}>\r\n                                                        <EditIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton disabled={this.state.editing || this.state.isEditable} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                        let id = entry.id;\r\n                                                        let tempTopics = [...this.state.topics];\r\n                                                        tempTopics.splice(tempTopics.indexOf(entry), 1);\r\n                                                        tempTopics.filter(critical => critical.id === id);\r\n                                                        let tempCriteria = [...this.state.criteria];\r\n                                                        tempCriteria = [...tempCriteria.filter(criteria => criteria.parentId !== id)];\r\n                                                        this.setState({\r\n                                                            topics: tempTopics,\r\n                                                            criteria: tempCriteria,\r\n                                                            editing: false\r\n                                                        })\r\n                                                    }}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        </React.Fragment>\r\n                                        <List style={{ color: \"green\" }}>\r\n                                            {this.state.criteria.filter(criteria => criteria.parentId === entry.id).map(criteria => {\r\n                                                if (criteria.editing) {\r\n                                                    return (\r\n                                                        <ListItem button key={criteria.id}>\r\n                                                            <div style={{ paddingLeft: 80 }} >\r\n                                                                <TextField disabled={this.state.isEditable} onKeyPress={e => {\r\n                                                                    if (e.key === \"Enter\") {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(critical => critical.id === id).editing = false;\r\n                                                                        this.setState({\r\n                                                                            editing: false,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }\r\n                                                                }} focused={true} autoFocus style={{ width: \"80%\" }} defaultValue={criteria.name} onChange={e => {\r\n                                                                    let tempCriteria = [...this.state.criteria];\r\n                                                                    tempCriteria.find(critical => critical.id === criteria.id).name = e.target.value;\r\n                                                                    this.setState({ criteria: tempCriteria })\r\n                                                                }} />\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <TextField disabled={this.state.isEditable} onKeyPress={e => {\r\n                                                                    if (e.key === \"Enter\") {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(critical => critical.id === id).editing = false;\r\n                                                                        this.setState({\r\n                                                                            editing: false,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }\r\n                                                                }} style={{ width: 40, marginLeft: 60 }} type=\"number\" focused={true} defaultValue={criteria.points} onChange={(e) => {\r\n                                                                    let tempCriteria = [...this.state.criteria];\r\n                                                                    let points = e.target.value;\r\n                                                                    if (points === \"\") {\r\n                                                                        points = 0;\r\n                                                                    }\r\n                                                                    tempCriteria.find(critical => critical.id === criteria.id).points = points;\r\n                                                                    this.setState({ criteria: tempCriteria })\r\n                                                                }} />\r\n                                                            </div>\r\n                                                            <ListItemSecondaryAction>\r\n                                                                <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"Save\" onClick={() => {\r\n                                                                    let id = criteria.id;\r\n                                                                    if (this.state.criteria.filter(temp => temp.name === this.state.criteria.find(critical => critical.id === id).name).length === 1) {\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(critical => critical.id === id).editing = false;\r\n                                                                        this.setState({\r\n                                                                            editing: false,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }\r\n                                                                }}>\r\n                                                                    <DoneIcon />\r\n                                                                </IconButton>\r\n                                                                <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                                    let id = criteria.id;\r\n                                                                    let tempCriteria = [...this.state.criteria];\r\n                                                                    tempCriteria.splice(tempCriteria.indexOf(criteria), 1);\r\n                                                                    tempCriteria.filter(critical => critical.id === id);\r\n                                                                    this.setState({\r\n                                                                        criteria: tempCriteria,\r\n                                                                        editing: false\r\n                                                                    })\r\n                                                                }}>\r\n                                                                    <DeleteIcon />\r\n                                                                </IconButton>\r\n                                                            </ListItemSecondaryAction>\r\n                                                        </ListItem>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n                                                    return (\r\n\r\n                                                        <Collapse in={entry.open} key={criteria.id}>\r\n                                                            <ListItem key={criteria.id}>\r\n                                                                <ListItemIcon>\r\n                                                                    <IconButton onClick={() => this.setState({ criteriaModalOpen: true, criteriaId: criteria.id })}>\r\n                                                                        <DescriptionIcon style={{ color: criteria.description === \"\"  || criteria.description === null ? null : \"green\" }} />\r\n                                                                    </IconButton>\r\n                                                                </ListItemIcon>\r\n                                                                <ListItemText style={{ marginRight: 30 }}>{criteria.name}</ListItemText>\r\n                                                                <ListItemText style={{ textAlign: \"right\", marginRight: 80, marginLeft: 30 }}>{criteria.points}</ListItemText>\r\n                                                                <ListItemSecondaryAction>\r\n                                                                    <IconButton disabled={this.state.isEditable} edge=\"end\" aria-label=\"edit\" onClick={() => {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.find(criteria => criteria.id === id).editing = true;\r\n                                                                        this.setState({\r\n                                                                            editing: true,\r\n                                                                            criteria: tempCriteria\r\n                                                                        })\r\n                                                                    }}>\r\n                                                                        <EditIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={this.state.editing || this.state.isEditable} edge=\"end\" aria-label=\"Delete\" onClick={() => {\r\n                                                                        let id = criteria.id;\r\n                                                                        let tempCriteria = [...this.state.criteria];\r\n                                                                        tempCriteria.splice(tempCriteria.indexOf(criteria), 1);\r\n                                                                        tempCriteria.filter(critical => critical.id === id);\r\n                                                                        this.setState({\r\n                                                                            criteria: tempCriteria,\r\n                                                                            editing: false\r\n                                                                        })\r\n                                                                    }}>\r\n                                                                        <DeleteIcon />\r\n                                                                    </IconButton>\r\n                                                                </ListItemSecondaryAction>\r\n                                                            </ListItem> </Collapse>)\r\n                                                }\r\n                                            })}\r\n                                        </List>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </List>\r\n\r\n                </div>\r\n                <div style={{ textAlign: \"center\", marginTop: 20, marginBottom: 20 }}>\r\n                    <Button disabled={this.state.templateName === \"\" || this.state.editing || (this.props.template.otherTemplateName.some(temp => temp === this.state.templateName) && this.state.templateName !== this.props.template.TemplateName)} style={{ width: \"20%\", color: \"white\", backgroundColor: \"#DAA1A0\" }} onClick={() => {\r\n                        let outputData = {\r\n                            id: this.state.id,\r\n                            TemplateName: this.state.templateName,\r\n                            Topics: [],\r\n                            Criteria: [],\r\n                            Categories: this.state.categories\r\n                        };\r\n                        this.state.topics.forEach(topic => outputData.Topics.push({\r\n                            id: topic.id,\r\n                            name: topic.name,\r\n                            description: topic.description,\r\n                            critical: topic.critical\r\n                        }));\r\n                        this.state.criteria.forEach(criteria => outputData.Criteria.push({\r\n                            id: criteria.id,\r\n                            name: criteria.name,\r\n                            description: criteria.description,\r\n                            points: criteria.points,\r\n                            parentId: criteria.parentId\r\n                        }));\r\n                        this.props.editTemplate(outputData.id, outputData);\r\n                        setTimeout(() => window.location.href = \"/templates\", 3000);\r\n                    }}>Save</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemplateCreator;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TemplateEditor from '../../Components/TemplateEditor/TemplateEditor';\r\nimport { FetchTemplateToEdit, EditTemplate } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass TemplateCreatorDisplay extends Component {\r\n    state = {\r\n        template: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/edittemplate/\")[1];\r\n        FetchTemplateToEdit(id).then(response => this.setState({ template: response }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.template.length === 0 ? <LoadingScreen /> : <TemplateEditor\r\n                    template={this.state.template}\r\n                    editTemplate={editTemplate} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nconst editTemplate = async (id, data) => {\r\n    await EditTemplate(id, data);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateCreatorDisplay);","import React from 'react';\r\nimport Transfer from 'react-virtualized-transfer';\r\n\r\n\r\nexport default class ProjectDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = [];\r\n        const targetKeys = [];\r\n        this.props.users.forEach(user => {\r\n            dataSource.push({\r\n                key: user.id,\r\n                title: user.role + \": \" + user.firstname + \" \" + user.lastname,\r\n            });\r\n        });\r\n        this.props.project.Users.forEach(user => {\r\n            targetKeys.push(user.id);\r\n        });\r\n        this.state = {\r\n            dataSource: dataSource,\r\n            selectedKeys: [],\r\n            targetKeys: targetKeys\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const filterOption = (inputValue, option) => {\r\n            return option.title.split(\": \")[1].toLowerCase().startsWith(inputValue.toLowerCase())\r\n        }\r\n\r\n        const handleChange = (nextTargetKeys, _direction, _moveKeys) => {\r\n            if (_direction === \"right\") {\r\n                this.props.addProjectMembers(this.props.project.id, _moveKeys);\r\n            }\r\n            else {\r\n                this.props.removeProjectMembers(this.props.project.id, _moveKeys);\r\n            }\r\n            this.setState({ targetKeys: nextTargetKeys });\r\n        }\r\n\r\n        const handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n            this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h2 style={{ color: \"#F2F5F9\" }}>Project's name: {this.props.project.name}</h2>\r\n                </div>\r\n                <div>\r\n                    <span>Unassigned users</span> <span style={{ float: \"right\" }}>Assigned users</span>\r\n                </div>\r\n                <div>\r\n                    <Transfer\r\n                        render={item => `${item.title}`}\r\n                        dataSource={this.state.dataSource}\r\n                        targetKeys={this.state.targetKeys}\r\n                        selectedKeys={this.state.selectedKeys}\r\n                        onSelectChange={handleSelectChange}\r\n                        filterOption={filterOption}\r\n                        onChange={handleChange}\r\n                        titles={['Unassigned users', 'Assigned users']}\r\n                        className={'test'}\r\n                        rowHeight={32}\r\n                        listStyle={{\r\n                            width: '100%',\r\n                            height: 800,\r\n                        }}\r\n                        operations={['Remove from project', 'Assign/Add to project']}\r\n                        showSearch\r\n                        notFoundContent={'not found'}\r\n                        searchPlaceholder={'Search'}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ProjectDetails from '../../Components/ProjectDetails/ProjectDetails';\r\nimport { connect } from \"react-redux\";\r\nimport { AddToProjectUser, RemoveFromProjectUser, FetchProjectUsers, FetchUserListSimple } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass ProjectDetailsDisplay extends Component {\r\n    state = {\r\n        project: null,\r\n        users: null\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/projectdetails/\")[1];\r\n        FetchProjectUsers(id).then(response => this.setState({ project: response }));\r\n        FetchUserListSimple().then(response => this.setState({ users: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.project === null || this.state.users === null ? <LoadingScreen /> :\r\n                    <ProjectDetails\r\n                        project={this.state.project}\r\n                        users={this.state.users}\r\n                        addProjectMembers={addProjectMembers}\r\n                        removeProjectMembers={removeProjectMembers} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nconst addProjectMembers = async (id, data) => {\r\n    await AddToProjectUser(id, data);\r\n}\r\n\r\nconst removeProjectMembers = async (id, data) => {\r\n    await RemoveFromProjectUser(id, data);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetailsDisplay);","import React, { Component } from 'react';\r\nimport Transfer from 'react-virtualized-transfer';\r\n\r\nclass UsersProjects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedKeys: [],\r\n            targetKeys: [],\r\n            dataSource: [],\r\n        };\r\n        const dataSource = [];\r\n        const targetKeys = [];\r\n        this.props.projects.forEach(project => {\r\n            dataSource.push({\r\n                key: project.id,\r\n                title: project.name,\r\n            });\r\n        });\r\n        this.props.user.projects.forEach(project => {\r\n            targetKeys.push(project.id);\r\n        });\r\n        this.state = {\r\n            dataSource: dataSource,\r\n            selectedKeys: [],\r\n            targetKeys: targetKeys\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const filterOption = (inputValue, option) => {\r\n            return option.title.toLowerCase().startsWith(inputValue.toLowerCase())\r\n        }\r\n\r\n        const handleChange = (nextTargetKeys, _direction, _moveKeys) => {\r\n            if (_direction === \"right\") {\r\n                this.props.addProjectToUser(this.props.user.id, _moveKeys, this.props.isClient);\r\n            }\r\n            else {\r\n                this.props.removeProjectFromUser(this.props.user.id, _moveKeys, this.props.isClient);\r\n            }\r\n            this.setState({ targetKeys: nextTargetKeys });\r\n        }\r\n\r\n        const handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n            this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h2 style={{ color: \"#F2F5F9\" }}>{this.props.user.name}</h2>\r\n                </div>\r\n                <div>\r\n                    <span>Unassigned projects</span> <span style={{ float: \"right\" }}>Assigned projects</span>\r\n                </div>\r\n                <div>\r\n                    <Transfer\r\n                        dataSource={this.state.dataSource}\r\n                        targetKeys={this.state.targetKeys}\r\n                        selectedKeys={this.state.selectedKeys}\r\n                        render={item => `${item.title}`}\r\n                        onSelectChange={handleSelectChange}\r\n                        filterOption={filterOption}\r\n                        onChange={handleChange}\r\n                        titles={['Unassigned projects', 'Assigned projects']}\r\n                        className={'test'}\r\n                        rowHeight={32}\r\n                        listStyle={{\r\n                            width: '100%',\r\n                            height: 800,\r\n                        }}\r\n                        operations={['Remove project', 'Assign/Add project']}\r\n                        showSearch\r\n                        notFoundContent={'not found'}\r\n                        searchPlaceholder={'Search'}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersProjects;","import React, { Component } from 'react';\r\nimport UsersProjects from '../../Components/UsersProjects/UsersProjects';\r\nimport { FetchUserForProjects, AddProjectToUser, RemoveProjectFromUser, FetchProjectsSimple } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass UsersProjectsDisplay extends Component {\r\n    state = {\r\n        user: null,\r\n        projects: null\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/usersprojects/\")[1];\r\n        FetchProjectsSimple().then(response => this.setState({ projects: response }));\r\n        FetchUserForProjects(id).then(response => this.setState({ user: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.user === null || this.state.projects === null ? <LoadingScreen /> :\r\n                    <UsersProjects\r\n                        projects={this.state.projects}\r\n                        user={this.state.user}\r\n                        addProjectToUser={addProjectToUser}\r\n                        removeProjectFromUser={removeProjectFromUser} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst addProjectToUser = async (id, data) => {\r\n    await AddProjectToUser(id, data);\r\n}\r\n\r\nconst removeProjectFromUser = async (id, data, isClient) => {\r\n    await RemoveProjectFromUser(id, data);\r\n}\r\n\r\nexport default UsersProjectsDisplay;","import React, { Component } from 'react';\r\nimport Transfer from 'react-virtualized-transfer';\r\n\r\nclass TemplateProjects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = [];\r\n        const targetKeys = [];\r\n        this.props.projects.forEach(project => {\r\n            dataSource.push({\r\n                key: project.id,\r\n                title: project.name,\r\n            });\r\n        });\r\n        this.props.template.projects.forEach(project => {\r\n            targetKeys.push(project.id);\r\n        });\r\n        this.state = {\r\n            dataSource: dataSource,\r\n            selectedKeys: [],\r\n            targetKeys: targetKeys\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const filterOption = (inputValue, option) => {\r\n            return option.title.toLowerCase().startsWith(inputValue.toLowerCase())\r\n        }\r\n\r\n        const handleChange = (nextTargetKeys, _direction, _moveKeys) => {\r\n            if (_direction === \"right\") {\r\n                this.props.addProjectToTemplate(this.props.template.id, _moveKeys);\r\n            }\r\n            else {\r\n                this.props.removeProjectFromTemplate(this.props.template.id, _moveKeys);\r\n            }\r\n            this.setState({ targetKeys: nextTargetKeys });\r\n        }\r\n\r\n        const handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n            this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <h2 style={{ color: \"#F2F5F9\" }}>Template name: {this.props.template.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <span>Unassigned projects</span> <span style={{ float: \"right\" }}>Assigned projects</span>\r\n                    </div>\r\n                    <div>\r\n                        <Transfer\r\n                            render={item => `${item.title}`}\r\n                            dataSource={this.state.dataSource}\r\n                            targetKeys={this.state.targetKeys}\r\n                            selectedKeys={this.state.selectedKeys}\r\n                            onSelectChange={handleSelectChange}\r\n                            filterOption={filterOption}\r\n                            onChange={handleChange}\r\n                            titles={['Unassigned projects', 'Assigned projects']}\r\n                            className={'test'}\r\n                            rowHeight={32}\r\n                            listStyle={{\r\n                                width: '100%',\r\n                                height: 800,\r\n                            }}\r\n                            operations={['Remove project', 'Assign/Add project']}\r\n                            showSearch\r\n                            notFoundContent={'not found'}\r\n                            searchPlaceholder={'Search'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemplateProjects;","import React, { Component } from 'react';\r\nimport TemplateProjects from '../../Components/TemplateProjects/TemplateProjects';\r\nimport { FetchTemplateProjects, AddToTemplateProject, RemoveFromTemplateProject, FetchProjectsSimple } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass TemplateProjectsDisplay extends Component {\r\n    state = {\r\n        projects: null,\r\n        template: null\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/templateprojects/\")[1];\r\n        FetchProjectsSimple().then(response => this.setState({ projects: response }));\r\n        FetchTemplateProjects(id).then(response => this.setState({ template: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.projects === null || this.state.template === null ?\r\n                    <LoadingScreen /> :\r\n                    <TemplateProjects\r\n                        projects={this.state.projects}\r\n                        template={this.state.template}\r\n                        addProjectToTemplate={addProjectToTemplate}\r\n                        removeProjectFromTemplate={removeProjectFromTemplate} />}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst addProjectToTemplate = async (id, data) => {\r\n    await AddToTemplateProject(id, data);\r\n}\r\n\r\nconst removeProjectFromTemplate = async (id, data) => {\r\n    await RemoveFromTemplateProject(id, data);\r\n}\r\n\r\nexport default TemplateProjectsDisplay;","import React, { Component } from 'react';\r\nimport Transfer from 'react-virtualized-transfer';\r\n\r\nclass TeamMembers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedKeys: [],\r\n            targetKeys: [],\r\n            dataSource: [],\r\n        };\r\n        const dataSource = [];\r\n        const targetKeys = [];\r\n        let filteredUsers = this.props.users;\r\n        filteredUsers.forEach(user => {\r\n            dataSource.push({\r\n                key: user.id,\r\n                title: user.role + \": \" + user.firstname + \" \" + user.lastname\r\n            });\r\n        });\r\n        this.props.team.Users.forEach(user => {\r\n            targetKeys.push(user.id);\r\n        });\r\n        this.state = {\r\n            selectedKeys: [],\r\n            targetKeys: targetKeys,\r\n            dataSource: dataSource,\r\n        };\r\n    }\r\n    filterOption = (inputValue, option) => {\r\n        return option.title.split(\": \")[1].toLowerCase().startsWith(inputValue.toLowerCase())\r\n    }\r\n\r\n    handleChange = (nextTargetKeys, _direction, _moveKeys) => {\r\n        this.setState({ targetKeys: nextTargetKeys });\r\n        if (_direction === \"right\") {\r\n            this.props.addTeamMembers(this.props.team.id, _moveKeys);\r\n        }\r\n        else {\r\n            this.props.removeTeamMembers(this.props.team.id, _moveKeys);\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Transfer\r\n                    render={item => `${item.title}`}\r\n                    dataSource={this.state.dataSource}\r\n                    targetKeys={this.state.targetKeys}\r\n                    selectedKeys={this.state.selectedKeys}\r\n                    onSelectChange={this.handleSelectChange}\r\n                    filterOption={this.filterOption}\r\n                    onChange={this.handleChange}\r\n                    titles={['Unassigned users', 'Assigned users']}\r\n                    className={'test'}\r\n                    rowHeight={32}\r\n                    listStyle={{\r\n                        width: '100%',\r\n                        height: 800,\r\n                    }}\r\n                    operations={['Remove from team', 'Assign/Add to team']}\r\n                    showSearch\r\n                    notFoundContent={'not found'}\r\n                    searchPlaceholder={'Search'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamMembers;","import React, { Component } from 'react';\r\nimport TeamMembers from '../../Components/TeamMembers/TeamMembers';\r\nimport { AddToTeam, RemoveFromTeam, FetchTeamsUsers, FetchUsersForTeamSimple } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass TeamMembersDisplay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            team: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let teamId = window.location.href.toLowerCase().split(\"/teammembers/\")[1];\r\n        FetchUsersForTeamSimple(teamId).then(response => this.setState({ users: response }));\r\n        FetchTeamsUsers(teamId).then(response => this.setState({ team: response }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.users.length !== 0 && this.state.team.id !== undefined ?\r\n                    < TeamMembers\r\n                        users={this.state.users}\r\n                        team={this.state.team}\r\n                        addTeamMembers={addTeamMembers}\r\n                        removeTeamMembers={removeTeamMembers} /> : <LoadingScreen />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst addTeamMembers = async (id, data) => {\r\n    await AddToTeam(id, data);\r\n}\r\n\r\nconst removeTeamMembers = async (id, data) => {\r\n    await RemoveFromTeam(id, data);\r\n}\r\n\r\nexport default TeamMembersDisplay;","import React, { Component } from 'react';\r\nimport Transfer from 'react-virtualized-transfer';\r\n\r\n\r\nclass ProjectsTemplates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = [];\r\n        const targetKeys = [];\r\n        this.props.templates.forEach(template => {\r\n            dataSource.push({\r\n                key: template.id,\r\n                title: template.name,\r\n            });\r\n        });\r\n        this.props.project.Templates.forEach(template => {\r\n            targetKeys.push(template.id);\r\n        });\r\n        this.state = {\r\n            dataSource: dataSource,\r\n            selectedKeys: [],\r\n            targetKeys: targetKeys\r\n        }\r\n    }\r\n    render() {\r\n        const filterOption = (inputValue, option) => {\r\n            return option.title.toLowerCase().startsWith(inputValue.toLowerCase())\r\n        }\r\n\r\n        const handleChange = (nextTargetKeys, _direction, _moveKeys) => {\r\n            if (_direction === \"right\") {\r\n                this.props.addTemplate(this.props.project.id, _moveKeys);\r\n            }\r\n            else {\r\n                this.props.removeTemplate(this.props.project.id, _moveKeys);\r\n            }\r\n            this.setState({ targetKeys: nextTargetKeys });\r\n        }\r\n\r\n        const handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n            this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h2 style={{ color: \"#F2F5F9\" }}>Project's name: {this.props.project.name}</h2>\r\n                </div>\r\n                <div>\r\n                    <span>Unassigned teams</span> <span style={{ float: \"right\" }}>Assigned teams</span>\r\n                </div>\r\n                <div>\r\n                    <Transfer\r\n                        render={item => `${item.title}`}\r\n                        dataSource={this.state.dataSource}\r\n                        targetKeys={this.state.targetKeys}\r\n                        selectedKeys={this.state.selectedKeys}\r\n                        onSelectChange={handleSelectChange}\r\n                        filterOption={filterOption}\r\n                        onChange={handleChange}\r\n                        titles={['Unassigned templates', 'Assigned templates']}\r\n                        className={'test'}\r\n                        rowHeight={32}\r\n                        listStyle={{\r\n                            width: '100%',\r\n                            height: 800,\r\n                        }}\r\n                        operations={['Remove from project', 'Assign/Add to project']}\r\n                        showSearch\r\n                        notFoundContent={'not found'}\r\n                        searchPlaceholder={'Search'}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectsTemplates;","import React, { Component } from 'react';\r\nimport ProjectsTemplates from '../../Components/ProjectsTemplates/ProjectsTemplates';\r\nimport { FetchProjectTemplates, FetchTemplatesList, AddToProjectTemplate, RemoveFromProjectTemplate } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass ProjectsTemplatesDisplay extends Component {\r\n    state = {\r\n        project: null,\r\n        templates: null\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/projecttemplates/\")[1];\r\n        FetchProjectTemplates(id).then(response => this.setState({ project: response }));\r\n        FetchTemplatesList().then(response => this.setState({ templates: response }));\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {this.state.project === null || this.state.templates === null ? <LoadingScreen /> :\r\n                    <ProjectsTemplates\r\n                        project={this.state.project}\r\n                        templates={this.state.templates}\r\n                        addTemplate={addTemplate}\r\n                        removeTemplate={removeTemplate} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst addTemplate = async (id, data) => {\r\n    await AddToProjectTemplate(id, data);\r\n}\r\n\r\nconst removeTemplate = async (id, data) => {\r\n    await RemoveFromProjectTemplate(id, data);\r\n}\r\n\r\nexport default ProjectsTemplatesDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nclass UsersEvaluationsList extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\"\r\n            },\r\n            {\r\n                title: \"Date\", field: \"createdDate\", filtering: false, render: rowData => rowData.createdDate.split(\"T\")[0]\r\n            },\r\n            {\r\n                title: \"Last update\", field: \"updatedDate\", filtering: false, render: rowData => rowData.updatedDate === null ? \"\" : rowData.updatedDate.split(\"T\")[0]\r\n            },\r\n            {\r\n                title: \"Project\", field: \"project\", render: rowData => <Chip style={{ backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} label={rowData.projectName} onClick={() => window.location.href = \"/ProjectReview/\" + rowData.projectId} />,\r\n                customFilterAndSearch: (term, rowData) => rowData.projectName === undefined ? false : rowData.projectName.toLowerCase().startsWith(term.toLowerCase())\r\n            },\r\n            {\r\n                title: \"Template\", field: \"EvaluationTemplateName\"\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? parseInt(term) === 0 : Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluator\", field: \"evaluator\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    data={this.props.evaluations}\r\n                    columns={this.state.columns}\r\n                    title=\"Evaluations\"\r\n                    icons={tableIcons}\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            maxDate={this.state.maxDate}\r\n                                            value={this.props.minDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.state.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    editable={{\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    this.props.deleteEvaluation(oldData.id);\r\n                                    setTimeout(() => window.location.reload(), 1000);\r\n                                }, 600);\r\n                            })\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/editCase/\" + rowData.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UsersEvaluationsList;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsersEvaluations, deleteEvaluation } from '../../Actions/UserEvaluationListActions';\r\nimport UsersEvaluationsList from '../../Components/UsersEvaluationsList/UsersEvaluationsList';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass UserReviewDisplay extends Component {\r\n    state = {\r\n        User: [],\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/userdetails/\")[1];\r\n        this.props.fetchUsersEvaluations(id, this.state.minDate, this.state.maxDate);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id = window.location.href.toLowerCase().split(\"/userdetails/\")[1];\r\n            this.props.fetchUsersEvaluations(id, this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n\r\n    calculateOverallScore = () => {\r\n        let score = 0;\r\n        let points = 0;\r\n        this.props.evaluations.Evaluations.forEach(evaluation => {\r\n            score += evaluation.score;\r\n            points += evaluation.points;\r\n        });\r\n\r\n        let average = Math.round((score / points) * 10000) / 100;\r\n        if (isNaN(average)) {\r\n            average = 0;\r\n        }\r\n        return average;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.evaluations === null ? <LoadingScreen /> :\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>User: {this.props.evaluations.firstname + \" \" + this.props.evaluations.lastname}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Assigned projects: {this.props.evaluations.projectCount}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Overall score: {this.calculateOverallScore()}%</h3>\r\n                            {this.props.evaluations.teamName === null ? null :\r\n                                <div style={{ display: \"inline\" }}>\r\n                                    <h3 style={{ display: \"inline\", marginRight: 10, color: \"#F2F5F9\" }}>Team: {this.props.evaluations.teamName}</h3>\r\n                                    <h3 style={{ display: \"inline\", marginRight: 10, color: \"#F2F5F9\" }}>Members: {this.props.evaluations.teamUsersCount}</h3>\r\n                                    <h3 style={{ display: \"inline\", marginRight: 10, color: \"#F2F5F9\" }}>Rating: {this.props.evaluations.rating + \" / \" + this.props.evaluations.teamUsersCount}</h3>\r\n                                </div>}\r\n                        </div>\r\n                        <div style={{ marginTop: 20, marginBottom: 100 }}>\r\n                            <Button disabled={this.props.evaluations.projectCount === 0} variant=\"outlined\" href={\"/newCase/\" + window.location.href.toLowerCase().split(\"/userdetails/\")[1]} style={{ marginBottom: 10, backgroundColor: \"#DAA1A0\", color: \"#F2F5F9\" }}>Evaluate case</Button>\r\n                            <UsersEvaluationsList\r\n                                evaluations={this.props.evaluations.Evaluations}\r\n                                deleteEvaluation={this.props.deleteEvaluation}\r\n                                minDate={this.state.minDate}\r\n                                maxDate={this.state.maxDate}\r\n                                setMinDate={(date) => this.setState({ minDate: date })}\r\n                                setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    evaluations: state.Evaluations\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchUsersEvaluations: (id, start, end) => dispatch(fetchUsersEvaluations(id, start, end)),\r\n    deleteEvaluation: (id) => dispatch(deleteEvaluation(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserReviewDisplay);","import { ActionType } from \"../Constants/ActionType\";\r\nimport { MarkEvaluationDeleted, FetchUserToReview, FetchProjectUserToReview } from \"../API/API\";\r\n\r\nexport const fetchUsersEvaluations = (id, min, max) => async (dispatch) => {\r\n    let response = await FetchUserToReview(id, min, max);\r\n    dispatch({\r\n        type: ActionType.LOAD_USERS_EVALUATIONS,\r\n        payload: response\r\n    })\r\n}\r\n\r\nexport const fetchProjectUsersEvaluations = (userId, projectId, min, max) => async (dispatch) => {\r\n    let response = await FetchProjectUserToReview(userId, projectId, min, max);\r\n    dispatch({\r\n        type: ActionType.LOAD_USERS_EVALUATIONS,\r\n        payload: response\r\n    })\r\n}\r\n\r\nexport const fetchClientUsersEvaluations = (id, projectId) => async (dispatch) => {\r\n    let response = await FetchUserToReview(id);\r\n    dispatch({\r\n        type: ActionType.LOAD_USERS_EVALUATIONS,\r\n        payload: response.Evaluations.filter(temp => temp.projectId === projectId)\r\n    })\r\n}\r\n\r\nexport const deleteEvaluation = (id) => async (dispatch) => {\r\n    await MarkEvaluationDeleted(id);\r\n    dispatch({\r\n        type: ActionType.DELETE_EVALUATION,\r\n        payload: id\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { TextField, List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, Button, Tooltip, ListItemIcon, Select, MenuItem } from '@material-ui/core';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport UnifiedModal from \"../../Components/Core-Components/UnifiedModal\";\r\nimport DefaultTextArea from '../Core-Components/DefaultTextArea/DefaultTextArea';\r\nimport ButtonBlock from \"../Core-Components/UnifiedModal/ButtonBlock/ButtonBlock\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { DescriptionOutlined } from '@material-ui/icons';\r\nimport \"./CaseCreator.scss\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst CustomTooltip = withStyles({\r\n    tooltip: {\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 15\r\n    }\r\n})(Tooltip);\r\n\r\nclass CaseCreator extends Component {\r\n    state = {\r\n        caseName: \"\",\r\n        templateName: this.props.template.name,\r\n        CategoryName: \"\",\r\n        createdDate: new Date(),\r\n        overallComment: \"\",\r\n        topics: [],\r\n        breached: false,\r\n        modalOpen: false,\r\n        commentTopicId: null,\r\n        commentCriteriaId: null\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.template.id !== previousProps.template.id) {\r\n            this.MountingProps();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.MountingProps();\r\n    }\r\n\r\n    MountingProps() {\r\n        let topics = [];\r\n        this.props.template.TopicTemplates.forEach(topic => {\r\n            let tempTopic = {\r\n                id: topic.id,\r\n                name: topic.name,\r\n                isCritical: topic.isCritical,\r\n                description: topic.description,\r\n                failed: false,\r\n                criteria: []\r\n            };\r\n            let criterias = [];\r\n            topic.CriteriaTemplates.forEach(criteria => {\r\n                criterias.push({\r\n                    id: criteria.id,\r\n                    name: criteria.name,\r\n                    description: criteria.description,\r\n                    points: criteria.points,\r\n                    score: 0,\r\n                    comment: \"\"\r\n                });\r\n\r\n            });\r\n            tempTopic.criteria = criterias;\r\n            topics.push(tempTopic);\r\n        });\r\n        let categoryName = this.props.template.categories.length === 0 ? \"\" : this.props.template.categories[0];\r\n        this.setState({\r\n            topics: topics,\r\n            CategoryName: categoryName\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ marginLeft: \"15%\", marginRight: \"15%\", borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\" }}>\r\n                    <UnifiedModal open={this.state.modalOpen} title=\"Comment\">\r\n                        <DefaultTextArea defaultValue={this.state.modalOpen ? this.state.topics.find(topic => topic.id === this.state.commentTopicId)\r\n                            .criteria.find(criteria => criteria.id === this.state.commentCriteriaId).comment : \"\"} label=\"Add comment...\" maxLength={600} onChange={e => {\r\n                                let TempTopics = [...this.state.topics];\r\n                                TempTopics.find(topic => topic.id === this.state.commentTopicId)\r\n                                    .criteria.find(criteria => criteria.id === this.state.commentCriteriaId).comment = e.target.value;\r\n                                this.setState({\r\n                                    topics: [...TempTopics]\r\n                                })\r\n                            }} />\r\n                        <ButtonBlock onSave={() => this.setState({ modalOpen: false, commentCriteriaId: null, commentTopicId: null })} />\r\n                    </UnifiedModal>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <TextField inputProps={{ style: { textAlign: 'center' } }} style={{ marginLeft: 20, width: 400 }} label=\"Case name\" onChange={e => this.setState({ caseName: e.target.value })} />\r\n                        {this.props.template.categories.length === 0 ? null : <Select style={{ marginTop: 18, marginLeft: 15, width: 300 }} value={this.state.CategoryName} onChange={e => this.setState({ CategoryName: e.target.value })}>\r\n                            {this.props.template.categories.map(category => <MenuItem key={category} value={category}>{category}</MenuItem>)}\r\n                        </Select>}\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"yyyy-MM-dd\"\r\n                                margin=\"normal\"\r\n                                label=\"Evaluation date\"\r\n                                maxDate={new Date()}\r\n                                value={this.state.createdDate}\r\n                                onChange={e => this.setState({ createdDate: e.getMonth() + 1 + \"-\" + e.getDate() + \"-\" + e.getFullYear() })}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                style={{ marginLeft: 20, width: 400 }}\r\n                                inputProps={{ style: { textAlign: 'center' } }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <div>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Points: {TotalScore(this.state.topics)} / {TotalPoints(this.state.topics)}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Percent: {isNaN(Math.round(TotalScore(this.state.topics) / TotalPoints(this.state.topics) * 10000) / 100) ? 0 : Math.round(TotalScore(this.state.topics) / TotalPoints(this.state.topics) * 10000) / 100}%</h3>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <List style={{ color: \"red\" }}>\r\n                                    <div>\r\n                                        <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                                            <h3 style={{ color: \"red\" }}>Criticals</h3>\r\n                                        </ListSubheader>\r\n                                    </div>\r\n                                    {this.state.topics.filter(topic => topic.isCritical).map(topic => {\r\n                                        return (\r\n                                            <ListItem onClick={() => {\r\n                                                let id = topic.id;\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                var isChecked = tempTopics.find(critical => critical.id === id).failed;\r\n                                                tempTopics.find(critical => critical.id === id).failed = !isChecked;\r\n                                                if (isChecked) {\r\n                                                    tempTopics.forEach(tempTopic => tempTopic.criteria.forEach(tempCriteria => {\r\n                                                        tempCriteria.score = 0;\r\n                                                    }));\r\n                                                }\r\n                                                this.setState({\r\n                                                    topics: [...tempTopics],\r\n                                                    breached: !isChecked\r\n                                                })\r\n                                            }} button key={topic.id}>\r\n\r\n                                                {topic.description === \"\" || topic.description === null ? null :\r\n                                                    <ListItemIcon>\r\n                                                        <CustomTooltip arrow TransitionComponent={Fade} title={topic.description} interactive>\r\n                                                            <DescriptionOutlined />\r\n                                                        </CustomTooltip> </ListItemIcon>}\r\n\r\n                                                <ListItemText>{topic.name}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <Checkbox\r\n                                                        checked={this.state.topics.find(critical => critical.id === topic.id).failed}\r\n                                                        onChange={(e) => {\r\n                                                            let id = topic.id;\r\n                                                            let tempTopics = [...this.state.topics];\r\n                                                            tempTopics.find(critical => critical.id === id).failed = e.target.checked;\r\n                                                            if (e.target.checked) {\r\n                                                                tempTopics.forEach(tempTopic => tempTopic.criteria.forEach(tempCriteria => {\r\n                                                                    tempCriteria.score = 0;\r\n                                                                }));\r\n                                                            }\r\n                                                            this.setState({\r\n                                                                topics: [...tempTopics],\r\n                                                                breached: e.target.checked\r\n                                                            })\r\n                                                        }} />\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </div>\r\n                            <hr />\r\n                            <List style={{ color: \"blue\" }}>\r\n                                <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                                    <h3 style={{ color: \"blue\" }}>Topics and Criterias</h3>\r\n                                </ListSubheader>\r\n                                {this.state.topics.filter(topic => !topic.isCritical).map(topic => {\r\n                                    return (\r\n                                        <div key={topic.id}>\r\n                                            <ListItem button>\r\n                                                <ListItemIcon>\r\n                                                    {topic.description === \"\" || topic.description === null ? null :\r\n                                                        <CustomTooltip arrow TransitionComponent={Fade} title={topic.description} interactive>\r\n                                                            <DescriptionOutlined />\r\n                                                        </CustomTooltip>}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText>\r\n                                                    {topic.name}\r\n                                                </ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <div style={{ overflow: \"hidden\" }}>\r\n                                                        <p style={{ float: \"left\" }}>{TopicScore(topic)} / {TopicPoints(topic)}</p>\r\n                                                        <p style={{ float: \"right\", paddingLeft: 10 }}>{isNaN(Math.round(TopicScore(topic) / TopicPoints(topic) * 10000) / 100) ? 0 : Math.round(TopicScore(topic) / TopicPoints(topic) * 10000) / 100}%</p>\r\n                                                    </div>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            <hr />\r\n                                            <List style={{ color: \"green\" }}>\r\n                                                {topic.criteria.map(crit => {\r\n                                                    return (\r\n                                                        <div key={crit.id}>\r\n                                                            <ListItem button style={{ paddingLeft: 40 }} >\r\n                                                                {crit.description === \"\" || crit.description === null ? null :\r\n                                                                    <ListItemIcon>\r\n                                                                        <CustomTooltip arrow TransitionComponent={Fade} title={crit.description} interactive>\r\n                                                                            <DescriptionOutlined />\r\n                                                                        </CustomTooltip> </ListItemIcon>}\r\n                                                                <ListItemText style={{ paddingRight: 100 }} onClick={() => {\r\n                                                                    let tempTopics = [...this.state.topics];\r\n                                                                    let score = tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score;\r\n                                                                    if (score === 0) {\r\n                                                                        tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score = crit.points;\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score = 0;\r\n                                                                    }\r\n                                                                    this.setState({\r\n                                                                        topics: [...tempTopics]\r\n                                                                    })\r\n                                                                }}>{crit.name}</ListItemText>\r\n                                                                <ListItemSecondaryAction>\r\n                                                                    <IconButton disabled={this.state.breached} edge=\"end\" aria-label=\"Perfect\" style={{ backgroundColor: crit.score === crit.points ? \"rgba(0,255,0, 0.2)\" : null }}\r\n                                                                        onClick={() => {\r\n                                                                            let tempTopics = [...this.state.topics];\r\n                                                                            tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score =\r\n                                                                                tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).points;\r\n                                                                            this.setState({\r\n                                                                                topics: [...tempTopics]\r\n                                                                            })\r\n                                                                        }}>\r\n                                                                        <InsertEmoticonIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={this.state.breached} edge=\"end\" aria-label=\"Partial\" style={{ backgroundColor: crit.score === crit.points / 2 ? \"rgba(255,255,0, 0.2)\" : null }}\r\n                                                                        onClick={() => {\r\n                                                                            let tempTopics = [...this.state.topics];\r\n                                                                            tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score =\r\n                                                                                tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).points / 2;\r\n                                                                            this.setState({\r\n                                                                                topics: [...tempTopics]\r\n                                                                            })\r\n                                                                        }}>\r\n                                                                        <SentimentSatisfiedIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={this.state.breached} edge=\"end\" aria-label=\"Failed\" style={{ backgroundColor: crit.score === 0 ? \"rgba(255,0,0, 0.2)\" : null }}\r\n                                                                        onClick={() => {\r\n                                                                            let tempTopics = [...this.state.topics];\r\n                                                                            tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score = 0;\r\n                                                                            this.setState({\r\n                                                                                topics: [...tempTopics]\r\n                                                                            })\r\n                                                                        }}>\r\n                                                                        <SentimentVeryDissatisfiedIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton edge=\"end\" aria-label=\"Add comment\" onClick={() => {\r\n                                                                        this.setState({ modalOpen: true, commentCriteriaId: crit.id, commentTopicId: topic.id })\r\n                                                                    }}>\r\n                                                                        <AddCommentIcon style={{ color: crit.comment === \"\" ? null : \"green\" }} />\r\n                                                                    </IconButton>\r\n\r\n                                                                </ListItemSecondaryAction>\r\n                                                            </ListItem>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                            </List>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div >\r\n                <div style={{ textAlign: \"center\", marginTop: 10, marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n                    <TextField\r\n                        id=\"field\"\r\n                        rows={6}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        value={this.state.overallComment}\r\n                        onChange={e => this.setState({ overallComment: e.target.value })}\r\n                        label=\"Comment...\" />\r\n                </div>\r\n                <div style={{ textAlign: \"center\", marginTop: 50, marginBottom: 50 }}>\r\n                    <Button disabled={this.state.caseName.length === 0} style={{ width: \"20%\", color: \"white\", backgroundColor: \"#DAA1A0\" }}\r\n                        onClick={() => {\r\n                            let data = {\r\n                                name: this.state.caseName,\r\n                                comment: this.state.overallComment,\r\n                                CategoryName: this.state.CategoryName,\r\n                                createdDate: this.state.createdDate,\r\n                                EvaluationTemplateName: this.props.template.name,\r\n                                UserId: this.props.userId,\r\n                                ProjectId: this.props.projectId,\r\n                                EvaluatorId: window.sessionStorage.getItem(\"id\"),\r\n                                Topics: this.state.topics\r\n                            };\r\n                            this.props.createCase(data);\r\n                            setTimeout(() => window.location.href = \"/ProjectReview/\" + this.props.projectId, 3000);\r\n\r\n                        }} >Save</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TopicPoints = (topic) => {\r\n    let sum = 0;\r\n    topic.criteria.forEach(criteria => sum = sum + criteria.points);\r\n    return sum;\r\n}\r\n\r\nconst TopicScore = (topic) => {\r\n    let sum = 0;\r\n    topic.criteria.forEach(criteria => sum = sum + criteria.score);\r\n    return sum;\r\n}\r\n\r\nconst TotalPoints = (topics) => {\r\n    let sum = 0;\r\n    topics.forEach(topic => topic.criteria.forEach(criteria => sum = sum + criteria.points));\r\n    return sum;\r\n}\r\n\r\nconst TotalScore = (topics) => {\r\n    let sum = 0;\r\n    topics.forEach(topic => topic.criteria.forEach(criteria => sum = sum + criteria.score));\r\n    return sum;\r\n}\r\n\r\nexport default CaseCreator;","import React, { Component } from 'react';\r\nimport CaseCreator from '../../Components/CaseCreator/CaseCreator';\r\nimport { CreateCase, FetchUserProjectsTemplates, FetchTemplateForCase } from '../../API/API';\r\nimport { Select } from '@material-ui/core';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass CaseCreatorDisplay extends Component {\r\n    state = {\r\n        user: [],\r\n        userId: window.location.href.toLowerCase().split(\"/newcase/\")[1],\r\n        projectId: undefined,\r\n        templateId: undefined,\r\n        template: []\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/newcase/\")[1];\r\n        FetchUserProjectsTemplates(id).then(response => this.setState({ user: response })).then(() => {\r\n            this.setState({ projectId: this.state.user.Projects[0].id });\r\n            this.setState({ templateId: this.state.user.Projects[0].EvaluationTemplates[0].id });\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.templateId !== this.state.templateId || prevState.projectId !== this.state.projectId) {\r\n            if (this.state.templateId !== undefined) {\r\n                FetchTemplateForCase(this.state.templateId).then(response => this.setState({ template: response }));\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.user.length === 0 ? <LoadingScreen /> :\r\n                    <div>\r\n                        <div style={{ marginTop: 15, marginLeft: 10, textAlign: \"center\", marginBottom: 30 }}>\r\n                            <Select\r\n                                style={{ width: 300 }}\r\n                                native\r\n                                label=\"Select Project\"\r\n                                value={this.state.projectId}\r\n                                defaultValue={this.state.user.Projects[0].id}\r\n                                onChange={e => this.setState({ projectId: parseInt(e.target.value), templateId: this.state.user.Projects.find(temp => temp.id === parseInt(e.target.value)).EvaluationTemplates[0].id })}>\r\n                                {this.state.user.Projects.map(project => {\r\n                                    return <option key={project.id} value={project.id}>{project.name}</option>\r\n                                })}\r\n                            </Select>\r\n                            {this.state.projectId === null || this.state.projectId === undefined ? null :\r\n                                <Select\r\n                                    style={{ width: 300, marginLeft: 20 }}\r\n                                    native\r\n                                    label=\"Select Template\"\r\n                                    value={this.state.templateId}\r\n                                    defaultValue={this.state.user.Projects.find(temp => temp.id === this.state.projectId).id}\r\n                                    onChange={e => this.setState({ templateId: parseInt(e.target.value) })}>\r\n                                    {this.state.user.Projects.find(temp => temp.id === this.state.projectId).EvaluationTemplates.map(template => {\r\n                                        return <option key={template.id} value={template.id}>{template.name}</option>\r\n                                    })}\r\n                                </Select>}\r\n                        </div>\r\n                        {this.state.projectId === undefined || this.state.template.length === 0 ? <LoadingScreen /> :\r\n                            <CaseCreator\r\n                                projectId={this.state.projectId}\r\n                                userId={this.state.userId}\r\n                                createCase={createCase}\r\n                                template={this.state.template} />\r\n                        }\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst createCase = async (data) => {\r\n    await CreateCase(data);\r\n}\r\n\r\nexport default CaseCreatorDisplay;","import React, { Component } from 'react';\r\nimport { TextField, List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, Button, Tooltip, ListItemIcon } from '@material-ui/core';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport UnifiedModal from \"../Core-Components/UnifiedModal\";\r\nimport DefaultTextArea from '../Core-Components/DefaultTextArea/DefaultTextArea';\r\nimport ButtonBlock from \"../Core-Components/UnifiedModal/ButtonBlock/ButtonBlock\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { DescriptionOutlined } from '@material-ui/icons';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst CustomTooltip = withStyles({\r\n    tooltip: {\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 15\r\n    }\r\n})(Tooltip);\r\n\r\nclass CaseEditor extends Component {\r\n    state = {\r\n        id: null,\r\n        caseName: \"\",\r\n        topics: [],\r\n        overallComment: \"\",\r\n        CategoryName: \"\",\r\n        breached: false,\r\n        modalOpen: false,\r\n        commentTopicId: null,\r\n        commentCriteriaId: null,\r\n        createdDate: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        let topics = [];\r\n        this.props.case.Topics.forEach(topic => {\r\n            let tempTopic = {\r\n                id: topic.id,\r\n                name: topic.name,\r\n                isCritical: topic.isCritical,\r\n                description: topic.description,\r\n                failed: topic.failed,\r\n                criteria: []\r\n            };\r\n            if (topic.failed) {\r\n                this.setState({ breached: true })\r\n            }\r\n            let criterias = [];\r\n            topic.Criteria.forEach(criteria => {\r\n                criterias.push({\r\n                    id: criteria.id,\r\n                    name: criteria.name,\r\n                    description: criteria.description,\r\n                    points: criteria.points,\r\n                    score: criteria.score,\r\n                    comment: criteria.comment\r\n                });\r\n\r\n            });\r\n            tempTopic.criteria = criterias;\r\n            topics.push(tempTopic);\r\n        });\r\n        this.setState({\r\n            CategoryName: this.props.case.CategoryName,\r\n            caseName: this.props.case.name,\r\n            createdDate: this.props.case.createdDate,\r\n            overallComment: this.props.case.comment,\r\n            id: this.props.case.id,\r\n            topics: topics\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ marginLeft: \"15%\", marginRight: \"15%\", borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\" }}>\r\n                    <UnifiedModal open={this.state.modalOpen} title=\"Comment\">\r\n                        <DefaultTextArea defaultValue={this.state.modalOpen ? this.state.topics.find(topic => topic.id === this.state.commentTopicId)\r\n                            .criteria.find(criteria => criteria.id === this.state.commentCriteriaId).comment : \"\"} label=\"Add comment...\" maxLength={600} onChange={e => {\r\n                                let TempTopics = [...this.state.topics];\r\n                                TempTopics.find(topic => topic.id === this.state.commentTopicId)\r\n                                    .criteria.find(criteria => criteria.id === this.state.commentCriteriaId).comment = e.target.value;\r\n                                this.setState({\r\n                                    topics: [...TempTopics]\r\n                                })\r\n                            }} />\r\n                        <ButtonBlock onSave={() => this.setState({ modalOpen: false, commentCriteriaId: null, commentTopicId: null })} />\r\n                    </UnifiedModal>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <TextField inputProps={{ style: { textAlign: 'center' } }} style={{ marginLeft: 20, width: 400 }} value={this.state.caseName} label=\"Case name\" onChange={e => this.setState({ caseName: e.target.value })} />\r\n                        <br/>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"yyyy-MM-dd\"\r\n                                margin=\"normal\"\r\n                                label=\"Evaluation date\"\r\n                                maxDate={new Date()}\r\n                                value={this.state.createdDate}\r\n                                onChange={e => this.setState({ createdDate: e.getMonth() + 1 + \"-\" + e.getDate() + \"-\" + e.getFullYear() })}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                style={{ marginLeft: 20, width: 400 }}\r\n                                inputProps={{ style: { textAlign: 'center' } }}\r\n                            />\r\n                            </MuiPickersUtilsProvider>\r\n                        {this.state.CategoryName === \"\" ? null : <h3>Category: {this.state.CategoryName}</h3>}\r\n                        <div>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Points: {TotalScore(this.state.topics)} / {TotalPoints(this.state.topics)}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Percent: {isNaN(Math.round(TotalScore(this.state.topics) / TotalPoints(this.state.topics) * 10000) / 100) ? 0 : Math.round(TotalScore(this.state.topics) / TotalPoints(this.state.topics) * 10000) / 100}%</h3>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <List style={{ color: \"red\" }}>\r\n                                    <div>\r\n                                        <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                                            <h3 style={{ color: \"red\" }}>Criticals</h3>\r\n                                        </ListSubheader>\r\n                                    </div>\r\n                                    {this.state.topics.filter(topic => topic.isCritical).map(topic => {\r\n                                        return (\r\n                                            <ListItem onClick={() => {\r\n                                                let id = topic.id;\r\n                                                let tempTopics = [...this.state.topics];\r\n                                                var isChecked = tempTopics.find(critical => critical.id === id).failed;\r\n                                                tempTopics.find(critical => critical.id === id).failed = !isChecked;\r\n                                                if (isChecked) {\r\n                                                    tempTopics.forEach(tempTopic => tempTopic.criteria.forEach(tempCriteria => {\r\n                                                        tempCriteria.score = 0;\r\n                                                    }));\r\n                                                }\r\n                                                this.setState({\r\n                                                    topics: [...tempTopics],\r\n                                                    breached: !isChecked\r\n                                                })\r\n                                            }} button key={topic.id}>\r\n\r\n                                                {topic.description === \"\" || topic.description === null ? null :\r\n                                                    <ListItemIcon>\r\n                                                        <CustomTooltip arrow TransitionComponent={Fade} title={topic.description} interactive>\r\n                                                            <DescriptionOutlined />\r\n                                                        </CustomTooltip> </ListItemIcon>}\r\n                                                <ListItemText>{topic.name}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <Checkbox\r\n                                                        checked={this.state.topics.find(critical => critical.id === topic.id).failed}\r\n                                                        onChange={(e) => {\r\n                                                            let id = topic.id;\r\n                                                            let tempTopics = [...this.state.topics];\r\n                                                            tempTopics.find(critical => critical.id === id).failed = e.target.checked;\r\n                                                            if (e.target.checked) {\r\n                                                                tempTopics.forEach(tempTopic => tempTopic.criteria.forEach(tempCriteria => {\r\n                                                                    tempCriteria.score = 0;\r\n                                                                }));\r\n                                                            }\r\n                                                            this.setState({\r\n                                                                topics: [...tempTopics],\r\n                                                                breached: e.target.checked\r\n                                                            })\r\n                                                        }} />\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </div>\r\n                            <hr />\r\n                            <List style={{ color: \"blue\" }}>\r\n                                <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                                    <h3 style={{ color: \"blue\" }}>Topics and Criterias</h3>\r\n                                </ListSubheader>\r\n                                {this.state.topics.filter(topic => !topic.isCritical).map(topic => {\r\n                                    return (\r\n                                        <div key={topic.id}>\r\n                                            <ListItem button>\r\n                                                <ListItemIcon>\r\n                                                    {topic.description === \"\" || topic.description === null ? null :\r\n                                                        <CustomTooltip arrow TransitionComponent={Fade} title={topic.description} interactive>\r\n                                                            <DescriptionOutlined />\r\n                                                        </CustomTooltip>}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText>{topic.name}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <div style={{ overflow: \"hidden\" }}>\r\n                                                        <p style={{ float: \"left\" }}>{TopicScore(topic)} / {TopicPoints(topic)}</p>\r\n                                                        <p style={{ float: \"right\", paddingLeft: 10 }}>{isNaN(Math.round(TopicScore(topic) / TopicPoints(topic) * 10000) / 100) ? 0 : Math.round(TopicScore(topic) / TopicPoints(topic) * 10000) / 100}%</p>\r\n                                                    </div>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            <hr />\r\n                                            <List style={{ color: \"green\" }}>\r\n                                                {topic.criteria.map(crit => {\r\n                                                    return (\r\n                                                        <div key={crit.id}>\r\n                                                            <ListItem button key={crit.id} style={{ paddingLeft: 40 }} >\r\n                                                                {crit.description === \"\" || crit.description === null ? null :\r\n                                                                    <ListItemIcon>\r\n                                                                        <CustomTooltip arrow TransitionComponent={Fade} title={crit.description} interactive>\r\n                                                                            <DescriptionOutlined />\r\n                                                                        </CustomTooltip> </ListItemIcon>}\r\n                                                                <ListItemText style={{ paddingRight: 100 }} onClick={() => {\r\n                                                                    let tempTopics = [...this.state.topics];\r\n                                                                    let score = tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score;\r\n                                                                    if (score === 0) {\r\n                                                                        tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score = crit.points;\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score = 0;\r\n                                                                    }\r\n                                                                    this.setState({\r\n                                                                        topics: [...tempTopics]\r\n                                                                    })\r\n                                                                }}>{crit.name}</ListItemText>\r\n                                                                <ListItemSecondaryAction>\r\n                                                                    <IconButton disabled={this.state.breached} edge=\"end\" aria-label=\"Perfect\" style={{ backgroundColor: crit.score === crit.points ? \"rgba(0,255,0, 0.2)\" : null }}\r\n                                                                        onClick={() => {\r\n                                                                            let tempTopics = [...this.state.topics];\r\n                                                                            tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score =\r\n                                                                                tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).points;\r\n                                                                            this.setState({\r\n                                                                                topics: [...tempTopics]\r\n                                                                            })\r\n                                                                        }}>\r\n                                                                        <InsertEmoticonIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={this.state.breached} edge=\"end\" aria-label=\"Partial\" style={{ backgroundColor: crit.score === crit.points / 2 ? \"rgba(255,255,0, 0.2)\" : null }}\r\n                                                                        onClick={() => {\r\n                                                                            let tempTopics = [...this.state.topics];\r\n                                                                            tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score =\r\n                                                                                tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).points / 2;\r\n                                                                            this.setState({\r\n                                                                                topics: [...tempTopics]\r\n                                                                            })\r\n                                                                        }}>\r\n                                                                        <SentimentSatisfiedIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={this.state.breached} edge=\"end\" aria-label=\"Failed\" style={{ backgroundColor: crit.score === 0 ? \"rgba(255,0,0, 0.2)\" : null }}\r\n                                                                        onClick={() => {\r\n                                                                            let tempTopics = [...this.state.topics];\r\n                                                                            tempTopics.find(tempTopic => tempTopic.id === topic.id).criteria.find(tempCriteria => tempCriteria.id === crit.id).score = 0;\r\n                                                                            this.setState({\r\n                                                                                topics: [...tempTopics]\r\n                                                                            })\r\n                                                                        }}>\r\n                                                                        <SentimentVeryDissatisfiedIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton edge=\"end\" aria-label=\"Add comment\" onClick={() => {\r\n                                                                        this.setState({ modalOpen: true, commentCriteriaId: crit.id, commentTopicId: topic.id })\r\n                                                                    }}>\r\n                                                                        <AddCommentIcon style={{ color: crit.comment === \"\" ? null : \"green\" }} />\r\n                                                                    </IconButton>\r\n\r\n                                                                </ListItemSecondaryAction>\r\n                                                            </ListItem>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                            </List>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div >\r\n                <div style={{ textAlign: \"center\", marginTop: 10, marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n                    <TextField\r\n                        id=\"field\"\r\n                        rows={6}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        value={this.state.overallComment}\r\n                        onChange={e => this.setState({ overallComment: e.target.value })}\r\n                        label=\"Comment...\" />\r\n                </div>\r\n                <div style={{ textAlign: \"center\", marginTop: 50, marginBottom: 50 }}>\r\n                    <Button disabled={this.state.caseName.length === 0} style={{ width: \"20%\", color: \"white\", backgroundColor: \"#DAA1A0\" }}\r\n                        onClick={() => {\r\n                            let data = {\r\n                                id: this.state.id,\r\n                                name: this.state.caseName,\r\n                                createdDate: this.state.createdDate,\r\n                                comment: this.state.overallComment,\r\n                                UserId: this.props.case.userId,\r\n                                ProjectId: this.props.case.projectId,\r\n                                EvaluatorId: window.sessionStorage.getItem(\"id\"),\r\n                                Topics: this.state.topics\r\n                            };\r\n                            this.props.updateCase(this.state.id, data);\r\n                            setTimeout(() => window.location.href = \"/ProjectReview/\" + this.props.case.projectId, 3000);\r\n\r\n                        }} >Save</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TopicPoints = (topic) => {\r\n    let sum = 0;\r\n    topic.criteria.forEach(criteria => sum = sum + criteria.points);\r\n    return sum;\r\n}\r\n\r\nconst TopicScore = (topic) => {\r\n    let sum = 0;\r\n    topic.criteria.forEach(criteria => sum = sum + criteria.score);\r\n    return sum;\r\n}\r\n\r\nconst TotalPoints = (topics) => {\r\n    let sum = 0;\r\n    topics.forEach(topic => topic.criteria.forEach(criteria => sum = sum + criteria.points));\r\n    return sum;\r\n}\r\n\r\nconst TotalScore = (topics) => {\r\n    let sum = 0;\r\n    topics.forEach(topic => topic.criteria.forEach(criteria => sum = sum + criteria.score));\r\n    return sum;\r\n}\r\n\r\nexport default CaseEditor;","import React, { Component } from 'react';\r\nimport { FetchCaseToEdit, UpdateCase } from '../../API/API';\r\nimport CaseEditor from '../../Components/CaseEditor/CaseEditor';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass CaseEditorDisplay extends Component {\r\n    state = {\r\n        Case: []\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/editcase/\")[1];\r\n        FetchCaseToEdit(id).then(response => this.setState({ Case: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Case.length === 0 ? <LoadingScreen /> :\r\n                    <CaseEditor\r\n                        case={this.state.Case}\r\n                        updateCase={updateCase} />}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst updateCase = async (id, data) => {\r\n    await UpdateCase(id, data);\r\n}\r\n\r\nexport default CaseEditorDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Chip } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass TeamReviewList extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\", render: rowData => rowData.firstname + \" \" + rowData.lastname,\r\n                customFilterAndSearch: (term, rowData) => rowData.firstname.toLowerCase().startsWith(term.toLowerCase()) || rowData.lastname.toLowerCase().startsWith(term.toLowerCase())\r\n            },\r\n            {\r\n                title: \"Projects\", field: \"projects\", editable: \"never\",\r\n                render: rowData => <div>{rowData.Projects.map(project => <Chip style={{ marginRight: 2, marginTop: 2, backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} key={project.id}\r\n                    label={project.name}\r\n                    onClick={() => window.location.href = \"/projectReview/\" + project.id} />)}</div>,\r\n                customFilterAndSearch: (term, rowData) => rowData.Projects.some(project => project.name.toLowerCase().startsWith(term.toLowerCase()))\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"evaluationsCount\",\r\n                customFilterAndSearch: (term, rowData) => parseInt(term) === rowData.evaluationsCount\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    title=\"Team users\"\r\n                    columns={this.state.columns}\r\n                    icons={tableIcons}\r\n                    data={this.props.users}\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/userDetails/\" + rowData.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamReviewList;","import React, { Component } from 'react';\r\nimport TeamReviewList from '../../Components/TeamReviewList/TeamReviewList';\r\nimport { FetchTeamToReview } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass TeamReviewDisplay extends Component {\r\n    state = {\r\n        Team: null,\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/teamdetails/\")[1];\r\n        FetchTeamToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Team: response }));\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id = window.location.href.toLowerCase().split(\"/teamdetails/\")[1];\r\n            FetchTeamToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Team: response }));\r\n        }\r\n    }\r\n\r\n    calculateOverallScore = () => {\r\n        let score = 0;\r\n        let points = 0;\r\n        this.state.Team.Users.forEach(evaluation => {\r\n            score += evaluation.score;\r\n            points += evaluation.points;\r\n        });\r\n\r\n        let average = Math.round((score / points) * 10000) / 100;\r\n        if (isNaN(average)) {\r\n            average = 0;\r\n        }\r\n        return average;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Team === null ? <LoadingScreen /> :\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <h2 style={{ color: \"#F2F5F9\" }}>Team: {this.state.Team.name}</h2>\r\n                            <h2 style={{ color: \"#F2F5F9\" }}>Users: {this.state.Team.Users.length}</h2>\r\n                            <h2 style={{ color: \"#F2F5F9\" }}>Overall score: {this.calculateOverallScore()}%</h2>\r\n                        </div>\r\n                        <div>\r\n                            <TeamReviewList\r\n                                users={this.state.Team.Users}\r\n                                minDate={this.state.minDate}\r\n                                maxDate={this.state.maxDate}\r\n                                setMinDate={(date) => this.setState({ minDate: date })}\r\n                                setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamReviewDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass ProjectsReview extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\", render: rowData => rowData.firstname + \" \" + rowData.lastname,\r\n                customFilterAndSearch: (term, rowData) => rowData.firstname.toLowerCase().startsWith(term.toLowerCase()) ||\r\n                    rowData.lastname.toLowerCase().startsWith(term.toLowerCase())\r\n            },\r\n            {\r\n                title: \"Team\", field: \"team\", render: rowData => rowData.teamId === null ? \"\" : <a href={\"/teamDetails/\" + rowData.teamId}>{rowData.teamName}</a>,\r\n                customFilterAndSearch: (term, rowData) => rowData.teamName === null ? false : rowData.teamName.toLowerCase().startsWith(term.toLowerCase())\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"caseCount\", customFilterAndSearch: (term, rowData) => rowData.caseCount === parseInt(term)\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <MaterialTable\r\n                        title=\"Project's users\"\r\n                        columns={this.state.columns}\r\n                        icons={tableIcons}\r\n                        data={this.props.users}\r\n                        options={{\r\n                            filtering: true,\r\n                            actionsColumnIndex: -1,\r\n                            pageSize: 10\r\n                        }}\r\n                        components={{\r\n                            Toolbar: props => (\r\n                                <div>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <MTableToolbar {...props} />\r\n                                        <div style={{ marginLeft: 10 }}>\r\n                                            <KeyboardDatePicker\r\n                                                disableToolbar\r\n                                                variant=\"inline\"\r\n                                                format=\"yyyy-MM-dd\"\r\n                                                margin=\"normal\"\r\n                                                label=\"Start date\"\r\n                                                value={this.props.minDate}\r\n                                                maxDate={this.state.maxDate}\r\n                                                onChange={e => this.props.setMinDate(e)}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change date',\r\n                                                }}\r\n                                            />\r\n                                            <KeyboardDatePicker\r\n                                                style={{ marginLeft: 10 }}\r\n                                                disableToolbar\r\n                                                variant=\"inline\"\r\n                                                format=\"yyyy-MM-dd\"\r\n                                                margin=\"normal\"\r\n                                                label=\"End date\"\r\n                                                value={this.props.maxDate}\r\n                                                minDate={this.props.minDate}\r\n                                                maxDate={new Date()}\r\n                                                onChange={e => this.props.setMaxDate(e)}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change date',\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </MuiPickersUtilsProvider>\r\n                                </div>\r\n\r\n                            ),\r\n                        }}\r\n                        onRowClick={(event, rowData, togglePanel) => window.location.href = \"/userDetails/\" + rowData.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectsReview;","import React, { Component } from 'react';\r\nimport ProjectsReview from '../../Components/ProjectsReview/ProjectsReview';\r\nimport { FetchProjectToReview } from '../../API/API';\r\nimport LoadingScreen from '../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass ProjectsReviewDisplay extends Component {\r\n    state = {\r\n        Project: null,\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/projectreview/\")[1];\r\n        FetchProjectToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Project: response }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id = window.location.href.toLowerCase().split(\"/projectreview/\")[1];\r\n            FetchProjectToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Project: response }))\r\n        }\r\n    }\r\n\r\n    calculateOverallScore = () => {\r\n        let score = 0;\r\n        let points = 0;\r\n        this.state.Project.Users.forEach(evaluation => {\r\n            score += evaluation.score;\r\n            points += evaluation.points;\r\n        });\r\n\r\n        let average = Math.round((score / points) * 10000) / 100;\r\n        if (isNaN(average)) {\r\n            average = 0;\r\n        }\r\n        return average;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Project === null ? <LoadingScreen /> : <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <h2 style={{ color: \"#F2F5F9\" }}>Project's name: {this.state.Project.name}</h2>\r\n                        <h2 style={{ color: \"#F2F5F9\" }}>Overall score: {this.calculateOverallScore()}%</h2>\r\n                    </div>\r\n                    <div>\r\n                        <ProjectsReview\r\n                            users={this.state.Project.Users}\r\n                            minDate={this.state.minDate}\r\n                            maxDate={this.state.maxDate}\r\n                            setMinDate={(date) => this.setState({ minDate: date })}\r\n                            setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectsReviewDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nclass UserEvaluationsList extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\"\r\n            },\r\n            {\r\n                title: \"Date\", field: \"createdDate\", filtering: false, render: rowData => rowData.createdDate.split(\"T\")[0]\r\n            },\r\n            {\r\n                title: \"Project\", field: \"project\", render: rowData => <Chip style={{ backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} label={rowData.projectName} />,\r\n                customFilterAndSearch: (term, rowData) => rowData.projectName.toLowerCase().startsWith(term.toLowerCase())\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluator\", field: \"evaluator\"\r\n            }\r\n        ]\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    data={this.props.evaluations}\r\n                    columns={this.state.columns}\r\n                    title=\"Evaluations\"\r\n                    icons={tableIcons}\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            maxDate={this.props.maxDate}\r\n                                            value={this.props.minDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.state.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/viewCase/\" + rowData.id}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserEvaluationsList;","import React, { Component } from 'react';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\nimport UserEvaluationsList from '../../../Components/User/UserEvaluationsList/UserEvaluationsList';\r\nimport { FetchUserToReview } from '../../../API/API';\r\n\r\nlet date = new Date();\r\nclass EvaluationsDisplay extends Component {\r\n    state = {\r\n        User: null,\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        let id;\r\n        if (this.props.match !== undefined) {\r\n            id = this.props.match.params.id;\r\n        }\r\n        else {\r\n            id = window.sessionStorage.getItem(\"id\");\r\n        }\r\n        FetchUserToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ User: response }));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id;\r\n            if (this.props.match !== undefined) {\r\n                id = this.props.match.params.id;\r\n            }\r\n            else {\r\n                id = window.sessionStorage.getItem(\"id\");\r\n            }\r\n            FetchUserToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ User: response }));\r\n        }\r\n    }\r\n\r\n    calculateOverallScore = () => {\r\n        let score = 0;\r\n        let points = 0;\r\n        this.state.User.Evaluations.forEach(evaluation => {\r\n            score += evaluation.score;\r\n            points += evaluation.points;\r\n        });\r\n\r\n        let average = Math.round((score / points) * 10000) / 100;\r\n        if (isNaN(average)) {\r\n            average = 0;\r\n        }\r\n        return average;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.User === null ? <LoadingScreen /> :\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>User: {this.state.User.firstname + \" \" + this.state.User.lastname}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Assigned projects: {this.state.User.projectCount}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Overall score: {this.calculateOverallScore()}%</h3>\r\n                            {this.state.User.teamName === null ? null :\r\n                                <div style={{ display: \"inline\" }}>\r\n                                    <h3 style={{ display: \"inline\", marginRight: 10, color: \"#F2F5F9\" }}>Team: {this.state.User.teamName}</h3>\r\n                                    <h3 style={{ display: \"inline\", marginRight: 10, color: \"#F2F5F9\" }}>Members: {this.state.User.teamUsersCount}</h3>\r\n                                    <h3 style={{ display: \"inline\", marginRight: 10, color: \"#F2F5F9\" }}>Rating: {this.state.User.rating + \" / \" + this.state.User.teamUsersCount}</h3>\r\n                                </div>}\r\n                        </div>\r\n                        <div>\r\n                            <UserEvaluationsList\r\n                                evaluations={this.state.User.Evaluations}\r\n                                minDate={this.state.minDate}\r\n                                maxDate={this.state.maxDate}\r\n                                setMinDate={(date) => this.setState({ minDate: date })}\r\n                                setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                        </div>\r\n                    </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EvaluationsDisplay;","import React from \"react\";\r\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\r\nimport { PeopleRounded, DashboardRounded, AssignmentTurnedInOutlined, WorkRounded, GroupWorkOutlined, RestoreOutlined } from \"@material-ui/icons\";\r\nimport QLogo from \"../../Images/QLogo.png\";\r\n\r\nconst NavigationBreadcrumbsAdmin = () => {\r\n    const currentPage = window.location.pathname;\r\n    return (\r\n        <div className=\"Navigation-Breadcrumbs-Wrapper\">\r\n            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5 }}>\r\n                <img style={{ width: 50, height: 50 }} src={QLogo} alt=\"QLoto\" />\r\n            </div>\r\n            <Breadcrumbs separator={<div className={\"Separator\"}>||</div>} className=\"Breadcrumbs\">\r\n                <Link\r\n                    href=\"/projects\"\r\n                    className={currentPage === \"/projects\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <WorkRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Projects\r\n                </Link>\r\n                <Link\r\n                    href=\"/teams\"\r\n                    className={currentPage === \"/teams\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <GroupWorkOutlined className=\"Icon\" fontSize=\"small\" />\r\n                    Teams\r\n                </Link>\r\n                <Link\r\n                    href=\"/templates\"\r\n                    className={currentPage === \"/templates\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <DashboardRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Templates\r\n                </Link>\r\n                <Link\r\n                    href=\"/reports\"\r\n                    className={currentPage === \"/reports\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <AssignmentTurnedInOutlined className=\"Icon\" fontSize=\"small\" />\r\n                    Reports\r\n                </Link>\r\n                <Link\r\n                    href=\"/users\"\r\n                    className={currentPage === \"/users\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <PeopleRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Users\r\n                </Link>\r\n                <Link\r\n                    href=\"/archives\"\r\n                    className={currentPage === \"/archives\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <RestoreOutlined className=\"Icon\" fontSize=\"small\" />\r\n                    Archives\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ marginTop: 5, marginRight: 5 }}>\r\n                {window.sessionStorage.getItem(\"name\")}\r\n                <br />\r\n                <a style={{ color: \"#DAA1A0\" }} onClick={() => window.sessionStorage.clear()} href=\"/\">Log Out</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavigationBreadcrumbsAdmin;\r\n","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Credentials(props) {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState(props.user.username);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [errorIsShowing, setErrorIsShowing] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <h2 style={{ color: \"#F2F5F9\" }}>Credentials:</h2>\r\n                <h3 style={{ color: \"#F2F5F9\" }}>Role: {window.sessionStorage.getItem(\"role\")}</h3>\r\n                <h3 style={{ color: \"#F2F5F9\" }}>Name: {window.sessionStorage.getItem(\"name\")}</h3>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} autoHideDuration={4000} open={errorIsShowing} onClose={() => setErrorIsShowing(false)}>\r\n                        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">Failed to sign in</MuiAlert>\r\n                    </Snackbar>\r\n                </div>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                            </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"field\"\r\n                                label=\"Username\"\r\n                                autoComplete=\"username\"\r\n                                autoFocus\r\n                                value={username}\r\n                                onChange={e => setUsername(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"field\"\r\n                                autoComplete=\"current-password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                            />\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#DAA1A0\", color: \"#F2F5F9\" }}\r\n                                disabled={username.length < 4 || password.length < 4}\r\n                                className={classes.submit}\r\n                                onClick={() => {\r\n                                    let data = {\r\n                                        username: username,\r\n                                        password: password\r\n                                    };\r\n                                    props.updateCredentials(data);\r\n                                    setTimeout(() => {\r\n                                        window.sessionStorage.clear();\r\n                                        window.location.href = \"/\";\r\n                                    }, 1500)\r\n                                }}\r\n                            >\r\n                                Save\r\n                                </Button>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Credentials from \"../../../Components/User/Credentials/Credentials\";\r\nimport { FetchUserCredentials, UpdateUserCredentials } from \"../../../API/API\";\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass CredentialsDisplay extends Component {\r\n    state = {\r\n        User: null\r\n    }\r\n    componentDidMount() {\r\n        let id = window.sessionStorage.getItem(\"id\");\r\n        FetchUserCredentials(id).then(response => this.setState({ User: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.User === null ? <LoadingScreen /> :\r\n                    <Credentials\r\n                        user={this.state.User}\r\n                        updateCredentials={updateUserCredentials} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst updateUserCredentials = async (data) => {\r\n    let id = window.sessionStorage.getItem(\"id\");\r\n    await UpdateUserCredentials(id, data);\r\n}\r\n\r\nexport default CredentialsDisplay;","import React from \"react\";\r\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\r\nimport { FilterFramesRounded, ContactsRounded, WorkRounded, AssignmentTurnedInOutlined } from \"@material-ui/icons\";\r\nimport QLogo from \"../../../Images/QLogo.png\";\r\nimport \"./NavigationBreadcrumbs.scss\";\r\n\r\nconst NavigationBreadcrumbsUser = () => {\r\n    const currentPage = window.location.pathname;\r\n    return (\r\n        <div className=\"Navigation-Breadcrumbs-Wrapper\">\r\n            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5 }}>\r\n                <img style={{ width: 50, height: 50 }} src={QLogo} alt=\"QLoto\" />\r\n            </div>\r\n            <Breadcrumbs separator={<div className={\"Separator\"}>||</div>} className=\"Breadcrumbs\">\r\n                <Link\r\n                    href=\"/evaluations\"\r\n                    className={currentPage === \"/evaluations\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <FilterFramesRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Evaluations\r\n                </Link>\r\n\r\n                <Link\r\n                    href=\"/projects\"\r\n                    className={currentPage === \"/projects\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <WorkRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Projects\r\n                </Link>\r\n\r\n                <Link\r\n                    href=\"/reports\"\r\n                    className={currentPage === \"/reports\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <AssignmentTurnedInOutlined className=\"Icon\" fontSize=\"small\" />\r\n                    Reports\r\n                </Link>\r\n\r\n                <Link\r\n                    href=\"/credentials\"\r\n                    className={currentPage === \"/credentials\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <ContactsRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Credentials\r\n                </Link>\r\n\r\n            </Breadcrumbs>\r\n            <div style={{ marginTop: 5, marginRight: 5 }}>\r\n                {window.sessionStorage.getItem(\"name\")}\r\n                <br />\r\n                <a style={{ color: \"#DAA1A0\" }} onClick={() => window.sessionStorage.clear()} href=\"/\">Log Out</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavigationBreadcrumbsUser;\r\n","import React, { Component } from 'react';\r\nimport { List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, IconButton, Tooltip, TextField, ListItemIcon } from '@material-ui/core';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport UnifiedModal from \"../../Core-Components/UnifiedModal\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { DescriptionOutlined } from '@material-ui/icons';\r\n\r\nconst CustomTooltip = withStyles({\r\n    tooltip: {\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 15\r\n    }\r\n})(Tooltip);\r\n\r\nclass CaseView extends Component {\r\n    state = {\r\n        id: null,\r\n        caseName: \"\",\r\n        CategoryName: \"\",\r\n        topics: [],\r\n        overallComment: \"\",\r\n        breached: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let topics = [];\r\n        this.props.case.Topics.forEach(topic => {\r\n            let tempTopic = {\r\n                id: topic.id,\r\n                name: topic.name,\r\n                description: topic.description,\r\n                isCritical: topic.isCritical,\r\n                failed: topic.failed,\r\n                criteria: []\r\n            };\r\n            if (topic.failed) {\r\n                this.setState({ breached: true })\r\n            }\r\n            let criterias = [];\r\n            topic.Criteria.forEach(criteria => {\r\n                criterias.push({\r\n                    id: criteria.id,\r\n                    name: criteria.name,\r\n                    description: criteria.description,\r\n                    points: criteria.points,\r\n                    score: criteria.score,\r\n                    comment: criteria.comment\r\n                });\r\n\r\n            });\r\n            tempTopic.criteria = criterias;\r\n            topics.push(tempTopic);\r\n        });\r\n        this.setState({\r\n            CategoryName: this.props.case.CategoryName,\r\n            caseName: this.props.case.name,\r\n            id: this.props.case.id,\r\n            overallComment: this.props.case.comment,\r\n            topics: topics\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ marginLeft: \"15%\", marginRight: \"15%\", borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\" }}>\r\n                    <UnifiedModal open={this.state.modalOpen} title=\"Comment\">\r\n                        <p>{this.state.modalOpen ? this.state.topics.find(topic => topic.id === this.state.commentTopicId)\r\n                            .criteria.find(criteria => criteria.id === this.state.commentCriteriaId).comment : \"\"}</p>\r\n                    </UnifiedModal>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <h2 style={{ color: \"#F2F5F9\" }}>Case name: {this.state.caseName}</h2>\r\n                        {this.state.CategoryName === \"\" ? null : <h2 style={{ color: \"#F2F5F9\" }}>Category: {this.state.CategoryName}</h2>}\r\n                        <div>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Points: {TotalScore(this.state.topics)} / {TotalPoints(this.state.topics)}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Percent: {isNaN(Math.round(TotalScore(this.state.topics) / TotalPoints(this.state.topics) * 10000) / 100) ? \"0\" : Math.round(TotalScore(this.state.topics) / TotalPoints(this.state.topics) * 10000) / 100}%</h3>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <List style={{ color: \"red\" }}>\r\n                                    <div>\r\n                                        <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                                            <h3 style={{ color: \"red\" }}>Criticals</h3>\r\n                                        </ListSubheader>\r\n                                    </div>\r\n                                    {this.state.topics.filter(topic => topic.isCritical).map(topic => {\r\n                                        return (\r\n                                            <ListItem key={topic.id}>\r\n                                                {topic.description === \"\" || topic.description === null ? null :\r\n                                                    <ListItemIcon>\r\n                                                        <CustomTooltip arrow TransitionComponent={Fade} title={topic.description} interactive>\r\n                                                            <DescriptionOutlined />\r\n                                                        </CustomTooltip> </ListItemIcon>}\r\n                                                <ListItemText>{topic.name}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <Checkbox\r\n                                                        checked={this.state.topics.find(critical => critical.id === topic.id).failed}\r\n                                                        disabled={true} />\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </div>\r\n                            <hr />\r\n                            <List style={{ color: \"blue\" }}>\r\n                                <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                                    <h3 style={{ color: \"blue\" }}>Topics and Criterias</h3>\r\n                                </ListSubheader>\r\n                                {this.state.topics.filter(topic => !topic.isCritical).map(topic => {\r\n                                    return (\r\n                                        <div key={topic.id}>\r\n                                            <ListItem >\r\n                                                {topic.description === \"\" || topic.description === null ? null :\r\n                                                    <ListItemIcon>\r\n                                                        <CustomTooltip arrow TransitionComponent={Fade} title={topic.description} interactive>\r\n                                                            <DescriptionOutlined />\r\n                                                        </CustomTooltip> </ListItemIcon>}\r\n                                                <ListItemText>{topic.name}</ListItemText>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <div style={{ overflow: \"hidden\" }}>\r\n                                                        <p style={{ float: \"left\" }}>{TopicScore(topic)} / {TopicPoints(topic)}</p>\r\n                                                        <p style={{ float: \"right\", paddingLeft: 10 }}>{isNaN(Math.round(TopicScore(topic) / TopicPoints(topic) * 10000) / 100) ? 0 : Math.round(TopicScore(topic) / TopicPoints(topic) * 10000) / 100}%</p>\r\n                                                    </div>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            <hr />\r\n                                            <List style={{ color: \"green\" }}>\r\n                                                {topic.criteria.map(crit => {\r\n                                                    return (\r\n                                                        <div key={crit.id}>\r\n                                                            <ListItem key={crit.id} style={{ paddingLeft: 40 }} >\r\n                                                                {crit.description === \"\" || crit.description === null ? null :\r\n                                                                    <ListItemIcon>\r\n                                                                        <CustomTooltip arrow TransitionComponent={Fade} title={crit.description} interactive>\r\n                                                                            <DescriptionOutlined />\r\n                                                                        </CustomTooltip> </ListItemIcon>}\r\n                                                                <ListItemText>{crit.name}</ListItemText>\r\n                                                                <ListItemSecondaryAction>\r\n                                                                    <IconButton disabled={true} edge=\"end\" aria-label=\"Perfect\" style={{ backgroundColor: crit.score === crit.points ? \"rgba(0,255,0, 0.2)\" : null }}>\r\n                                                                        <InsertEmoticonIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={true} edge=\"end\" aria-label=\"Partial\" style={{ backgroundColor: crit.score === crit.points / 2 ? \"rgba(255,255,0, 0.2)\" : null }}>\r\n                                                                        <SentimentSatisfiedIcon />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton disabled={true} edge=\"end\" aria-label=\"Failed\" style={{ backgroundColor: crit.score === 0 ? \"rgba(255,0,0, 0.2)\" : null }}>\r\n                                                                        <SentimentVeryDissatisfiedIcon />\r\n                                                                    </IconButton>\r\n                                                                    <CustomTooltip arrow TransitionComponent={Fade} title={crit.comment} interactive>\r\n                                                                        <IconButton aria-describedby={crit.id} edge=\"end\" aria-label=\"Add comment\" >\r\n                                                                            <AddCommentIcon style={{ color: crit.comment === \"\" ? null : \"green\" }} />\r\n                                                                        </IconButton>\r\n                                                                    </CustomTooltip>\r\n                                                                </ListItemSecondaryAction>\r\n                                                            </ListItem>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                            </List>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div >\r\n                {this.state.overallComment === null ? null :\r\n                    <div style={{ textAlign: \"center\", marginTop: 10, marginLeft: \"15%\", marginRight: \"15%\" }}>\r\n                        <TextField\r\n                            disabled={true}\r\n                            rows={6}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            value={this.state.overallComment}\r\n                            label=\"Comment...\" />\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TopicPoints = (topic) => {\r\n    let sum = 0;\r\n    topic.criteria.forEach(criteria => sum = sum + criteria.points);\r\n    return sum;\r\n}\r\n\r\nconst TopicScore = (topic) => {\r\n    let sum = 0;\r\n    topic.criteria.forEach(criteria => sum = sum + criteria.score);\r\n    return sum;\r\n}\r\n\r\nconst TotalPoints = (topics) => {\r\n    let sum = 0;\r\n    topics.forEach(topic => topic.criteria.forEach(criteria => sum = sum + criteria.points));\r\n    return sum;\r\n}\r\n\r\nconst TotalScore = (topics) => {\r\n    let sum = 0;\r\n    topics.forEach(topic => topic.criteria.forEach(criteria => sum = sum + criteria.score));\r\n    return sum;\r\n}\r\n\r\nexport default CaseView;","import React, { Component } from 'react';\r\nimport CaseView from '../../../Components/User/CaseView/CaseView';\r\nimport { FetchCaseToEdit } from '../../../API/API';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\nclass CaseViewDisplay extends Component {\r\n    state = {\r\n        Case: []\r\n    }\r\n    componentDidMount() {\r\n        let id = window.location.href.toLowerCase().split(\"/viewcase/\")[1];\r\n        FetchCaseToEdit(id).then(response => this.setState({ Case: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Case.length === 0 ? <LoadingScreen /> :\r\n                    <CaseView\r\n                        case={this.state.Case} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CaseViewDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass UserProjectsList extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        let columns = [\r\n            { title: \"Project name\", field: \"name\", customFilterAndSearch: (term, rowData) => rowData.name.toLowerCase().startsWith(term.toLowerCase()) },\r\n            {\r\n                editable: \"never\", title: \"Project's score\", field: \"projectScore\", render: rowData => isNaN(Math.round((rowData.overallScore / rowData.overallPoints) * 10000) / 100) ? \"0%\" : Math.round((rowData.overallScore / rowData.overallPoints) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.overallScore / rowData.overallPoints) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                editable: \"never\", title: \"Your score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                editable: \"never\", title: \"Rating\", field: \"rating\", render: rowData => rowData.rating === 0 ? \"No evaluations\" : rowData.rating + \" / \" + rowData.userCount\r\n            }\r\n\r\n        ];\r\n        this.setState({ columns: columns, open: false })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    icons={tableIcons}\r\n                    title=\"Projects\"\r\n                    columns={this.state.columns}\r\n                    data={this.props.projects.Projects}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProjectsList;","import React, { Component } from 'react';\r\nimport UserProjectsList from '../../../Components/User/UserProjectsList/UserProjectsList';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProjectsReview, changeProjectName, deleteProject, addProject } from '../../../Actions/ProjectsTableActions';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass UserProjectsListDisplay extends Component {\r\n    state = {\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        let id = window.sessionStorage.getItem(\"id\");\r\n        this.props.fetchProjects(id, this.state.minDate, this.state.maxDate);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id = window.sessionStorage.getItem(\"id\");\r\n            this.props.fetchProjects(id, this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.projects === null ? <LoadingScreen /> :\r\n                    <UserProjectsList\r\n                        projects={this.props.projects}\r\n                        minDate={this.state.minDate}\r\n                        maxDate={this.state.maxDate}\r\n                        setMinDate={(date) => this.setState({ minDate: date })}\r\n                        setMaxDate={(date) => this.setState({ maxDate: date })} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.Projects,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProjects: (id, start, end) => dispatch(fetchProjectsReview(id, start, end)),\r\n    addProject: (data) => dispatch(addProject(data)),\r\n    updateProject: (data) => dispatch(changeProjectName(data)),\r\n    deleteProject: (data) => dispatch(deleteProject(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProjectsListDisplay);","import React from \"react\";\r\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\r\nimport { DashboardRounded, AssignmentTurnedInOutlined, WorkRounded } from \"@material-ui/icons\";\r\nimport QLogo from \"../../../Images/QLogo.png\";\r\n// import \"./NavigationBreadcrumbs.scss\";\r\n\r\nconst NavigationBreadcrumbsClient = () => {\r\n    const currentPage = window.location.pathname;\r\n    return (\r\n        <div className=\"Navigation-Breadcrumbs-Wrapper\">\r\n            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5 }}>\r\n                <img style={{ width: 50, height: 50 }} src={QLogo} alt=\"QLoto\" />\r\n            </div>\r\n            <Breadcrumbs separator={<div className={\"Separator\"}>||</div>} className=\"Breadcrumbs\">\r\n                <Link\r\n                    href=\"/projects\"\r\n                    className={currentPage === \"/projects\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <WorkRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Projects\r\n                </Link>\r\n\r\n                <Link\r\n                    href=\"/templates\"\r\n                    className={currentPage === \"/templates\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <DashboardRounded className=\"Icon\" fontSize=\"small\" />\r\n                    Templates\r\n                </Link>\r\n                <Link\r\n                    href=\"/reports\"\r\n                    className={currentPage === \"/reports\" ? \"LinkBold\" : \"Link\"}\r\n                >\r\n                    <AssignmentTurnedInOutlined className=\"Icon\" fontSize=\"small\" />\r\n                    Reports\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ marginTop: 5, marginRight: 5 }}>\r\n                {window.sessionStorage.getItem(\"name\")}\r\n                <br />\r\n                <a style={{ color: \"#DAA1A0\" }} onClick={() => window.sessionStorage.clear()} href=\"/\">Log Out</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavigationBreadcrumbsClient;\r\n","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Chip } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass ClientProjectsList extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        let columns = [\r\n            { title: \"Project name\", field: \"name\", customFilterAndSearch: (term, rowData) => rowData.name.toLowerCase().startsWith(term.toLowerCase()) },\r\n            {\r\n                editable: \"never\",\r\n                title: \"Templates\",\r\n                field: \"templates\",\r\n                render: rowData => <div>{rowData.templates.map(template => <Chip style={{ marginRight: 2, marginTop: 2, backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} key={template.id}\r\n                    label={template.name}\r\n                    onClick={() => window.location.href = \"/viewTemplate/\" + template.id} />)}</div>,\r\n                customFilterAndSearch: (term, rowData) => rowData.templates.some(template => template.name.toLowerCase().startsWith(term.toLowerCase()))\r\n            },\r\n            {\r\n                editable: \"never\", title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseFloat(term)\r\n            },\r\n            {\r\n                title: \"Number of users\", field: \"userCount\", customFilterAndSearch: (term, rowData) => rowData.userCount === parseInt(term), editable: \"never\"\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"caseCount\", customFilterAndSearch: (term, rowData) => rowData.caseCount === parseInt(term), editable: \"never\"\r\n            }\r\n        ];\r\n        this.setState({ columns: columns, open: false })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    icons={tableIcons}\r\n                    title=\"Projects\"\r\n                    columns={this.state.columns}\r\n                    data={this.props.projects}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/projectReview/\" + rowData.id}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientProjectsList;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport ClientProjectsList from '../../../Components/Client/ClientProjectsList/ClientProjectsList';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\nimport { fetchClientProjects } from '../../../Actions/ProjectsTableActions';\r\n\r\nlet date = new Date();\r\nclass ClientProjectsDisplay extends Component {\r\n    state = {\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        let id = window.sessionStorage.getItem(\"id\");\r\n        this.props.fetchProjects(id, this.state.minDate, this.state.maxDate);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id = window.sessionStorage.getItem(\"id\");\r\n            this.props.fetchProjects(id, this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.projects === null ? <LoadingScreen /> :\r\n                    <ClientProjectsList\r\n                        projects={this.props.projects.Projects}\r\n                        minDate={this.state.minDate}\r\n                        maxDate={this.state.maxDate}\r\n                        setMinDate={(date) => this.setState({ minDate: date })}\r\n                        setMaxDate={(date) => this.setState({ maxDate: date })} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.Projects,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProjects: (id, start, end) => dispatch(fetchClientProjects(id, start, end)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientProjectsDisplay);","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass ClientProjectReview extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\", render: rowData => rowData.firstname + \" \" + rowData.lastname,\r\n                customFilterAndSearch: (term, rowData) => rowData.firstname.toLowerCase().startsWith(term.toLowerCase()) ||\r\n                    rowData.lastname.toLowerCase().startsWith(term.toLowerCase())\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => Math.round((rowData.score / rowData.points) * 10000) / 100 === parseFloat(term)\r\n            },\r\n            {\r\n                title: \"Evaluated cases\", field: \"caseCount\", customFilterAndSearch: (term, rowData) => rowData.caseCount === parseInt(term)\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n\r\n\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    title=\"Project's users\"\r\n                    columns={this.state.columns}\r\n                    icons={tableIcons}\r\n                    data={this.props.users}\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            value={this.props.minDate}\r\n                                            maxDate={this.state.maxDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.props.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => window.location.href = \"/userDetails/\" + rowData.id + \"/\" + this.props.projectId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientProjectReview;","import React, { Component } from 'react';\r\nimport ClientProjectReview from '../../../Components/Client/ClientProjectReview/ClientProjectReview';\r\nimport { FetchProjectToReview } from '../../../API/API';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass ClientProjectReviewDisplay extends Component {\r\n    state = {\r\n        Project: null,\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        FetchProjectToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Project: response }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let id = this.props.match.params.id\r\n            FetchProjectToReview(id, this.state.minDate, this.state.maxDate).then(response => this.setState({ Project: response }))\r\n        }\r\n    }\r\n\r\n    calculateOverallScore = () => {\r\n        let score = 0;\r\n        let points = 0;\r\n        this.state.Project.Users.forEach(evaluation => {\r\n            score += evaluation.score;\r\n            points += evaluation.points;\r\n        });\r\n\r\n        let average = Math.round((score / points) * 10000) / 100;\r\n        if (isNaN(average)) {\r\n            average = 0;\r\n        }\r\n        return average;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Project === null ? <LoadingScreen /> : <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <h2 style={{ color: \"#F2F5F9\" }}>Project's name: {this.state.Project.name}</h2>\r\n                        <h2 style={{ color: \"#F2F5F9\" }}>Overall score: {this.calculateOverallScore()}%</h2>\r\n                    </div>\r\n                    <div>\r\n                        <ClientProjectReview\r\n                            projectId={this.state.Project.id}\r\n                            users={this.state.Project.Users}\r\n                            minDate={this.state.minDate}\r\n                            maxDate={this.state.maxDate}\r\n                            setMinDate={(date) => this.setState({ minDate: date })}\r\n                            setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientProjectReviewDisplay;","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass ClientUserReview extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: \"Name\", field: \"name\"\r\n            },\r\n            {\r\n                title: \"Date\", field: \"createdDate\", filtering: false, render: rowData => rowData.createdDate.split(\"T\")[0]\r\n            },\r\n            {\r\n                title: \"Last update\", field: \"updatedDate\", filtering: false, render: rowData => rowData.updatedDate === null ? \"\" : rowData.updatedDate.split(\"T\")[0]\r\n            },\r\n            {\r\n                title: \"Template\", field: \"EvaluationTemplateName\"\r\n            },\r\n            {\r\n                title: \"Score\", field: \"score\", render: rowData => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? \"0%\" : Math.round((rowData.score / rowData.points) * 10000) / 100 + \"%\",\r\n                customFilterAndSearch: (term, rowData) => isNaN(Math.round((rowData.score / rowData.points) * 10000) / 100) ? parseInt(term) === 0 : Math.round((rowData.score / rowData.points) * 10000) / 100 === parseInt(term)\r\n            },\r\n            {\r\n                title: \"Evaluator\", field: \"evaluator\"\r\n            }\r\n        ]\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.minDate !== this.props.minDate || prevProps.maxDate !== this.props.maxDate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    data={this.props.evaluations}\r\n                    columns={this.state.columns}\r\n                    title=\"Evaluations\"\r\n                    icons={tableIcons}\r\n                    options={{\r\n                        filtering: true,\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10\r\n                    }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                            <div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <MTableToolbar {...props} />\r\n                                    <div style={{ marginLeft: 10 }}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"Start date\"\r\n                                            maxDate={this.state.maxDate}\r\n                                            value={this.props.minDate}\r\n                                            onChange={e => this.props.setMinDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                        <KeyboardDatePicker\r\n                                            style={{ marginLeft: 10 }}\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            margin=\"normal\"\r\n                                            label=\"End date\"\r\n                                            value={this.props.maxDate}\r\n                                            minDate={this.state.minDate}\r\n                                            maxDate={new Date()}\r\n                                            onChange={e => this.props.setMaxDate(e)}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n\r\n                        ),\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => event.target.tagName === \"SPAN\" ? null : window.location.href = \"/viewCase/\" + rowData.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientUserReview;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport ClientUserReview from '../../../Components/Client/ClientUserReview/ClientUserReview';\r\nimport { fetchProjectUsersEvaluations } from '../../../Actions/UserEvaluationListActions';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\n\r\nlet date = new Date();\r\nclass ClientUserReviewDisplay extends Component {\r\n    state = {\r\n        User: [],\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        let projectId = this.props.match.params.projectId;\r\n        this.props.fetchProjectUsersEvaluations(userId, projectId, this.state.minDate, this.state.maxDate);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.minDate !== this.state.minDate || prevState.maxDate !== this.state.maxDate) {\r\n            let userId = this.props.match.params.userId;\r\n            let projectId = this.props.match.params.projectId;\r\n            this.props.fetchProjectUsersEvaluations(userId, projectId, this.state.minDate, this.state.maxDate);\r\n        }\r\n    }\r\n\r\n    calculateOverallScore = () => {\r\n        let score = 0;\r\n        let points = 0;\r\n        this.props.evaluations.Evaluations.forEach(evaluation => {\r\n            score += evaluation.score;\r\n            points += evaluation.points;\r\n        });\r\n\r\n        let average = Math.round((score / points) * 10000) / 100;\r\n        if (isNaN(average)) {\r\n            average = 0;\r\n        }\r\n        return average;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.evaluations === null ? <LoadingScreen /> :\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>User: {this.props.evaluations.firstname + \" \" + this.props.evaluations.lastname}</h3>\r\n                            <h3 style={{ color: \"#F2F5F9\" }}>Overall score: {this.calculateOverallScore()}%</h3>\r\n                        </div>\r\n                        <div style={{ marginTop: 20, marginBottom: 100 }}>\r\n                            <ClientUserReview\r\n                                evaluations={this.props.evaluations.Evaluations}\r\n                                deleteEvaluation={this.props.deleteEvaluation}\r\n                                minDate={this.state.minDate}\r\n                                maxDate={this.state.maxDate}\r\n                                setMinDate={(date) => this.setState({ minDate: date })}\r\n                                setMaxDate={(date) => this.setState({ maxDate: date })} />\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    evaluations: state.Evaluations\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProjectUsersEvaluations: (userId, projectId, start, end) => dispatch(fetchProjectUsersEvaluations(userId, projectId, start, end)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientUserReviewDisplay);","import React, { Component, forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nclass ClientTemplatesList extends Component {\r\n    state = {\r\n        columns: [\r\n            { title: 'Template name', field: 'name', customFilterAndSearch: (term, rowData) => rowData.name.toLowerCase().startsWith(term.toLowerCase()) },\r\n        ]\r\n    }\r\n    render() {\r\n        const tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                <MaterialTable\r\n                    title=\"Templates\"\r\n                    icons={tableIcons}\r\n                    data={this.props.templates}\r\n                    columns={this.state.columns}\r\n                    options={{\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10,\r\n                        filtering: true\r\n                    }}\r\n                    onRowClick={(event, rowData, togglePanel) => window.location.href = \"/viewTemplate/\" + rowData.id}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientTemplatesList;","import React, { Component } from 'react';\r\nimport ClientTemplatesList from '../../../Components/Client/ClientTemplatesList/ClientTemplatesList';\r\nimport { connect } from \"react-redux\";\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\nimport { fetchClientTemplates } from '../../../Actions/TemplateDisplayActions';\r\n\r\nclass ClientTemplatesDisplay extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        let id = window.sessionStorage.getItem(\"id\");\r\n        this.props.fetchTemplates(id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.templates === null ? <LoadingScreen /> :\r\n                    <div>\r\n                        <ClientTemplatesList\r\n                            templates={this.props.templates} />\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    templates: state.Templates\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchTemplates: (id) => dispatch(fetchClientTemplates(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientTemplatesDisplay);","import React, { Component } from 'react';\r\nimport { List, ListItem, ListItemText, TextField, IconButton, ListSubheader, ListItemIcon, Collapse, Chip } from '@material-ui/core';\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport UnifiedModal from '../../Core-Components/UnifiedModal';\r\nimport DefaultTextArea from '../../Core-Components/DefaultTextArea/DefaultTextArea';\r\nimport ButtonBlock from '../../Core-Components/UnifiedModal/ButtonBlock/ButtonBlock';\r\n\r\nconst calculateSum = (criteria) => {\r\n    let sum = 0;\r\n    criteria.forEach(temp => sum += parseInt(temp.points));\r\n    return sum;\r\n}\r\n\r\nclass TemplateViewer extends Component {\r\n    UNSAFE_componentWillMount() {\r\n        this.setState({\r\n            modalOpen: false,\r\n            criteriaModalOpen: false,\r\n            commentTopicId: null,\r\n            criteriaId: null,\r\n            id: this.props.template.id,\r\n            templateName: this.props.template.TemplateName,\r\n            topics: [],\r\n            criteria: [],\r\n            categories: this.props.template.Categories\r\n        });\r\n        let criteria = [];\r\n        let topics = [];\r\n        this.props.template.Topics.forEach(temp => {\r\n            topics.push({\r\n                id: temp.id,\r\n                name: temp.name,\r\n                critical: temp.critical,\r\n                description: temp.description,\r\n                editing: false,\r\n                open: true\r\n            });\r\n        });\r\n        this.props.template.Criteria.forEach(temp => {\r\n            criteria.push({\r\n                id: temp.id,\r\n                name: temp.name,\r\n                points: temp.points,\r\n                description: temp.description,\r\n                parentId: temp.parentId,\r\n                editing: false,\r\n            });\r\n        });\r\n        this.setState({\r\n            topics: [...topics],\r\n            criteria: [...criteria]\r\n        })\r\n    }\r\n    state = {}\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginBottom: 30 }}>\r\n                <UnifiedModal open={this.state.modalOpen} title=\"Description\">\r\n                    <DefaultTextArea disabled={true} defaultValue={this.state.modalOpen ? this.state.topics.find(topic => topic.id === this.state.commentTopicId).description : \"\"} label=\"Add description...\" maxLength={600} onChange={e => {\r\n                        let TempTopics = [...this.state.topics];\r\n                        TempTopics.find(topic => topic.id === this.state.commentTopicId).description = e.target.value;\r\n                        this.setState({\r\n                            topics: [...TempTopics]\r\n                        })\r\n                    }} />\r\n                    <ButtonBlock label=\"Exit\" onSave={() => this.setState({ modalOpen: false, commentTopicId: null })} />\r\n                </UnifiedModal>\r\n                <UnifiedModal open={this.state.criteriaModalOpen} title=\"Description\">\r\n                    <DefaultTextArea defaultValue={this.state.criteriaModalOpen ? this.state.criteria.find(topic => topic.id === this.state.criteriaId).description : \"\"} label=\"Add description...\" maxLength={600} onChange={e => {\r\n                        let TempCriteria = [...this.state.criteria];\r\n                        TempCriteria.find(topic => topic.id === this.state.criteriaId).description = e.target.value;\r\n                        this.setState({\r\n                            criteria: [...TempCriteria]\r\n                        })\r\n                    }} />\r\n                    <ButtonBlock onSave={() => this.setState({ criteriaModalOpen: false, criteriaId: null })} />\r\n                </UnifiedModal>\r\n                <div style={{ marginLeft: \"15%\", marginRight: \"15%\", marginTop: 25, borderRadius: 10, background: \"rgba(242, 245, 249, 0.6)\", textAlign: \"center\" }}>\r\n                    <TextField inputProps={{ style: { textAlign: 'center' } }} disabled={true} style={{ paddingBottom: 15, width: 250 }} defaultValue={this.state.templateName} label=\"Template name\" onChange={e => this.setState({ templateName: e.target.value })} />\r\n                    <div className=\"ButtonBlock\" >\r\n                        <div style={{ marginLeft: \"15%\", marginRight: \"15%\", marginTop: 15, marginBottom: 15 }}>\r\n                            {this.state.categories.map(category => {\r\n                                return (\r\n                                    <Chip style={{ backgroundColor: \"rgba(218, 161, 160, 0.5)\" }} label={category} />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <p style={{ marginTop: 10 }}><b>Overall Points: {calculateSum(this.state.criteria)}</b></p>\r\n                    <List style={{ color: \"red\" }}>\r\n                        <ListSubheader disableSticky component=\"div\" style={{ color: \"red\" }} >\r\n                            Criticals\r\n                    </ListSubheader>\r\n                        {this.state.topics.filter(topic => topic.critical).map(entry => {\r\n                            return (\r\n                                <ListItem button key={entry.id} onClick={e => {\r\n                                    let id = entry.id;\r\n                                    let tempTopics = [...this.state.topics];\r\n                                    tempTopics.find(critical => critical.id === id).editing = true;\r\n                                    this.setState({\r\n                                        editing: true,\r\n                                        topics: tempTopics\r\n                                    });\r\n                                }}>\r\n                                    <ListItemIcon>\r\n                                        <IconButton onClick={() => this.setState({ modalOpen: true, commentTopicId: entry.id })}>\r\n                                            <DescriptionIcon style={{ color: entry.description === \"\" ? null : \"green\" }} />\r\n                                        </IconButton>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText>{entry.name}</ListItemText>\r\n                                </ListItem>);\r\n                        })}\r\n                    </List>\r\n                    <hr />\r\n                    <List style={{ color: \"blue\" }}>\r\n                        <ListSubheader disableSticky component=\"div\" >\r\n                            Topics and Criterias\r\n                    </ListSubheader>\r\n                        {this.state.topics.filter(topic => !topic.critical).map(entry => {\r\n                            return (\r\n                                <div key={entry.id}>\r\n                                    <React.Fragment>\r\n                                        <ListItem button>\r\n                                            <ListItemIcon>\r\n                                                <IconButton onClick={() => this.setState({ modalOpen: true, commentTopicId: entry.id })}>\r\n                                                    <DescriptionIcon style={{ color: entry.description === \"\" ? null : \"green\" }} />\r\n                                                </IconButton>\r\n                                            </ListItemIcon>\r\n                                            <ListItemIcon>\r\n                                                <IconButton onClick={() => {\r\n                                                    let tempTopics = [...this.state.topics];\r\n                                                    tempTopics.find(temp => temp.id === entry.id).open = !entry.open;\r\n                                                    this.setState({\r\n                                                        topics: tempTopics\r\n                                                    });\r\n                                                }}> {entry.open ? <ExpandLess /> : <ExpandMore />}</IconButton>\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{entry.name}</ListItemText>\r\n                                            <ListItemText style={{ textAlign: \"right\", marginRight: 80 }}>{<p>Points: {calculateSum(this.state.criteria.filter(temp => temp.parentId === entry.id))}</p>}</ListItemText>\r\n                                        </ListItem>\r\n                                    </React.Fragment>\r\n                                    <List style={{ color: \"green\" }}>\r\n                                        {this.state.criteria.filter(criteria => criteria.parentId === entry.id).map(criteria => {\r\n                                            return (\r\n                                                <Collapse in={entry.open} key={criteria.id}>\r\n                                                    <ListItem key={criteria.id} button style={{ paddingLeft: 150 }} onClick={() => {\r\n                                                        let id = criteria.id;\r\n                                                        let tempCriteria = [...this.state.criteria];\r\n                                                        tempCriteria.find(criteria => criteria.id === id).editing = true;\r\n                                                        this.setState({\r\n                                                            editing: true,\r\n                                                            criteria: tempCriteria\r\n                                                        })\r\n                                                    }}>\r\n                                                        <ListItemIcon>\r\n                                                            <IconButton onClick={() => this.setState({ criteriaModalOpen: true, criteriaId: criteria.id })}>\r\n                                                                <DescriptionIcon style={{ color: criteria.description === \"\"  || criteria.description === null ? null : \"green\" }} />\r\n                                                            </IconButton>\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText>{criteria.name}</ListItemText>\r\n                                                        <ListItemText style={{ textAlign: \"right\", paddingRight: 80 }}>{criteria.points}</ListItemText>\r\n                                                    </ListItem>\r\n                                                </Collapse>)\r\n                                        })}\r\n                                    </List>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </List>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemplateViewer;","import React, { Component } from 'react';\r\nimport TemplateViewer from '../../../Components/Client/TemplateViewer/TemplateViewer';\r\nimport { FetchTemplateToEdit } from '../../../API/API';\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\n\r\nclass TemplateViewerDisplay extends Component {\r\n    state = {\r\n        template: []\r\n    }\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id;\r\n        FetchTemplateToEdit(id).then(response => this.setState({ template: response }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.template.length === 0 ? <LoadingScreen /> :\r\n                    <TemplateViewer\r\n                        template={this.state.template} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemplateViewerDisplay;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { FetchUserReport } from \"../../../API/API\";\r\nimport LoadingScreen from '../../../Components/LoadingScreen/LoadingScreen';\r\nimport UserReport from '../../../Components/UserReport/UserReport';\r\nimport { DownloadUserReport } from '../../../API/DownloadAPI';\r\n\r\nlet date = new Date();\r\nclass UserReportsDisplay extends Component {\r\n    state = {\r\n        minDate: new Date(date.getFullYear(), date.getMonth(), 1),\r\n        maxDate: new Date(),\r\n        Report: [],\r\n        loading: false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ marginLeft: 10, marginTop: 15, display: \"block\" }}>\r\n                    <div style={{ float: \"left\", paddingTop: 30, marginRight: 15 }}>\r\n                    </div>\r\n                    <div style={{ float: \"left\" }}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"yyyy-MM-dd\"\r\n                                margin=\"normal\"\r\n                                label=\"Start date\"\r\n                                value={this.state.minDate}\r\n                                maxDate={this.state.maxDate}\r\n                                onChange={e => this.setState({ minDate: e })}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <KeyboardDatePicker\r\n                                style={{ marginLeft: 10 }}\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"yyyy-MM-dd\"\r\n                                margin=\"normal\"\r\n                                label=\"End date\"\r\n                                value={this.state.maxDate}\r\n                                minDate={this.state.minDate}\r\n                                maxDate={new Date()}\r\n                                onChange={e => this.setState({ maxDate: e })}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <Button style={{\r\n                            marginTop: 30, marginLeft: 15, backgroundColor: \"#DAA1A0\", color: \"#F2F5F9\"\r\n                        }} variant=\"outlined\"\r\n                            onClick={() => {\r\n                                if (this.state.Report.length !== 0) {\r\n                                    this.setState({ Report: [] });\r\n                                }\r\n                                this.setState({ loading: true });\r\n                                FetchUserReport(window.sessionStorage.getItem(\"id\"), this.state.minDate, this.state.maxDate).then(response => this.setState({ Report: response, loading: false }))\r\n                            }}\r\n                        >Generate report</Button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ clear: \"both\" }}>\r\n                    {this.state.Report.length === 0 ? this.state.loading ? <LoadingScreen /> : null :\r\n                        <UserReport report={this.state.Report} download={() => DownloadUserReport(window.sessionStorage.getItem(\"id\"), this.state.minDate, this.state.maxDate)} />}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserReportsDisplay;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport ProjectsDisplay from \"./Containers/ProjectsDisplay/ProjectsDisplay\";\r\nimport ReportsDisplay from \"./Containers/ReportsDisplay/ReportsDisplay\";\r\nimport TeamsDisplay from \"./Containers/TeamsDisplay/TeamsDisplay\";\r\nimport TemplatesDisplay from \"./Containers/TemplatesDisplay/TemplatesDisplay\";\r\nimport ArchiveDisplay from \"./Containers/ArchiveDisplay/ArchiveDisplay\";\r\nimport UserListDisplay from './Containers/UserListDisplay/UserListDisplay';\r\nimport LoginDisplay from './Containers/LoginDisplay/LoginDisplay';\r\nimport TemplateCreatorDisplay from \"./Containers/TemplateCreatorDisplay/TemplateCreatorDisplay\";\r\nimport TemplateEditorDisplay from \"./Containers/TemplateEditorDisplay/TemplateEditorDisplay\";\r\nimport ProjectDetailsDisplay from './Containers/ProjectDetailsDisplay/ProjectDetailsDisplay';\r\nimport UsersProjectsDisplay from './Containers/UsersProjectsDisplay/UsersProjectsDisplay';\r\nimport TemplateProjectsDisplay from './Containers/TemplateProjectsDisplay/TemplateProjectsDisplay';\r\nimport TeamMembersDisplay from './Containers/TeamMembersDisplay/TeamMembersDisplay';\r\nimport ProjectsTemplatesDisplay from './Containers/ProjectsTemplatesDisplay/ProjectsTemplatesDisplay';\r\nimport UserReviewDisplay from './Containers/UserReviewDisplay/UserReviewDisplay';\r\nimport CaseCreatorDisplay from './Containers/CaseCreatorDisplay/CaseCreatorDisplay';\r\nimport CaseEditorDisplay from './Containers/CaseEditorDisplay/CaseEditorDisplay';\r\nimport TeamReviewDisplay from './Containers/TeamReviewDisplay/TeamReviewDisplay';\r\nimport ProjectsReviewDisplay from './Containers/ProjectsReviewDisplay/ProjectsReviewDisplay';\r\nimport EvaluationsDisplay from './Containers/User/EvaluationsDisplay/EvaluationsDisplay';\r\nimport NavigationBreadcrumbsAdmin from './Components/NavigationBreadcrumbsAdmin/NavigationBreadcrumbsAdmin';\r\nimport CredentialsDisplay from './Containers/User/CredentialsDisplay/CredentialsDisplay';\r\nimport NavigationBreadcrumbsUser from './Components/User/NavigationBreadcrumbsUser';\r\nimport CaseViewDisplay from './Containers/User/CaseViewDisplay/CaseViewDisplay';\r\nimport UserProjectsListDisplay from './Containers/User/UserProjectsListDisplay/UserProjectsListDisplay';\r\nimport NavigationBreadcrumbsClient from './Components/Client/NavigationBreadcrumbsClient';\r\nimport ClientProjectsDisplay from './Containers/Client/ClientProjectsDisplay/ClientProjectsDisplay';\r\nimport ClientProjectReviewDisplay from './Containers/Client/ClientProjectReviewDisplay/ClientProjectReviewDisplay';\r\nimport ClientUserReviewDisplay from './Containers/Client/ClientUserReviewDisplay/ClientUserReviewDisplay';\r\nimport ClientTemplatesDisplay from './Containers/Client/ClientTemplatesDisplay/ClientTemplatesDisplay';\r\nimport TemplateViewerDisplay from './Containers/Client/TemplateViewerDisplay/TemplateViewerDisplay';\r\nimport UserReportsDisplay from './Containers/User/UserReportsDisplay/ClientReportsDisplay';\r\n\r\nclass Routing extends Component {\r\n    state = {}\r\n    render() {\r\n        let role = window.sessionStorage.getItem('role');\r\n        if (role === \"admin\") {\r\n            return (\r\n                <div>\r\n                    <NavigationBreadcrumbsAdmin />\r\n                    <React.Fragment>\r\n                        <Switch>\r\n                            <Route path=\"/projects\">\r\n                                <ProjectsDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/ProjectReview/:id\">\r\n                                <ProjectsReviewDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/ProjectDetails/:id\">\r\n                                <ProjectDetailsDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/ProjectTemplates/:id\">\r\n                                <ProjectsTemplatesDisplay />\r\n                            </Route>\r\n                            <Route path=\"/reports\">\r\n                                <ReportsDisplay />\r\n                            </Route>\r\n                            <Route path=\"/teams\">\r\n                                <TeamsDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/teamMembers/:id\">\r\n                                <TeamMembersDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/teamDetails/:id\">\r\n                                <TeamReviewDisplay />\r\n                            </Route>\r\n                            <Route path=\"/templates\">\r\n                                <TemplatesDisplay />\r\n                            </Route>\r\n                            <Route path=\"/newTemplate\">\r\n                                <TemplateCreatorDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/TemplateProjects/:id\">\r\n                                <TemplateProjectsDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/EditTemplate/:id\">\r\n                                <TemplateEditorDisplay />\r\n                            </Route>\r\n                            <Route path=\"/archives\">\r\n                                <ArchiveDisplay />\r\n                            </Route>\r\n                            <Route path=\"/ArchivedUser/:id\" component={EvaluationsDisplay}>\r\n                            </Route>\r\n                            <Route exact path=\"/viewCase/:id\">\r\n                                <CaseViewDisplay />\r\n                            </Route>\r\n                            <Route path=\"/users\">\r\n                                <UserListDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/userDetails/:id\">\r\n                                <UserReviewDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/UsersProjects/:id\">\r\n                                <UsersProjectsDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/newCase/:userId\">\r\n                                <CaseCreatorDisplay />\r\n                            </Route>\r\n                            <Route exact path=\"/editCase/:id\">\r\n                                <CaseEditorDisplay />\r\n                            </Route>\r\n                            <Route>\r\n                                <Redirect to=\"/projects\" />\r\n                            </Route>\r\n                        </Switch>\r\n                    </React.Fragment>\r\n                </div>\r\n            );\r\n        }\r\n        else if (role === \"user\") {\r\n            return (\r\n                <div>\r\n                    <NavigationBreadcrumbsUser />\r\n                    <Switch>\r\n                        <Route path=\"/evaluations\">\r\n                            <EvaluationsDisplay />\r\n                        </Route>\r\n                        <Route path=\"/credentials\">\r\n                            <CredentialsDisplay />\r\n                        </Route>\r\n                        <Route exact path=\"/viewCase/:id\">\r\n                            <CaseViewDisplay />\r\n                        </Route>\r\n                        <Route path=\"/projects\">\r\n                            <UserProjectsListDisplay />\r\n                        </Route>\r\n                        <Route path=\"/reports\">\r\n                            <UserReportsDisplay />\r\n                        </Route>\r\n                        <Route>\r\n                            <Redirect to=\"/evaluations\" />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            );\r\n        }\r\n        else if (role === \"client\") {\r\n            return (\r\n                <div>\r\n                    <NavigationBreadcrumbsClient />\r\n                    <Switch>\r\n                        <Route path=\"/projects\">\r\n                            <ClientProjectsDisplay />\r\n                        </Route>\r\n                        <Route exact path=\"/projectReview/:id\" component={ClientProjectReviewDisplay}>\r\n                        </Route>\r\n                        <Route exact path=\"/userDetails/:userId/:projectId\" component={ClientUserReviewDisplay}>\r\n                        </Route>\r\n                        <Route exact path=\"/viewCase/:id\">\r\n                            <CaseViewDisplay />\r\n                        </Route>\r\n                        <Route path=\"/templates\">\r\n                            <ClientTemplatesDisplay />\r\n                        </Route>\r\n                        <Route path=\"/viewTemplate/:id\" component={TemplateViewerDisplay}>\r\n                        </Route>\r\n                        <Route path=\"/reports\">\r\n                            <ReportsDisplay />\r\n                        </Route>\r\n                        <Route>\r\n                            <Redirect to=\"/projects\" />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Switch>\r\n                        <Route path=\"/\">\r\n                            <LoginDisplay />\r\n                        </Route>\r\n                        <Route>\r\n                            <Redirect to=\"/\" />\r\n                        </Route>\r\n                    </Switch>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Routing;","import { ActionType } from \"../Constants/ActionType\";\r\n\r\nconst initialState = {\r\n    Users: null,\r\n    Templates: null,\r\n    Projects: null,\r\n    Teams: null,\r\n    Evaluations: null\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionType.LOAD_USERS: {\r\n            return {\r\n                ...state,\r\n                Users: action.payload\r\n            };\r\n        }\r\n\r\n        case ActionType.CREATE_USER: {\r\n            return {\r\n                ...state,\r\n                Users: [...state.Users, action.payload]\r\n            }\r\n        }\r\n\r\n        case ActionType.UPDATE_USER: {\r\n            let updatedUser = action.payload;\r\n            let index = state.Users.indexOf(state.Users.find(user => user.id === updatedUser.id));\r\n            let tempUsers = [...state.Users];\r\n            tempUsers[index] = updatedUser;\r\n            return {\r\n                ...state,\r\n                Users: [...tempUsers]\r\n            }\r\n        }\r\n\r\n        case ActionType.ARCHIVE_USER: {\r\n            let oldUserId = action.payload.id;\r\n            let index = state.Users.indexOf(state.Users.find(user => user.id === oldUserId));\r\n            let tempUsers = [...state.Users];\r\n            tempUsers[index].isArchived = true;\r\n            return {\r\n                ...state,\r\n                Users: [...tempUsers]\r\n            }\r\n        }\r\n\r\n        case ActionType.LOAD_ARCHIVED_USERS: {\r\n            return {\r\n                ...state,\r\n                Users: action.payload\r\n            };\r\n        }\r\n\r\n        case ActionType.DELETE_USER: {\r\n            let oldUserId = action.payload.id;\r\n            return {\r\n                ...state,\r\n                Users: state.Users.filter(user => user.id !== oldUserId)\r\n            }\r\n        }\r\n\r\n        case ActionType.UNARCHIVE_USER: {\r\n            let oldUserId = action.payload.id;\r\n            let index = state.Users.indexOf(state.Users.find(user => user.id === oldUserId));\r\n            let tempUsers = [...state.Users];\r\n            tempUsers[index].isArchived = false;\r\n            return {\r\n                ...state,\r\n                Users: [...tempUsers]\r\n            }\r\n        }\r\n\r\n        case ActionType.LOAD_TEMPLATE_LIST: {\r\n            let templates = action.payload;\r\n            // let templateNames = [];\r\n            // templates.forEach(template => {\r\n            //     templateNames.push({\r\n            //         id: template.id,\r\n            //         name: template.name\r\n            //     });\r\n            //     let projects = [];\r\n            //     template.Projects.forEach(project => {\r\n            //         projects.push({\r\n            //             id: project.id,\r\n            //             name: project.name\r\n            //         });\r\n            //     });\r\n            //     templateNames.Projects = projects;\r\n            // });\r\n            return {\r\n                ...state,\r\n                Templates: templates\r\n            }\r\n        }\r\n\r\n        case ActionType.LOAD_TEMPLATE: {\r\n            if (state.TemplateToEdit !== null) {\r\n                state.TemplateToEdit = null;\r\n            }\r\n            let id = action.payload;\r\n            let templateToEdit = state.Templates.find(template => template.id === id);\r\n            return {\r\n                ...state,\r\n                TemplateToEdit: templateToEdit\r\n            }\r\n        }\r\n\r\n        case ActionType.CREATE_TEMPLATE: {\r\n            let template = action.payload;\r\n            let tempTemplates = [...state.Templates];\r\n            tempTemplates.push(template);\r\n            return {\r\n                ...state,\r\n                Templates: tempTemplates\r\n            }\r\n        }\r\n\r\n        case ActionType.UPDATE_TEMPLATE: {\r\n            let template = action.payload;\r\n            let tempTemplates = [...state.Templates];\r\n            let index = tempTemplates.indexOf(tempTemplates.find(temp => temp.id === template.id));\r\n            tempTemplates[index] = template;\r\n            return {\r\n                ...state,\r\n                Templates: [...tempTemplates]\r\n            }\r\n        }\r\n\r\n        case ActionType.DELETE_TEMPLATE: {\r\n            let templateId = action.payload;\r\n            return {\r\n                ...state,\r\n                Templates: state.Templates.filter(template => template.id !== templateId)\r\n            }\r\n        }\r\n\r\n        case ActionType.COPY_TEMPLATE: {\r\n            let newTemplate = action.payload;\r\n            let templates = [...state.Templates];\r\n            templates.push(newTemplate);\r\n            return {\r\n                ...state,\r\n                Templates: templates\r\n            }\r\n        }\r\n\r\n        case ActionType.LOAD_PROJECTS: {\r\n            return {\r\n                ...state,\r\n                Projects: action.payload\r\n            }\r\n        }\r\n\r\n        case ActionType.CREATE_PROJECT: {\r\n            let createdProject = action.payload;\r\n            return {\r\n                ...state,\r\n                Projects: [...state.Projects, createdProject]\r\n            }\r\n        }\r\n\r\n        case ActionType.UPDATE_PROJECT: {\r\n            let updatedProject = action.payload;\r\n            let TempProjects = [...state.Projects];\r\n            let index = TempProjects.indexOf(TempProjects.find(temp => temp.id === updatedProject.id));\r\n            TempProjects[index] = updatedProject;\r\n            return {\r\n                ...state,\r\n                Projects: [...TempProjects]\r\n            }\r\n        }\r\n\r\n        case ActionType.DELETE_PROJECT: {\r\n            let id = action.payload.id;\r\n            return {\r\n                ...state,\r\n                Projects: [...state.Projects.filter(project => project.id !== id)]\r\n            }\r\n        }\r\n\r\n        case ActionType.LOAD_TEAM_LIST: {\r\n            return {\r\n                ...state,\r\n                Teams: action.payload\r\n            }\r\n        }\r\n\r\n        case ActionType.CREATE_TEAM: {\r\n            return {\r\n                ...state,\r\n                Teams: [...state.Teams, action.payload]\r\n            }\r\n        }\r\n\r\n        case ActionType.UPDATE_TEAM: {\r\n            let tempTeams = [...state.Teams];\r\n            let updatedTeam = action.payload;\r\n            let index = tempTeams.indexOf(tempTeams.find(team => team.id === updatedTeam.id));\r\n            tempTeams[index] = updatedTeam;\r\n            return {\r\n                ...state,\r\n                Teams: [...tempTeams]\r\n            }\r\n\r\n        }\r\n\r\n        case ActionType.DELETE_TEAM: {\r\n            let teamId = action.payload;\r\n            return {\r\n                ...state,\r\n                Teams: state.Teams.filter(team => team.id !== teamId)\r\n            }\r\n        }\r\n\r\n        case ActionType.LOAD_USERS_EVALUATIONS: {\r\n            let evaluations = action.payload;\r\n            return {\r\n                ...state,\r\n                Evaluations: evaluations\r\n            }\r\n        }\r\n\r\n        case ActionType.DELETE_EVALUATION: {\r\n            let id = action.payload;\r\n            let tempEvaluations = state.Evaluations;\r\n            tempEvaluations.Evaluations = tempEvaluations.Evaluations.filter(temp => temp.id !== id);\r\n            return {\r\n                ...state,\r\n                Evaluations: tempEvaluations\r\n            }\r\n        }\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(...middlewares)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Routing from './Routing';\r\nimport store from \"./Store/store\";\r\n\r\nclass App extends Component {\r\n  state = {}\r\n  componentDidMount() {\r\n    document.title = \"Rate The Comrade\"\r\n  }\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Routing />\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport background from \"./Images/background.jpg\";\r\n\r\nconst divStyle = {\r\n  position: \"fixed\",\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  backgroundImage: `url(${background})`,\r\n  backgroundSize: 'cover',\r\n  overflowY: \"auto\",\r\n  color: \"rgba(242, 245, 249)\"\r\n};\r\n\r\nReactDOM.render(\r\n\r\n  <div style={divStyle}>\r\n    <App />\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}
